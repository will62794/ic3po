
Printing isolate this:
OK
	(mode: ic3po)
	(reuse: 1)
	(opt: 1)
	(const: 1)
	(wires: 1)
	(using z3 4.8.10.0 with seed 0)
@     0s  Reading from file results/consensus_epr/consensus_epr.vmt
	(found sort dependency: node -> quorum)
-----------------------------------------------------------------

Action inputs:
	ext:recv_vote: set([V__fml:sender, V__fml:n])
	ext:decide: set([V__fml:v, V__fml:n])
	ext:send_request_vote: set([V__fml:dst, V__fml:src])
	ext:send_vote: set([V__fml:dst, V__fml:src])
	ext:become_leader: set([V__fml:q, V__fml:n])

Action definitions:
	ext:recv_vote: {}
	ext:decide: {}
	ext:send_request_vote: {}
	ext:send_vote: {}
	ext:become_leader: {}

Action preconditions:

	ext:recv_vote:
		__vote_msg(V__fml:sender, V__fml:n)

	ext:decide:
		__leader(V__fml:n)
		(forall V . ~__decided(V__fml:n, V))

	ext:send_request_vote:

	ext:send_vote:
		~__voted(V__fml:src)
		__vote_request_msg(V__fml:dst, V__fml:src)

	ext:become_leader:
		(forall N . (member(N, V__fml:q) -> __votes(V__fml:n, N)))

Action postconditions:

	ext:recv_vote:
		(forall V0, V118 . (votes(V0, V118) <-> (((V0 = V__fml:n) & (V118 = V__fml:sender)) ? True : __votes(V0, V118))))

	ext:decide:
		(forall V0, V1 . (decided(V0, V1) <-> (((V0 = V__fml:n) & (V1 = V__fml:v)) ? True : __decided(V0, V1))))

	ext:send_request_vote:
		(forall V0, V120 . (vote_request_msg(V0, V120) <-> (((V0 = V__fml:src) & (V120 = V__fml:dst)) ? True : __vote_request_msg(V0, V120))))

	ext:send_vote:
		(forall V0, V119 . (vote_msg(V0, V119) <-> (((V0 = V__fml:src) & (V119 = V__fml:dst)) ? True : __vote_msg(V0, V119))))
		(forall V0 . (voted(V0) <-> ((V0 = V__fml:src) ? True : __voted(V0))))
		(forall X0, X1 . (~vote_request_msg(X0, X1) | __vote_request_msg(X0, X1) | (X0 = V__fml:src)))
		(forall X0, X1 . (~vote_request_msg(X0, X1) | __vote_request_msg(X0, X1) | (X1 = V__fml:dst)))
		(forall X0, X1 . (vote_request_msg(X0, X1) | ~__vote_request_msg(X0, X1) | (X0 = V__fml:src)))
		(forall X0, X1 . (vote_request_msg(X0, X1) | ~__vote_request_msg(X0, X1) | (X1 = V__fml:dst)))

	ext:become_leader:
		(forall V0 . (leader(V0) <-> ((V0 = V__fml:n) ? True : __leader(V0))))

Update map:
	votes ->  ext:recv_vote
	vote_request_msg ->  ext:send_request_vote ext:send_vote ext:send_vote ext:send_vote ext:send_vote
	vote_msg ->  ext:send_vote
	leader ->  ext:become_leader
	voted ->  ext:send_vote
	decided ->  ext:decide

stratifying state variables:

stratifying axioms:
	skolem arc: quorum -> node

stratifying action ext:send_request_vote:

stratifying action ext:decide:

stratifying action ext:recv_vote:

stratifying action ext:send_vote:

stratifying action ext:become_leader:

stratifying property:
    pos:
    neg:
	(epr: True)

stratifying helpers:

Arcs:
	quorum -> node

EPR: True
-----------------------------------------------------------------
	(gen: prefer_epr)
-----------------------------------------------------------------
	(found #5 actions)
adding #5 noops to action ext:send_request_vote
	noop(votes)
	noop(vote_msg)
	noop(leader)
	noop(voted)
	noop(decided)
adding #5 noops to action ext:decide
	noop(votes)
	noop(vote_request_msg)
	noop(vote_msg)
	noop(leader)
	noop(voted)
adding #5 noops to action ext:recv_vote
	noop(vote_request_msg)
	noop(vote_msg)
	noop(leader)
	noop(voted)
	noop(decided)
adding #3 noops to action ext:send_vote
	noop(votes)
	noop(leader)
	noop(decided)
adding #5 noops to action ext:become_leader
	noop(votes)
	noop(vote_request_msg)
	noop(vote_msg)
	noop(voted)
	noop(decided)
-----------------------------------------------------------------
Init #1
	((forall V0, V115 . ~__vote_request_msg(V0, V115)) & (forall V0 . ~__voted(V0)) & (forall V0, V116 . ~__vote_msg(V0, V116)) & (forall V0, V117 . ~__votes(V0, V117)) & (forall V0 . ~__leader(V0)) & (forall V0, V1 . ~__decided(V0, V1)))
		with variables frozenset([__votes, __vote_request_msg, __vote_msg, __leader, __voted, __decided])

Axioms #1
	(forall Q1, Q2 . (exists N . (member(N, Q1) & member(N, Q2))))
		with variables frozenset([member])

Actions #6
	0:	ext:send_request_vote (en: en_ext:send_request_vote)	((forall V0, V120 . (vote_request_msg(V0, V120) <-> ((... & ...) ? True : ...(..., ...)))) & (forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))
		with variables frozenset([__votes, __vote_request_msg, __vote_msg, __leader, __voted, __decided, votes, vote_request_msg, vote_msg, leader, voted, decided, V__fml:dst, V__fml:src])
	1:	ext:decide (en: en_ext:decide)	(((forall V0, V1 . (...(..., ...) <-> (... ? ... : ...))) & __leader(V__fml:n) & (forall V . ~...(..., ...))) & (forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_request_msg(1:node, 2:node) <-> vote_request_msg(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))))
		with variables frozenset([__votes, __vote_request_msg, __vote_msg, __leader, __voted, __decided, votes, vote_request_msg, vote_msg, V__fml:n, voted, decided, leader, V__fml:v])
	2:	ext:recv_vote (en: en_ext:recv_vote)	(((forall V0, V118 . (...(..., ...) <-> (... ? ... : ...))) & __vote_msg(V__fml:sender, V__fml:n)) & (forall 1:node, 2:node . (__vote_request_msg(1:node, 2:node) <-> vote_request_msg(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))
		with variables frozenset([__votes, __vote_request_msg, __vote_msg, __leader, V__fml:sender, __decided, votes, vote_request_msg, vote_msg, leader, voted, decided, V__fml:n, __voted])
	3:	ext:send_vote (en: en_ext:send_vote)	(((forall V0, V119 . (...(..., ...) <-> (... ? ... : ...))) & (forall V0 . (...(...) <-> (... ? ... : ...))) & ~__voted(V__fml:src) & __vote_request_msg(V__fml:dst, V__fml:src) & (forall X0, X1 . (~... | ...(..., ...) | (... = ...))) & (forall X0, X1 . (~... | ...(..., ...) | (... = ...))) & (forall X0, X1 . (...(..., ...) | ~... | (... = ...))) & (forall X0, X1 . (...(..., ...) | ~... | (... = ...)))) & (forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))
		with variables frozenset([__votes, __vote_request_msg, __vote_msg, __leader, __voted, __decided, votes, vote_request_msg, vote_msg, leader, voted, decided, V__fml:dst, V__fml:src])
	4:	ext:become_leader (en: en_ext:become_leader)	(((forall V0 . (...(...) <-> (... ? ... : ...))) & (forall N . (...(..., ...) -> ...(..., ...)))) & (forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_request_msg(1:node, 2:node) <-> vote_request_msg(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))
		with variables frozenset([V__fml:q, member, __votes, __vote_request_msg, __vote_msg, __leader, __voted, __decided, votes, vote_request_msg, vote_msg, V__fml:n, voted, decided, leader])
	5:	noop (en: en_noop)	((forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_request_msg(1:node, 2:node) <-> vote_request_msg(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))
		with variables frozenset([__votes, __vote_request_msg, __vote_msg, __leader, __voted, __decided, votes, vote_request_msg, vote_msg, leader, voted, decided])

Properties #1
	(forall V1, V2, N1, N2 . ((__decided(N1, V1) & __decided(N2, V2)) -> (V1 = V2)))
		with variables frozenset([__decided])

Variables #19
	voted of type node -> Bool
	member of type node -> quorum -> Bool
	__votes of type node -> node -> Bool
	__vote_request_msg of type node -> node -> Bool
	__vote_msg of type node -> node -> Bool
	__leader of type node -> Bool
	V__fml:sender of type node
	__decided of type node -> value -> Bool
	votes of type node -> node -> Bool
	vote_request_msg of type node -> node -> Bool
	vote_msg of type node -> node -> Bool
	V__fml:n of type node
	V__fml:q of type quorum
	decided of type node -> value -> Bool
	V__fml:dst of type node
	V__fml:src of type node
	leader of type node -> Bool
	V__fml:v of type value
	__voted of type node -> Bool

State variables #7
	member of type node -> quorum -> Bool
	__votes of type node -> node -> Bool
	__vote_request_msg of type node -> node -> Bool
	__vote_msg of type node -> node -> Bool
	__leader of type node -> Bool
	__voted of type node -> Bool
	__decided of type node -> value -> Bool

Nex state variables #7
	member of type node -> quorum -> Bool
	votes of type node -> node -> Bool
	vote_request_msg of type node -> node -> Bool
	vote_msg of type node -> node -> Bool
	leader of type node -> Bool
	voted of type node -> Bool
	decided of type node -> value -> Bool

Global variables #1
	member of type node -> quorum -> Bool

Ordered variables #0

Nex to pre #6
	votes <- __votes
	vote_request_msg <- __vote_request_msg
	vote_msg <- __vote_msg
	leader <- __leader
	voted <- __voted
	decided <- __decided

Pre to nex #6
	__votes -> votes
	__vote_request_msg -> vote_request_msg
	__vote_msg -> vote_msg
	__leader -> leader
	__voted -> voted
	__decided -> decided

Other variables #6
	V__fml:sender of type node
	V__fml:n of type node
	V__fml:q of type quorum
	V__fml:dst of type node
	V__fml:src of type node
	V__fml:v of type value

Axiom variables #1
	member

Predicates #0

Helpers #0

Inferences #0

Definitions #0

Trel:
((en_ext:send_request_vote -> ((forall V0, V120 . (vote_request_msg(V0, V120) <-> (((V0 = V__fml:src) & (V120 = V__fml:dst)) ? True : __vote_request_msg(V0, V120)))) & (forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))) & (en_ext:decide -> (((forall V0, V1 . (decided(V0, V1) <-> (((V0 = V__fml:n) & (V1 = V__fml:v)) ? True : __decided(V0, V1)))) & __leader(V__fml:n) & (forall V . ~__decided(V__fml:n, V))) & (forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_request_msg(1:node, 2:node) <-> vote_request_msg(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))))) & (en_ext:recv_vote -> (((forall V0, V118 . (votes(V0, V118) <-> (((V0 = V__fml:n) & (V118 = V__fml:sender)) ? True : __votes(V0, V118)))) & __vote_msg(V__fml:sender, V__fml:n)) & (forall 1:node, 2:node . (__vote_request_msg(1:node, 2:node) <-> vote_request_msg(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))) & (en_ext:send_vote -> (((forall V0, V119 . (vote_msg(V0, V119) <-> (((V0 = V__fml:src) & (V119 = V__fml:dst)) ? True : __vote_msg(V0, V119)))) & (forall V0 . (voted(V0) <-> ((V0 = V__fml:src) ? True : __voted(V0)))) & ~__voted(V__fml:src) & __vote_request_msg(V__fml:dst, V__fml:src) & (forall X0, X1 . (~vote_request_msg(X0, X1) | __vote_request_msg(X0, X1) | (X0 = V__fml:src))) & (forall X0, X1 . (~vote_request_msg(X0, X1) | __vote_request_msg(X0, X1) | (X1 = V__fml:dst))) & (forall X0, X1 . (vote_request_msg(X0, X1) | ~__vote_request_msg(X0, X1) | (X0 = V__fml:src))) & (forall X0, X1 . (vote_request_msg(X0, X1) | ~__vote_request_msg(X0, X1) | (X1 = V__fml:dst)))) & (forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))) & (en_ext:become_leader -> (((forall V0 . (leader(V0) <-> ((V0 = V__fml:n) ? True : __leader(V0)))) & (forall N . (member(N, V__fml:q) -> __votes(V__fml:n, N)))) & (forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_request_msg(1:node, 2:node) <-> vote_request_msg(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))) & (en_noop -> ((forall 1:node, 2:node . (__votes(1:node, 2:node) <-> votes(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_request_msg(1:node, 2:node) <-> vote_request_msg(1:node, 2:node))) & (forall 1:node, 2:node . (__vote_msg(1:node, 2:node) <-> vote_msg(1:node, 2:node))) & (forall 1:node . (__leader(1:node) <-> leader(1:node))) & (forall 1:node . (__voted(1:node) <-> voted(1:node))) & (forall 1:node, 2:value . (__decided(1:node, 2:value) <-> decided(1:node, 2:value))))) & (en_ext:send_request_vote | en_ext:decide | en_ext:recv_vote | en_ext:send_vote | en_ext:become_leader | en_noop) & (~en_ext:send_request_vote | ~en_ext:decide) & (~en_ext:send_request_vote | ~en_ext:recv_vote) & (~en_ext:send_request_vote | ~en_ext:send_vote) & (~en_ext:send_request_vote | ~en_ext:become_leader) & (~en_ext:send_request_vote | ~en_noop) & (~en_ext:decide | ~en_ext:recv_vote) & (~en_ext:decide | ~en_ext:send_vote) & (~en_ext:decide | ~en_ext:become_leader) & (~en_ext:decide | ~en_noop) & (~en_ext:recv_vote | ~en_ext:send_vote) & (~en_ext:recv_vote | ~en_ext:become_leader) & (~en_ext:recv_vote | ~en_noop) & (~en_ext:send_vote | ~en_ext:become_leader) & (~en_ext:send_vote | ~en_noop) & (~en_ext:become_leader | ~en_noop))
-----------------------------------------------------------------
(enumsort) node <-> node:e0:
	[ NODE0, NODE1, ] <-> [ n0, n1, ]
(enumsort) quorum <-> quorum:e0:
	[ QUORUM0, QUORUM1, ] <-> [ q0, q1, ]
(enumsort) value <-> value:e0:
	[ VALUE0, VALUE1, ] <-> [ v0, v1, ]
	dep_height[q0] = 0
	dep_height[q1] = 1
	dep_height[n0] = 100
	dep_height[n1] = 101
	dep_height[v0] = 200
	dep_height[v1] = 201
(use_wires: False)

Checking property...

@     3s  Storing init values:
@     3s  Init -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(one of the initial states)
	member(n0, q0)
	member(n0, q1)
	~decided(n0, v0)
	~decided(n0, v1)
	~decided(n1, v0)
	~decided(n1, v1)
	~leader(n0)
	~leader(n1)
	~vote_msg(n0, n0)
	~vote_msg(n0, n1)
	~vote_msg(n1, n0)
	~vote_msg(n1, n1)
	~vote_request_msg(n0, n0)
	~vote_request_msg(n0, n1)
	~vote_request_msg(n1, n0)
	~vote_request_msg(n1, n1)
	~voted(n0)
	~voted(n1)
	~votes(n0, n0)
	~votes(n0, n1)
	~votes(n1, n0)
	~votes(n1, n1)
	~member(n1, q0)
	~member(n1, q1)

@     3s  F[0] /\ !P -> UNSAT
@     3s  F[0] /\ T /\ !P+ -> UNSAT
Frames: #1
	F[0]: #1
		((forall N0_2, N0_1 . ~vote_request_msg(N0_2, N0_1)) & (forall N0_2 . ~voted(N0_2)) & (forall N0_2, N0 . ~vote_msg(N0_2, N0)) & (forall N0_2, N0_3 . ~votes(N0_2, N0_3)) & (forall N0_2 . ~leader(N0_2)) & (forall N0_2, V0 . ~decided(N0_2, V0)))
@     4s  
Adding frame 1...
@     4s  F[1] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v1
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

(cube in F[1])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[0] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[1] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	decided(n1, v0)
(clause)
	~decided(n1, v0)
(relations)
	decided
(cube: std)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(original clause)
	~decided(n1, v0)
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(clause-type: univ)	(forall N0, V0 . ~decided(N0, V0))
@     4s  is global clause? No
@     4s  Learning in F[1]: (forall N0, V0 . ~decided(N0, V0))
@     4s  F[1] /\ T /\ !P+ -> UNSAT
Frames: #2
	F[0]: #1
		((forall N0_2, N0_1 . ~vote_request_msg(N0_2, N0_1)) & (forall N0_2 . ~voted(N0_2)) & (forall N0_2, N0 . ~vote_msg(N0_2, N0)) & (forall N0_2, N0_3 . ~votes(N0_2, N0_3)) & (forall N0_2 . ~leader(N0_2)) & (forall N0_2, V0 . ~decided(N0_2, V0)))
	F[1]: #1
		(forall N0, V0 . ~decided(N0, V0))
@     4s  
Adding frame 2...
Trying forwarding F[1]
@     4s  F[2] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

(cube in F[2])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[1] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     4s  	Ans. SAT
(cube in F[1])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[0] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[1] unsat core #1 	(ucsz: 4 -> 3 -> 2 -> 1 -> 1)
(minimal unsat core)
	leader(n0)
(clause)
	~leader(n0)
(relations)
	leader
(cube: std)
	leader(NODE0)

(boosted clause)
	(forall NODE0 . ~leader(NODE0))
---------------------------
(original clause)
	~leader(n0)
(learnt sym-boosted clause)
	(forall NODE0 . ~leader(NODE0))
---------------------------
(clause-type: univ)	(forall N0 . ~leader(N0))
@     4s  is global clause? No
@     4s  Learning in F[1]: (forall N0 . ~leader(N0))
@     4s  F[1] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[2] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	decided(n1, v1)
(clause)
	~decided(n1, v1)
(relations)
	decided
(cube: std)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(original clause)
	~decided(n1, v1)
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(clause-type: univ)	(forall N0, V0 . ~decided(N0, V0))
@     4s  is global clause? No
@     4s  Learning in F[2]: (forall N0, V0 . ~decided(N0, V0))
@     4s  F[2] /\ T /\ !P+ -> UNSAT
Frames: #3
	F[0]: #1
		((forall N0_2, N0_1 . ~vote_request_msg(N0_2, N0_1)) & (forall N0_2 . ~voted(N0_2)) & (forall N0_2, N0 . ~vote_msg(N0_2, N0)) & (forall N0_2, N0_3 . ~votes(N0_2, N0_3)) & (forall N0_2 . ~leader(N0_2)) & (forall N0_2, V0 . ~decided(N0_2, V0)))
	F[1]: #1
		(forall N0 . ~leader(N0))
	F[2]: #1
		(forall N0, V0 . ~decided(N0, V0))
@     4s  
Adding frame 3...
Trying forwarding F[1]
Trying forwarding F[2]
@     4s  F[3] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v1
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v0
@     4s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[1] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[2] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	leader(n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n1))
(relations)
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	leader(NODE0)
(antecedent reduction)
@     4s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@     4s  is global clause? No
@     4s  Learning in F[2]: (forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@     4s  F[2] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v0)
	leader(n0)
(clause)
	(~decided(n1, v0) | ~leader(n0))
(relations)
	decided
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     4s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ]
ucubes2qv #2
	leader(V:node:e0:) -> [ NODE0, ]
	decided(V:node:e0:, VALUE0) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~leader(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     4s  is global clause? No
@     4s  Learning in F[3]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     4s  F[3] /\ T /\ !P+ -> UNSAT
Frames: #4
	F[0]: #1
		((forall N0_2, N0_1 . ~vote_request_msg(N0_2, N0_1)) & (forall N0_2 . ~voted(N0_2)) & (forall N0_2, N0 . ~vote_msg(N0_2, N0)) & (forall N0_2, N0_3 . ~votes(N0_2, N0_3)) & (forall N0_2 . ~leader(N0_2)) & (forall N0_2, V0 . ~decided(N0_2, V0)))
	F[1]: #1
		(forall N0 . ~leader(N0))
	F[2]: #2
		(forall N0, V0 . ~decided(N0, V0))
		(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
	F[3]: #1
		(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     4s  
Adding frame 4...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
@     4s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v1
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v0
@     4s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[2] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[3] unsat core #6 	(ucsz: 6 -> 6)
(minimal unsat core)
	~votes(n1, n0)
	member(n0, q0)
	member(n0, q1)
	leader(n0)
	leader(n1)
	~votes(n0, n0)
(clause)
	(~leader(n0) | ~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | votes(n0, n0) | votes(n1, n0))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e0: -> [ QUORUM0, QUORUM1, ]
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	~votes(NODE1, NODE0)
	leader(NODE0)
	~votes(NODE0, NODE0)
	member(NODE0, QUORUM1)
	member(NODE0, QUORUM0)
(antecedent reduction)
@     4s  antecedent: 4 -> 4

qv2cubes #2
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
qv2ucubes #2
	QUORUM0 -> [ member(NODE0, V:quorum:e0:), ]
	QUORUM1 -> [ member(NODE0, V:quorum:e0:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e0:) -> [ QUORUM0, QUORUM1, ]
(partition) #1 quorum:e0: -> { QUORUM0, QUORUM1, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #2
	NODE0 -> [ member(NODE0, QUORUM0), ~votes(NODE1, NODE0), leader(NODE0), ~votes(NODE0, NODE0), ]
	NODE1 -> [ leader(NODE1), ~votes(NODE1, NODE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ~votes(NODE1, V:node:e0:), ~votes(V:node:e0:, V:node:e0:), member(V:node:e0:, QUORUM0), ]
	NODE1 -> [ leader(V:node:e0:), ~votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(leader(V:node:e0:) & member(V:node:e0:, QUORUM0) & ~votes(NODE1, V:node:e0:) & ~votes(V:node:e0:, V:node:e0:)) -> [ NODE0, ]
	(leader(V:node:e0:) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~member(NODE0, QUORUM0) | (NODE0 = NODE1) | votes(NODE0, NODE0) | votes(NODE1, NODE0))))
(non-epr version)
	(forall NODE0, NODE1 . (exists QUORUM0 . (~leader(NODE0) | ~leader(NODE1) | ~member(NODE0, QUORUM0) | (NODE0 = NODE1) | votes(NODE0, NODE0) | votes(NODE1, NODE0))))
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~member(NODE0, QUORUM0) | (NODE0 = NODE1) | votes(NODE0, NODE0) | votes(NODE1, NODE0))))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | votes(n0, n0) | votes(n1, n0))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~member(NODE0, QUORUM0) | (NODE0 = NODE1) | votes(NODE0, NODE0) | votes(NODE1, NODE0))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     4s  is global clause? Yes
@     4s  Learning in F[4]: (exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     4s  F[3] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[4] unsat core #6 	(ucsz: 7 -> 6 -> 6)
(minimal unsat core)
	~votes(n1, n0)
	member(n0, q0)
	member(n0, q1)
	decided(n1, v0)
	leader(n0)
	~votes(n0, n0)
(clause)
	(~decided(n1, v0) | ~leader(n0) | ~member(n0, q0) | ~member(n0, q1) | votes(n0, n0) | votes(n1, n0))
(relations)
	decided
	leader
	member
	votes
(fullsorts)
	quorum:e0: -> [ QUORUM0, QUORUM1, ]
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~votes(NODE1, NODE0)
	leader(NODE0)
	~votes(NODE0, NODE0)
	member(NODE0, QUORUM1)
	member(NODE0, QUORUM0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     4s  antecedent: 4 -> 4

qv2cubes #2
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
qv2ucubes #2
	QUORUM0 -> [ member(NODE0, V:quorum:e0:), ]
	QUORUM1 -> [ member(NODE0, V:quorum:e0:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e0:) -> [ QUORUM0, QUORUM1, ]
(partition) #1 quorum:e0: -> { QUORUM0, QUORUM1, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #2
	NODE0 -> [ member(NODE0, QUORUM0), ~votes(NODE1, NODE0), leader(NODE0), ~votes(NODE0, NODE0), ]
	NODE1 -> [ ~votes(NODE1, NODE0), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ~votes(NODE1, V:node:e0:), ~votes(V:node:e0:, V:node:e0:), member(V:node:e0:, QUORUM0), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ~votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(leader(V:node:e0:) & member(V:node:e0:, QUORUM0) & ~votes(NODE1, V:node:e0:) & ~votes(V:node:e0:, V:node:e0:)) -> [ NODE0, ]
	(decided(V:node:e0:, VALUE0) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
	(epr check: forward)	allowed(arc: value -> quorum)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~member(NODE0, QUORUM0) | (NODE0 = NODE1) | votes(NODE0, NODE0) | votes(NODE1, NODE0)))))
(non-epr version)
	(forall VALUE0 . (forall NODE0, NODE1 . (exists QUORUM0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~member(NODE0, QUORUM0) | (NODE0 = NODE1) | votes(NODE0, NODE0) | votes(NODE1, NODE0)))))
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~member(NODE0, QUORUM0) | (NODE0 = NODE1) | votes(NODE0, NODE0) | votes(NODE1, NODE0)))))
---------------------------
(original clause)
	(~decided(n1, v0) | ~leader(n0) | ~member(n0, q0) | ~member(n0, q1) | votes(n0, n0) | votes(n1, n0))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~member(NODE0, QUORUM0) | (NODE0 = NODE1) | votes(NODE0, NODE0) | votes(NODE1, NODE0)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall N0, N1 . ((decided(N1, V0) & leader(N0) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0))))))
@     4s  is global clause? No
@     4s  Learning in F[4]: (forall V0 . (exists Q0 . (forall N0, N1 . ((decided(N1, V0) & leader(N0) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0))))))
@     4s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

(cube in F[4])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q0
@     4s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[2] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[3] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	decided(n1, v1)
	~leader(n1)
(clause)
	(~decided(n1, v1) | leader(n1))
(relations)
	decided
	leader
(cube: std)
	~leader(NODE0)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . (leader(NODE0) | ~decided(NODE0, VALUE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | leader(n1))
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . (leader(NODE0) | ~decided(NODE0, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     4s  is global clause? Yes
@     4s  Learning in F[4]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     4s  F[3] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[4] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	decided(n1, v1)
	~leader(n1)
(clause)
	(~decided(n1, v1) | leader(n1))
(relations)
	decided
	leader
(cube: std)
	~leader(NODE0)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . (leader(NODE0) | ~decided(NODE0, VALUE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | leader(n1))
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . (leader(NODE0) | ~decided(NODE0, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     4s  is global clause? Yes
@     4s  Learning in F[4]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     4s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

(cube in F[4])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     4s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q0
@     4s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     4s  F[1] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[2] unsat core #4 	(ucsz: 4 -> 4)
(minimal unsat core)
	leader(n1)
	~votes(n1, n0)
	member(n0, q0)
	member(n0, q1)
(clause)
	(~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | votes(n1, n0))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e0: -> [ QUORUM0, QUORUM1, ]
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	member(NODE0, QUORUM0)
	~votes(NODE1, NODE0)
	member(NODE0, QUORUM1)
(antecedent reduction)
@     4s  antecedent: 4 -> 2 (reduced)
	removed: NODE1
	removed: NODE0

qv2cubes #2
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
qv2ucubes #2
	QUORUM0 -> [ member(NODE0, V:quorum:e0:), ]
	QUORUM1 -> [ member(NODE0, V:quorum:e0:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e0:) -> [ QUORUM0, QUORUM1, ]
(partition) #1 quorum:e0: -> { QUORUM0, QUORUM1, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #2
	NODE0 -> [ member(NODE0, QUORUM0), ~votes(NODE1, NODE0), ]
	NODE1 -> [ leader(NODE1), ~votes(NODE1, NODE0), ]
qv2ucubes #2
	NODE0 -> [ ~votes(NODE1, V:node:e0:), member(V:node:e0:, QUORUM0), ]
	NODE1 -> [ leader(V:node:e0:), ~votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(leader(V:node:e0:) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
	(member(V:node:e0:, QUORUM0) & ~votes(NODE1, V:node:e0:)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
(non-epr version)
	(forall NODE0, NODE1 . (exists QUORUM0 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
---------------------------
(original clause)
	(~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | votes(n1, n0))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     4s  is global clause? Yes
@     4s  Learning in F[4]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     4s  F[2] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[3] unsat core #4 	(ucsz: 5 -> 4 -> 4)
(minimal unsat core)
	leader(n1)
	~votes(n1, n0)
	member(n0, q0)
	member(n0, q1)
(clause)
	(~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | votes(n1, n0))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e0: -> [ QUORUM0, QUORUM1, ]
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	member(NODE0, QUORUM0)
	~votes(NODE1, NODE0)
	member(NODE0, QUORUM1)
(antecedent reduction)
@     4s  antecedent: 4 -> 2 (reduced)
	removed: NODE1
	removed: NODE0

qv2cubes #2
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
qv2ucubes #2
	QUORUM0 -> [ member(NODE0, V:quorum:e0:), ]
	QUORUM1 -> [ member(NODE0, V:quorum:e0:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e0:) -> [ QUORUM0, QUORUM1, ]
(partition) #1 quorum:e0: -> { QUORUM0, QUORUM1, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #2
	NODE0 -> [ member(NODE0, QUORUM0), ~votes(NODE1, NODE0), ]
	NODE1 -> [ leader(NODE1), ~votes(NODE1, NODE0), ]
qv2ucubes #2
	NODE0 -> [ ~votes(NODE1, V:node:e0:), member(V:node:e0:, QUORUM0), ]
	NODE1 -> [ leader(V:node:e0:), ~votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(leader(V:node:e0:) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
	(member(V:node:e0:, QUORUM0) & ~votes(NODE1, V:node:e0:)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
(non-epr version)
	(forall NODE0, NODE1 . (exists QUORUM0 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
---------------------------
(original clause)
	(~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | votes(n1, n0))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     4s  is global clause? Yes
@     4s  Learning in F[4]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     4s  F[3] /\ T /\ C+ ?
@     4s  	Ans. UNSAT
@     4s  F[4] unsat core #4 	(ucsz: 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	leader(n1)
	~votes(n1, n0)
	member(n0, q0)
	member(n0, q1)
(clause)
	(~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | votes(n1, n0))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e0: -> [ QUORUM0, QUORUM1, ]
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	member(NODE0, QUORUM0)
	~votes(NODE1, NODE0)
	member(NODE0, QUORUM1)
(antecedent reduction)
@     5s  antecedent: 4 -> 2 (reduced)
	removed: NODE1
	removed: NODE0

qv2cubes #2
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
qv2ucubes #2
	QUORUM0 -> [ member(NODE0, V:quorum:e0:), ]
	QUORUM1 -> [ member(NODE0, V:quorum:e0:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e0:) -> [ QUORUM0, QUORUM1, ]
(partition) #1 quorum:e0: -> { QUORUM0, QUORUM1, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #2
	NODE0 -> [ member(NODE0, QUORUM0), ~votes(NODE1, NODE0), ]
	NODE1 -> [ leader(NODE1), ~votes(NODE1, NODE0), ]
qv2ucubes #2
	NODE0 -> [ ~votes(NODE1, V:node:e0:), member(V:node:e0:, QUORUM0), ]
	NODE1 -> [ leader(V:node:e0:), ~votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(leader(V:node:e0:) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
	(member(V:node:e0:, QUORUM0) & ~votes(NODE1, V:node:e0:)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
(non-epr version)
	(forall NODE0, NODE1 . (exists QUORUM0 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
---------------------------
(original clause)
	(~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | votes(n1, n0))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | votes(NODE1, NODE0))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     5s  is global clause? Yes
@     5s  Learning in F[4]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     5s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v1
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v0
@     5s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     5s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[1] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q0
@     5s  	Ans. SAT
(cube in F[1])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[0] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[1] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	votes(n0, n1)
(clause)
	~votes(n0, n1)
(relations)
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE0, NODE1)
(antecedent reduction)
@     5s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1 . ~votes(NODE0, NODE1))
---------------------------
(original clause)
	~votes(n0, n1)
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . ~votes(NODE0, NODE1))
---------------------------
(clause-type: univ)	(forall N0, N1 . ~votes(N0, N1))
@     5s  is global clause? No
@     5s  Learning in F[1]: (forall N0, N1 . ~votes(N0, N1))
@     5s  F[1] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[2] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	~vote_msg(n1, n0)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | vote_msg(n1, n0))
(relations)
	vote_msg
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~vote_msg(NODE1, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@     5s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ ~vote_msg(NODE1, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ ~vote_msg(NODE1, NODE0), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ ~vote_msg(NODE1, V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_msg(V:node:e0:, NODE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(votes(V:node:e0:, NODE1) & ~vote_msg(NODE1, V:node:e0:)) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & ~vote_msg(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | vote_msg(NODE1, NODE0)))
---------------------------
(original clause)
	(~votes(n0, n1) | vote_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | vote_msg(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     5s  is global clause? Yes
@     5s  Learning in F[4]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     5s  F[2] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[3] unsat core #2 	(ucsz: 4 -> 2 -> 2)
(minimal unsat core)
	~vote_msg(n1, n0)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | vote_msg(n1, n0))
(relations)
	vote_msg
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~vote_msg(NODE1, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@     5s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ ~vote_msg(NODE1, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ ~vote_msg(NODE1, NODE0), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ ~vote_msg(NODE1, V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_msg(V:node:e0:, NODE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(votes(V:node:e0:, NODE1) & ~vote_msg(NODE1, V:node:e0:)) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & ~vote_msg(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | vote_msg(NODE1, NODE0)))
---------------------------
(original clause)
	(~votes(n0, n1) | vote_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | vote_msg(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     5s  is global clause? Yes
@     5s  Learning in F[4]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     5s  F[3] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[4] unsat core #2 	(ucsz: 6 -> 4 -> 2 -> 2)
(minimal unsat core)
	votes(n1, n0)
	~vote_msg(n0, n1)
(clause)
	(~votes(n1, n0) | vote_msg(n0, n1))
(relations)
	vote_msg
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE0)
	~vote_msg(NODE0, NODE1)
(antecedent reduction)
@     5s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ votes(NODE1, NODE0), ~vote_msg(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE0), ~vote_msg(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ votes(NODE1, V:node:e0:), ~vote_msg(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_msg(NODE0, V:node:e0:), votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(votes(NODE1, V:node:e0:) & ~vote_msg(V:node:e0:, NODE1)) -> [ NODE0, ]
	(votes(V:node:e0:, NODE0) & ~vote_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE0) | vote_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~votes(n1, n0) | vote_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE0) | vote_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (votes(N1, N0) -> vote_msg(N0, N1)))
@     5s  is global clause? Yes
@     5s  Learning in F[4]: (forall N0, N1 . (votes(N1, N0) -> vote_msg(N0, N1)))
@     5s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[4])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     5s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     5s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[1] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[2] unsat core #1 	(ucsz: 2 -> 1 -> 1)
(minimal unsat core)
	leader(n1)
(clause)
	~leader(n1)
(relations)
	leader
(cube: std)
	leader(NODE0)

(boosted clause)
	(forall NODE0 . ~leader(NODE0))
---------------------------
(original clause)
	~leader(n1)
(learnt sym-boosted clause)
	(forall NODE0 . ~leader(NODE0))
---------------------------
(clause-type: univ)	(forall N0 . ~leader(N0))
@     5s  is global clause? No
@     5s  Learning in F[2]: (forall N0 . ~leader(N0))
@     5s  F[2] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[3] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	leader(n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n1))
(relations)
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	leader(NODE0)
(antecedent reduction)
@     5s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@     5s  is global clause? No
@     5s  Learning in F[3]: (forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@     5s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     5s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[2] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[3] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	decided(n1, v1)
(clause)
	~decided(n1, v1)
(relations)
	decided
(cube: std)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(original clause)
	~decided(n1, v1)
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(clause-type: univ)	(forall N0, V0 . ~decided(N0, V0))
@     5s  is global clause? No
@     5s  Learning in F[3]: (forall N0, V0 . ~decided(N0, V0))
@     5s  F[3] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[4] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v1)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0))
(relations)
	decided
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     5s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ]
ucubes2qv #2
	leader(V:node:e0:) -> [ NODE0, ]
	decided(V:node:e0:, VALUE0) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     5s  is global clause? No
@     5s  Learning in F[4]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     5s  F[4] /\ T /\ !P+ -> UNSAT
Frames: #5
	F[0]: #1
		((forall N0_2, N0_1 . ~vote_request_msg(N0_2, N0_1)) & (forall N0_2 . ~voted(N0_2)) & (forall N0_2, N0 . ~vote_msg(N0_2, N0)) & (forall N0_2, N0_3 . ~votes(N0_2, N0_3)) & (forall N0_2 . ~leader(N0_2)) & (forall N0_2, V0 . ~decided(N0_2, V0)))
	F[1]: #1
		(forall N0, N1 . ~votes(N0, N1))
	F[2]: #1
		(forall N0 . ~leader(N0))
	F[3]: #2
		(forall N0, V0 . ~decided(N0, V0))
		(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
	F[4]: #4
		(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, N1 . (votes(N1, N0) -> vote_msg(N0, N1)))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     5s  
Adding frame 5...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
Trying forwarding F[4]
Forwarded #3 to F[5]
@     5s  Learning in F[5]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     5s  Learning in F[5]: (forall N0, N1 . (votes(N1, N0) -> vote_msg(N0, N1)))
@     5s  Learning in F[5]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     5s  Learning in F[5]: (forall N0, N1 . (votes(N1, N0) -> vote_msg(N0, N1)))
@     5s  Learning in F[5]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     5s  Learning in F[5]: (exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     5s  Learning in F[5]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     5s  Learning in F[5]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     5s  F[5] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[5])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     5s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     5s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q0
@     5s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[1] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[2] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	votes(n1, n0)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | ~votes(n1, n0))
(relations)
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@     5s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((votes(N1, N0) & votes(N0, N1)) -> (N0 = N1)))
@     5s  is global clause? No
@     5s  Learning in F[2]: (forall N0, N1 . ((votes(N1, N0) & votes(N0, N1)) -> (N0 = N1)))
@     5s  F[2] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[3] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	leader(n1)
	votes(n1, n0)
	votes(n0, n1)
(clause)
	(~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0))
(relations)
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@     5s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE1, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ leader(NODE1), votes(NODE1, NODE0), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ votes(NODE1, V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ leader(V:node:e0:), votes(V:node:e0:, NODE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(votes(NODE1, V:node:e0:) & votes(V:node:e0:, NODE1)) -> [ NODE0, ]
	(leader(V:node:e0:) & votes(NODE0, V:node:e0:) & votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & votes(N0, N1) & votes(N1, N0)) -> (N0 = N1)))
@     5s  is global clause? No
@     5s  Learning in F[3]: (forall N0, N1 . ((leader(N1) & votes(N0, N1) & votes(N1, N0)) -> (N0 = N1)))
@     5s  F[3] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[4] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v1)
	votes(n0, n1)
	votes(n1, n0)
(clause)
	(~decided(n1, v1) | ~votes(n0, n1) | ~votes(n1, n0))
(relations)
	decided
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     5s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE1, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE0), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ votes(NODE1, V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), votes(V:node:e0:, NODE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(votes(NODE1, V:node:e0:) & votes(V:node:e0:, NODE1)) -> [ NODE0, ]
	(decided(V:node:e0:, VALUE0) & votes(NODE0, V:node:e0:) & votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n0, n1) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N0)) -> (N0 = N1)))
@     5s  is global clause? No
@     5s  Learning in F[4]: (forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N0)) -> (N0 = N1)))
@     5s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     5s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     5s  F[3] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[4] unsat core #4 	(ucsz: 4 -> 4)
(minimal unsat core)
	leader(n1)
	votes(n1, n0)
	votes(n0, n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0))
(relations)
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
	leader(NODE0)
(antecedent reduction)
@     5s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE1, NODE0), leader(NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ leader(NODE1), votes(NODE1, NODE0), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), votes(NODE1, V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ leader(V:node:e0:), votes(V:node:e0:, NODE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(NODE1, V:node:e0:) & votes(V:node:e0:, NODE1)) -> [ NODE0, ]
	(leader(V:node:e0:) & votes(NODE0, V:node:e0:) & votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1) & votes(N0, N1) & votes(N1, N0)) -> (N0 = N1)))
@     5s  is global clause? No
@     5s  Learning in F[4]: (forall N0, N1 . ((leader(N0) & leader(N1) & votes(N0, N1) & votes(N1, N0)) -> (N0 = N1)))
@     5s  F[4] /\ T /\ C+ ?
@     5s  	Ans. UNSAT
@     5s  F[5] unsat core #4 	(ucsz: 5 -> 4 -> 4)
(minimal unsat core)
	decided(n1, v1)
	votes(n0, n1)
	votes(n1, n0)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n0))
(relations)
	decided
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE1, NODE0), leader(NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE0), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), votes(NODE1, V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), votes(V:node:e0:, NODE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(NODE1, V:node:e0:) & votes(V:node:e0:, NODE1)) -> [ NODE0, ]
	(decided(V:node:e0:, VALUE0) & votes(NODE0, V:node:e0:) & votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0) & votes(N0, N1) & votes(N1, N0)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[5]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0) & votes(N0, N1) & votes(N1, N0)) -> (N0 = N1)))
@     6s  F[5] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v1
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = false
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = false
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v0
@     6s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = false
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q0
@     6s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = false
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q0
@     6s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = false
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[1] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[2] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	votes(n1, n1)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | ~votes(n1, n1))
(relations)
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE1) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE1) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[2]: (forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
@     6s  F[2] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	leader(n1)
	votes(n0, n1)
(clause)
	(~leader(n1) | ~votes(n0, n1))
(relations)
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ leader(NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ votes(V:node:e0:, NODE1), ]
	NODE1 -> [ leader(V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(NODE0, V:node:e0:)) -> [ NODE1, ]
	votes(V:node:e0:, NODE1) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[3]: (forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (N0 = N1)))
@     6s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q0
@     6s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = false
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[2] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[3] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	votes(n1, n1)
	votes(n0, n1)
	leader(n0)
(clause)
	(~leader(n0) | ~votes(n0, n1) | ~votes(n1, n1))
(relations)
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE1)
	votes(NODE0, NODE1)
	leader(NODE0)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ votes(V:node:e0:, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(V:node:e0:, NODE1)) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & votes(V:node:e0:, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~votes(n0, n1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[3]: (forall N0, N1 . ((leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     6s  F[3] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[4] unsat core #2 	(ucsz: 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	leader(n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n1))
(relations)
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	leader(NODE0)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[4]: (forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@     6s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q0
@     6s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = false
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[3] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[4] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v0)
	votes(n0, n1)
(clause)
	(~decided(n1, v0) | ~votes(n0, n1))
(relations)
	decided
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ votes(V:node:e0:, NODE1), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(decided(V:node:e0:, VALUE0) & votes(NODE0, V:node:e0:)) -> [ NODE1, ]
	votes(V:node:e0:, NODE1) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~votes(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[4]: (forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> (N0 = N1)))
@     6s  F[4] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[5] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v0)
	votes(n0, n1)
	leader(n0)
(clause)
	(~decided(n1, v0) | ~leader(n0) | ~votes(n0, n1))
(relations)
	decided
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE0, NODE1)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(decided(V:node:e0:, VALUE0) & votes(NODE0, V:node:e0:)) -> [ NODE1, ]
	(leader(V:node:e0:) & votes(V:node:e0:, NODE1)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~leader(n0) | ~votes(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0) & votes(N0, N1)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[5]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0) & votes(N0, N1)) -> (N0 = N1)))
@     6s  F[5] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

(cube in F[5])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     6s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q0
@     6s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     6s  F[3] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[4] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v1)
	votes(n0, n0)
	votes(n1, n0)
(clause)
	(~decided(n1, v1) | ~votes(n0, n0) | ~votes(n1, n0))
(relations)
	decided
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE0)
	votes(NODE0, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE1, NODE0), votes(NODE0, NODE0), ]
	NODE1 -> [ votes(NODE1, NODE0), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ votes(NODE1, V:node:e0:), votes(V:node:e0:, V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(decided(V:node:e0:, VALUE0) & votes(V:node:e0:, NODE0)) -> [ NODE1, ]
	(votes(NODE1, V:node:e0:) & votes(V:node:e0:, V:node:e0:)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n0, n0) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N0) & votes(N1, N0)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[4]: (forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N0) & votes(N1, N0)) -> (N0 = N1)))
@     6s  F[4] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[5] unsat core #2 	(ucsz: 5 -> 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v1)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0))
(relations)
	decided
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     6s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ]
ucubes2qv #2
	leader(V:node:e0:) -> [ NODE0, ]
	decided(V:node:e0:, VALUE0) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     6s  is global clause? No
@     6s  Learning in F[5]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     6s  F[5] /\ T /\ !P+ -> UNSAT
Frames: #6
	F[0]: #1
		((forall N0_2, N0_1 . ~vote_request_msg(N0_2, N0_1)) & (forall N0_2 . ~voted(N0_2)) & (forall N0_2, N0 . ~vote_msg(N0_2, N0)) & (forall N0_2, N0_3 . ~votes(N0_2, N0_3)) & (forall N0_2 . ~leader(N0_2)) & (forall N0_2, V0 . ~decided(N0_2, V0)))
	F[1]: #1
		(forall N0, N1 . ~votes(N0, N1))
	F[2]: #3
		(forall N0 . ~leader(N0))
		(forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((votes(N1, N0) & votes(N0, N1)) -> (N0 = N1)))
	F[3]: #3
		(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (N0 = N1)))
		(forall N0, V0 . ~decided(N0, V0))
		(forall N0, N1 . ((leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
	F[4]: #3
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N0) & votes(N1, N0)) -> (N0 = N1)))
	F[5]: #5
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
		(exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     6s  
Adding frame 6...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
Trying forwarding F[4]
Trying forwarding F[5]
Forwarded #4 to F[6]
@     6s  Learning in F[6]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     6s  Learning in F[6]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     6s  Learning in F[6]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     6s  Learning in F[6]: (exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     6s  Learning in F[6]: (forall N0, N1 . (votes(N1, N0) -> vote_msg(N0, N1)))
@     6s  Learning in F[6]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     6s  Learning in F[6]: (exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     6s  Learning in F[6]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     6s  Learning in F[6]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     6s  F[6] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[6])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     6s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n0
		V__fml:sender -> n1
@     6s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     6s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q1
@     6s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[1] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n1
		V__fml:sender -> n1
@     6s  	Ans. SAT
(cube in F[1])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false			--> modified
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     6s  F[0] /\ T /\ C+ ?
@     6s  	Ans. UNSAT
@     6s  F[1] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	vote_msg(n1, n0)
(clause)
	~vote_msg(n1, n0)
(relations)
	vote_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE0)
(antecedent reduction)
@     6s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1 . ~vote_msg(NODE1, NODE0))
---------------------------
(original clause)
	~vote_msg(n1, n0)
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . ~vote_msg(NODE1, NODE0))
---------------------------
(clause-type: univ)	(forall N0, N1 . ~vote_msg(N1, N0))
@     6s  is global clause? No
@     6s  Learning in F[1]: (forall N0, N1 . ~vote_msg(N1, N0))
@     6s  F[1] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[2] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	votes(n1, n1)
(clause)
	~votes(n1, n1)
(relations)
	votes
(cube: std)
	votes(NODE0, NODE0)

(boosted clause)
	(forall NODE0 . ~votes(NODE0, NODE0))
---------------------------
(original clause)
	~votes(n1, n1)
(learnt sym-boosted clause)
	(forall NODE0 . ~votes(NODE0, NODE0))
---------------------------
(clause-type: univ)	(forall N0 . ~votes(N0, N0))
@     7s  is global clause? No
@     7s  Learning in F[2]: (forall N0 . ~votes(N0, N0))
@     7s  F[2] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[3] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	leader(n1)
	votes(n1, n1)
(clause)
	(~leader(n1) | ~votes(n1, n1))
(relations)
	leader
	votes
(cube: std)
	votes(NODE0, NODE0)
	leader(NODE0)

(boosted clause)
	(forall NODE0 . (~votes(NODE0, NODE0) | ~leader(NODE0)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0 . (~votes(NODE0, NODE0) | ~leader(NODE0)))
---------------------------
(clause-type: univ)	(forall N0 . (votes(N0, N0) -> ~leader(N0)))
@     7s  is global clause? No
@     7s  Learning in F[3]: (forall N0 . (votes(N0, N0) -> ~leader(N0)))
@     7s  F[3] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[4] unsat core #2 	(ucsz: 5 -> 4 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v1)
	votes(n1, n1)
(clause)
	(~decided(n1, v1) | ~votes(n1, n1))
(relations)
	decided
	votes
(cube: std)
	votes(NODE0, NODE0)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . (~votes(NODE0, NODE0) | ~decided(NODE0, VALUE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . (~votes(NODE0, NODE0) | ~decided(NODE0, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, V0 . (votes(N0, N0) -> ~decided(N0, V0)))
@     7s  is global clause? No
@     7s  Learning in F[4]: (forall N0, V0 . (votes(N0, N0) -> ~decided(N0, V0)))
@     7s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     7s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q1
@     7s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n1
		V__fml:sender -> n1
@     7s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = false			--> modified
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[1] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[2] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	votes(n0, n1)
(clause)
	~votes(n0, n1)
(relations)
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE0, NODE1)
(antecedent reduction)
@     7s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1 . ~votes(NODE0, NODE1))
---------------------------
(original clause)
	~votes(n0, n1)
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . ~votes(NODE0, NODE1))
---------------------------
(clause-type: univ)	(forall N0, N1 . ~votes(N0, N1))
@     7s  is global clause? No
@     7s  Learning in F[2]: (forall N0, N1 . ~votes(N0, N1))
@     7s  F[2] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	votes(n1, n1)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | ~votes(n1, n1))
(relations)
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@     7s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE1) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE1) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
@     7s  is global clause? No
@     7s  Learning in F[3]: (forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
@     7s  F[3] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[4] unsat core #3 	(ucsz: 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	leader(n1)
	~votes(n1, n0)
	votes(n0, n1)
(clause)
	(~leader(n1) | ~votes(n0, n1) | votes(n1, n0))
(relations)
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	~votes(NODE1, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@     7s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ ~votes(NODE1, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ leader(NODE1), ~votes(NODE1, NODE0), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ ~votes(NODE1, V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ leader(V:node:e0:), ~votes(V:node:e0:, NODE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(votes(V:node:e0:, NODE1) & ~votes(NODE1, V:node:e0:)) -> [ NODE0, ]
	(leader(V:node:e0:) & votes(NODE0, V:node:e0:) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | votes(NODE1, NODE0)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n0, n1) | votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | votes(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> votes(N1, N0)))
@     7s  is global clause? No
@     7s  Learning in F[4]: (forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> votes(N1, N0)))
@     7s  F[4] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[5] unsat core #3 	(ucsz: 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v1)
	~votes(n1, n0)
	votes(n0, n1)
(clause)
	(~decided(n1, v1) | ~votes(n0, n1) | votes(n1, n0))
(relations)
	decided
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~votes(NODE1, NODE0)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     7s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ ~votes(NODE1, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ ~votes(NODE1, NODE0), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ ~votes(NODE1, V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ~votes(V:node:e0:, NODE0), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(decided(V:node:e0:, VALUE0) & votes(NODE0, V:node:e0:) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
	(votes(V:node:e0:, NODE1) & ~votes(NODE1, V:node:e0:)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | votes(NODE1, NODE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n0, n1) | votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | votes(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> votes(N1, N0)))
@     7s  is global clause? No
@     7s  Learning in F[5]: (forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> votes(N1, N0)))
@     7s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     7s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q1
@     7s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n1
		V__fml:sender -> n1
@     7s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = false			--> modified
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[2] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[3] unsat core #1 	(ucsz: 2 -> 1 -> 1)
(minimal unsat core)
	leader(n0)
(clause)
	~leader(n0)
(relations)
	leader
(cube: std)
	leader(NODE0)

(boosted clause)
	(forall NODE0 . ~leader(NODE0))
---------------------------
(original clause)
	~leader(n0)
(learnt sym-boosted clause)
	(forall NODE0 . ~leader(NODE0))
---------------------------
(clause-type: univ)	(forall N0 . ~leader(N0))
@     7s  is global clause? No
@     7s  Learning in F[3]: (forall N0 . ~leader(N0))
@     7s  F[3] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	votes(n1, n1)
	votes(n0, n1)
	leader(n0)
(clause)
	(~leader(n0) | ~votes(n0, n1) | ~votes(n1, n1))
(relations)
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE1)
	votes(NODE0, NODE1)
	leader(NODE0)
(antecedent reduction)
@     7s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ votes(V:node:e0:, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(V:node:e0:, NODE1)) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & votes(V:node:e0:, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~votes(n0, n1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     7s  is global clause? No
@     7s  Learning in F[4]: (forall N0, N1 . ((leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     7s  F[4] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[5] unsat core #3 	(ucsz: 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	leader(n1)
	~votes(n1, n0)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n1) | votes(n1, n0))
(relations)
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	~votes(NODE1, NODE0)
	leader(NODE0)
(antecedent reduction)
@     7s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ ~votes(NODE1, NODE0), leader(NODE0), ]
	NODE1 -> [ leader(NODE1), ~votes(NODE1, NODE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ~votes(NODE1, V:node:e0:), ]
	NODE1 -> [ leader(V:node:e0:), ~votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(leader(V:node:e0:) & ~votes(NODE1, V:node:e0:)) -> [ NODE0, ]
	(leader(V:node:e0:) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1) | votes(NODE1, NODE0)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1) | votes(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1)) -> ((N0 = N1) | votes(N1, N0))))
@     7s  is global clause? No
@     7s  Learning in F[5]: (forall N0, N1 . ((leader(N0) & leader(N1)) -> ((N0 = N1) | votes(N1, N0))))
@     7s  F[5] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[6] unsat core #3 	(ucsz: 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v1)
	~votes(n1, n0)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0) | votes(n1, n0))
(relations)
	decided
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~votes(NODE1, NODE0)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     7s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ ~votes(NODE1, NODE0), leader(NODE0), ]
	NODE1 -> [ ~votes(NODE1, NODE0), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ~votes(NODE1, V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ~votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(leader(V:node:e0:) & ~votes(NODE1, V:node:e0:)) -> [ NODE0, ]
	(decided(V:node:e0:, VALUE0) & ~votes(V:node:e0:, NODE0)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1) | votes(NODE1, NODE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0) | votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1) | votes(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> ((N0 = N1) | votes(N1, N0))))
@     7s  is global clause? No
@     7s  Learning in F[6]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> ((N0 = N1) | votes(N1, N0))))
@     7s  F[6] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[6])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     7s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     7s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[3] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	leader(n1)
	votes(n1, n1)
	votes(n0, n1)
(clause)
	(~leader(n1) | ~votes(n0, n1) | ~votes(n1, n1))
(relations)
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	votes(NODE1, NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@     7s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ leader(NODE1), votes(NODE1, NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ votes(V:node:e0:, NODE1), ]
	NODE1 -> [ leader(V:node:e0:), votes(V:node:e0:, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(NODE0, V:node:e0:) & votes(V:node:e0:, V:node:e0:)) -> [ NODE1, ]
	votes(V:node:e0:, NODE1) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n0, n1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     7s  is global clause? No
@     7s  Learning in F[4]: (forall N0, N1 . ((leader(N1) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     7s  F[4] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[5] unsat core #3 	(ucsz: 6 -> 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v1)
	votes(n1, n1)
	votes(n0, n1)
(clause)
	(~decided(n1, v1) | ~votes(n0, n1) | ~votes(n1, n1))
(relations)
	decided
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE1)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     7s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE1), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ votes(V:node:e0:, NODE1), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), votes(V:node:e0:, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	votes(V:node:e0:, NODE1) -> [ NODE0, ]
	(decided(V:node:e0:, VALUE0) & votes(NODE0, V:node:e0:) & votes(V:node:e0:, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n0, n1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     7s  is global clause? No
@     7s  Learning in F[5]: (forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     7s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     7s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = true
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     7s  F[4] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     7s  F[5] unsat core #2 	(ucsz: 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	leader(n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n1))
(relations)
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	leader(NODE0)
(antecedent reduction)
@     7s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@     7s  is global clause? No
@     7s  Learning in F[5]: (forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@     7s  F[5] /\ T /\ C+ ?
@     7s  	Ans. UNSAT
@     8s  F[6] unsat core #4 	(ucsz: 5 -> 4 -> 4)
(minimal unsat core)
	decided(n1, v1)
	votes(n1, n1)
	votes(n0, n1)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n1))
(relations)
	decided
	leader
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE1)
	votes(NODE0, NODE1)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     8s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE1), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), votes(V:node:e0:, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(V:node:e0:, NODE1)) -> [ NODE0, ]
	(decided(V:node:e0:, VALUE0) & votes(NODE0, V:node:e0:) & votes(V:node:e0:, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     8s  is global clause? No
@     8s  Learning in F[6]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
@     8s  F[6] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v1
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     8s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q0
@     8s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     8s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n0
		V__fml:sender -> n0
@     8s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false			--> modified
	votes(n0, n1) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n1, q0) = false
	member(n1, q1) = false

@     8s  F[3] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[4] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	decided(n1, v0)
(clause)
	~decided(n1, v0)
(relations)
	decided
(cube: std)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(original clause)
	~decided(n1, v0)
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(clause-type: univ)	(forall N0, V0 . ~decided(N0, V0))
@     8s  is global clause? No
@     8s  Learning in F[4]: (forall N0, V0 . ~decided(N0, V0))
@     8s  F[4] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[5] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v0)
	votes(n1, n0)
	votes(n0, n0)
(clause)
	(~decided(n1, v0) | ~votes(n0, n0) | ~votes(n1, n0))
(relations)
	decided
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	votes(NODE1, NODE0)
	votes(NODE0, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     8s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE1, NODE0), votes(NODE0, NODE0), ]
	NODE1 -> [ votes(NODE1, NODE0), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ votes(NODE1, V:node:e0:), votes(V:node:e0:, V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), votes(V:node:e0:, NODE0), ]
ucubes2qv #2
	(decided(V:node:e0:, VALUE0) & votes(V:node:e0:, NODE0)) -> [ NODE1, ]
	(votes(NODE1, V:node:e0:) & votes(V:node:e0:, V:node:e0:)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~votes(n0, n0) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N0) & votes(N1, N0)) -> (N0 = N1)))
@     8s  is global clause? No
@     8s  Learning in F[5]: (forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N0) & votes(N1, N0)) -> (N0 = N1)))
@     8s  F[5] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[6] unsat core #2 	(ucsz: 6 -> 5 -> 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v0)
	leader(n0)
(clause)
	(~decided(n1, v0) | ~leader(n0))
(relations)
	decided
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     8s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ]
ucubes2qv #2
	leader(V:node:e0:) -> [ NODE0, ]
	decided(V:node:e0:, VALUE0) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~leader(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     8s  is global clause? No
@     8s  Learning in F[6]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@     8s  F[6] /\ T /\ !P+ -> UNSAT
Frames: #7
	F[0]: #1
		((forall N0_2, N0_1 . ~vote_request_msg(N0_2, N0_1)) & (forall N0_2 . ~voted(N0_2)) & (forall N0_2, N0 . ~vote_msg(N0_2, N0)) & (forall N0_2, N0_3 . ~votes(N0_2, N0_3)) & (forall N0_2 . ~leader(N0_2)) & (forall N0_2, V0 . ~decided(N0_2, V0)))
	F[1]: #1
		(forall N0, N1 . ~vote_msg(N1, N0))
	F[2]: #1
		(forall N0, N1 . ~votes(N0, N1))
	F[3]: #2
		(forall N0 . ~leader(N0))
		(forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
	F[4]: #4
		(forall N0, V0 . ~decided(N0, V0))
		(forall N0, N1 . ((leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> votes(N1, N0)))
		(forall N0, N1 . ((leader(N1) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
	F[5]: #4
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N0) & votes(N1, N0)) -> (N0 = N1)))
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> votes(N1, N0)))
		(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
	F[6]: #5
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
		(exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     8s  
Adding frame 7...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
Trying forwarding F[4]
Trying forwarding F[5]
Trying forwarding F[6]
Forwarded #4 to F[7]
@     8s  Learning in F[7]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     8s  Learning in F[7]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     8s  Learning in F[7]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     8s  Learning in F[7]: (exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     8s  Learning in F[7]: (forall N0, N1 . (votes(N1, N0) -> vote_msg(N0, N1)))
@     8s  Learning in F[7]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@     8s  Learning in F[7]: (exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
@     8s  Learning in F[7]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@     8s  Learning in F[7]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@     8s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     8s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n0
		V__fml:sender -> n1
@     8s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     8s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q1
@     8s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n1
		V__fml:sender -> n1
@     8s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false			--> modified
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[1] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[2] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	~voted(n1)
(clause)
	(~vote_msg(n1, n0) | voted(n1))
(relations)
	vote_msg
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	~voted(NODE1)
(antecedent reduction)
@     8s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ vote_msg(NODE1, NODE0), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), ~voted(NODE1), ]
qv2ucubes #2
	NODE0 -> [ vote_msg(NODE1, V:node:e0:), ]
	NODE1 -> [ ~voted(V:node:e0:), vote_msg(V:node:e0:, NODE0), ]
ucubes2qv #2
	vote_msg(NODE1, V:node:e0:) -> [ NODE0, ]
	(vote_msg(V:node:e0:, NODE0) & ~voted(V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | voted(NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | voted(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | voted(NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@     8s  is global clause? Yes
@     8s  Learning in F[7]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@     8s  F[2] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	~voted(n1)
(clause)
	(~vote_msg(n1, n0) | voted(n1))
(relations)
	vote_msg
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	~voted(NODE1)
(antecedent reduction)
@     8s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ vote_msg(NODE1, NODE0), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), ~voted(NODE1), ]
qv2ucubes #2
	NODE0 -> [ vote_msg(NODE1, V:node:e0:), ]
	NODE1 -> [ ~voted(V:node:e0:), vote_msg(V:node:e0:, NODE0), ]
ucubes2qv #2
	vote_msg(NODE1, V:node:e0:) -> [ NODE0, ]
	(vote_msg(V:node:e0:, NODE0) & ~voted(V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | voted(NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | voted(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | voted(NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@     8s  is global clause? Yes
@     8s  Learning in F[7]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@     8s  F[3] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[4] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	~voted(n1)
(clause)
	(~vote_msg(n1, n0) | voted(n1))
(relations)
	vote_msg
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	~voted(NODE1)
(antecedent reduction)
@     8s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ vote_msg(NODE1, NODE0), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), ~voted(NODE1), ]
qv2ucubes #2
	NODE0 -> [ vote_msg(NODE1, V:node:e0:), ]
	NODE1 -> [ ~voted(V:node:e0:), vote_msg(V:node:e0:, NODE0), ]
ucubes2qv #2
	vote_msg(NODE1, V:node:e0:) -> [ NODE0, ]
	(vote_msg(V:node:e0:, NODE0) & ~voted(V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | voted(NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | voted(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | voted(NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@     8s  is global clause? Yes
@     8s  Learning in F[7]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@     8s  F[4] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[5] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	~voted(n1)
(clause)
	(~vote_msg(n1, n0) | voted(n1))
(relations)
	vote_msg
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	~voted(NODE1)
(antecedent reduction)
@     8s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ vote_msg(NODE1, NODE0), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), ~voted(NODE1), ]
qv2ucubes #2
	NODE0 -> [ vote_msg(NODE1, V:node:e0:), ]
	NODE1 -> [ ~voted(V:node:e0:), vote_msg(V:node:e0:, NODE0), ]
ucubes2qv #2
	vote_msg(NODE1, V:node:e0:) -> [ NODE0, ]
	(vote_msg(V:node:e0:, NODE0) & ~voted(V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | voted(NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | voted(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | voted(NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@     8s  is global clause? Yes
@     8s  Learning in F[7]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@     8s  F[5] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[6] unsat core #2 	(ucsz: 5 -> 3 -> 2 -> 2)
(minimal unsat core)
	~voted(n1)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | voted(n1))
(relations)
	votes
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~voted(NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@     8s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ ~voted(NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ votes(V:node:e0:, NODE1), ]
	NODE1 -> [ ~voted(V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	votes(V:node:e0:, NODE1) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & ~voted(V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | voted(NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | voted(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | voted(NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (votes(N0, N1) -> voted(N1)))
@     8s  is global clause? No
@     8s  Learning in F[6]: (forall N0, N1 . (votes(N0, N1) -> voted(N1)))
@     8s  F[6] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[7] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	~voted(n1)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | voted(n1))
(relations)
	votes
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~voted(NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@     8s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ ~voted(NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ votes(V:node:e0:, NODE1), ]
	NODE1 -> [ ~voted(V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	votes(V:node:e0:, NODE1) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & ~voted(V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | voted(NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | voted(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | voted(NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (votes(N0, N1) -> voted(N1)))
@     8s  is global clause? No
@     8s  Learning in F[7]: (forall N0, N1 . (votes(N0, N1) -> voted(N1)))
@     8s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v1
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v0
@     8s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     8s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q1
@     8s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n0
		V__fml:sender -> n1
@     8s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n1
		V__fml:sender -> n1
@     8s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false			--> modified
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     8s  F[1] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     8s  F[2] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	~vote_request_msg(n0, n1)
	vote_msg(n1, n0)
(clause)
	(~vote_msg(n1, n0) | vote_request_msg(n0, n1))
(relations)
	vote_msg
	vote_request_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	~vote_request_msg(NODE0, NODE1)
(antecedent reduction)
@     8s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ vote_msg(NODE1, NODE0), ~vote_request_msg(NODE0, NODE1), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), ~vote_request_msg(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ vote_msg(NODE1, V:node:e0:), ~vote_request_msg(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e0:), vote_msg(V:node:e0:, NODE0), ]
ucubes2qv #2
	(vote_msg(NODE1, V:node:e0:) & ~vote_request_msg(V:node:e0:, NODE1)) -> [ NODE0, ]
	(vote_msg(V:node:e0:, NODE0) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (vote_msg(N1, N0) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     8s  is global clause? No
@     8s  Learning in F[2]: (forall N0, N1 . (vote_msg(N1, N0) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     8s  F[2] /\ T /\ C+ ?
@     8s  	Ans. UNSAT
@     9s  F[3] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	votes(n1, n1)
	~vote_request_msg(n0, n1)
	vote_msg(n1, n0)
(clause)
	(~vote_msg(n1, n0) | ~votes(n1, n1) | vote_request_msg(n0, n1))
(relations)
	vote_msg
	votes
	vote_request_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	votes(NODE1, NODE1)
	~vote_request_msg(NODE0, NODE1)
(antecedent reduction)
@     9s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ vote_msg(NODE1, NODE0), ~vote_request_msg(NODE0, NODE1), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), votes(NODE1, NODE1), ~vote_request_msg(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ vote_msg(NODE1, V:node:e0:), ~vote_request_msg(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e0:), vote_msg(V:node:e0:, NODE0), votes(V:node:e0:, V:node:e0:), ]
ucubes2qv #2
	(vote_msg(NODE1, V:node:e0:) & ~vote_request_msg(V:node:e0:, NODE1)) -> [ NODE0, ]
	(vote_msg(V:node:e0:, NODE0) & votes(V:node:e0:, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | ~votes(n1, n1) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  is global clause? No
@     9s  Learning in F[3]: (forall N0, N1 . ((vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n1
		V__fml:sender -> n1
@     9s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = false			--> modified
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[2] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	~vote_request_msg(n0, n1)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | vote_request_msg(n0, n1))
(relations)
	votes
	vote_request_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@     9s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ ~vote_request_msg(V:node:e0:, NODE1), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(votes(V:node:e0:, NODE1) & ~vote_request_msg(V:node:e0:, NODE1)) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (votes(N0, N1) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  is global clause? No
@     9s  Learning in F[3]: (forall N0, N1 . (votes(N0, N1) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  F[3] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[4] unsat core #3 	(ucsz: 6 -> 5 -> 3 -> 3)
(minimal unsat core)
	votes(n1, n1)
	~vote_request_msg(n0, n1)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | ~votes(n1, n1) | vote_request_msg(n0, n1))
(relations)
	votes
	vote_request_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE1, NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@     9s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE1, NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ ~vote_request_msg(V:node:e0:, NODE1), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e0:), votes(V:node:e0:, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(votes(V:node:e0:, NODE1) & ~vote_request_msg(V:node:e0:, NODE1)) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & votes(V:node:e0:, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | ~votes(n1, n1) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((votes(N0, N1) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  is global clause? No
@     9s  Learning in F[4]: (forall N0, N1 . ((votes(N0, N1) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n0
		V__fml:sender -> n1
@     9s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[3] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[4] unsat core #4 	(ucsz: 4 -> 4)
(minimal unsat core)
	leader(n1)
	votes(n1, n1)
	~vote_request_msg(n0, n1)
	vote_msg(n1, n0)
(clause)
	(~leader(n1) | ~vote_msg(n1, n0) | ~votes(n1, n1) | vote_request_msg(n0, n1))
(relations)
	vote_msg
	leader
	votes
	vote_request_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	vote_msg(NODE1, NODE0)
	votes(NODE1, NODE1)
	~vote_request_msg(NODE0, NODE1)
(antecedent reduction)
@     9s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ vote_msg(NODE1, NODE0), ~vote_request_msg(NODE0, NODE1), ]
	NODE1 -> [ leader(NODE1), vote_msg(NODE1, NODE0), votes(NODE1, NODE1), ~vote_request_msg(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ vote_msg(NODE1, V:node:e0:), ~vote_request_msg(V:node:e0:, NODE1), ]
	NODE1 -> [ leader(V:node:e0:), ~vote_request_msg(NODE0, V:node:e0:), vote_msg(V:node:e0:, NODE0), votes(V:node:e0:, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & vote_msg(V:node:e0:, NODE0) & votes(V:node:e0:, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
	(vote_msg(NODE1, V:node:e0:) & ~vote_request_msg(V:node:e0:, NODE1)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~vote_msg(NODE1, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~leader(n1) | ~vote_msg(n1, n0) | ~votes(n1, n1) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~vote_msg(NODE1, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  is global clause? No
@     9s  Learning in F[4]: (forall N0, N1 . ((leader(N1) & vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  F[4] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[5] unsat core #4 	(ucsz: 7 -> 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	leader(n1)
	~voted(n0)
	~vote_request_msg(n0, n1)
	votes(n0, n1)
(clause)
	(~leader(n1) | ~votes(n0, n1) | vote_request_msg(n0, n1) | voted(n0))
(relations)
	leader
	votes
	vote_request_msg
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE0, NODE1)
	~voted(NODE0)
(antecedent reduction)
@     9s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ~voted(NODE0), ]
	NODE1 -> [ leader(NODE1), ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ ~vote_request_msg(V:node:e0:, NODE1), ~voted(V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ leader(V:node:e0:), ~vote_request_msg(NODE0, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(NODE0, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
	(votes(V:node:e0:, NODE1) & ~vote_request_msg(V:node:e0:, NODE1) & ~voted(V:node:e0:)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | vote_request_msg(NODE0, NODE1) | voted(NODE0)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n0, n1) | vote_request_msg(n0, n1) | voted(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE1) | vote_request_msg(NODE0, NODE1) | voted(NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
@     9s  is global clause? No
@     9s  Learning in F[5]: (forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
@     9s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q1
@     9s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n1
		V__fml:sender -> n1
@     9s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = true
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = false			--> modified
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[3] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	votes(n0, n1)
	~vote_request_msg(n0, n1)
	leader(n0)
(clause)
	(~leader(n0) | ~votes(n0, n1) | vote_request_msg(n0, n1))
(relations)
	leader
	votes
	vote_request_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE0, NODE1)
	leader(NODE0)
(antecedent reduction)
@     9s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), leader(NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ~vote_request_msg(V:node:e0:, NODE1), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & votes(V:node:e0:, NODE1) & ~vote_request_msg(V:node:e0:, NODE1)) -> [ NODE0, ]
	(votes(NODE0, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~votes(n0, n1) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & votes(N0, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  is global clause? No
@     9s  Learning in F[4]: (forall N0, N1 . ((leader(N0) & votes(N0, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  F[4] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[5] unsat core #4 	(ucsz: 8 -> 7 -> 6 -> 4 -> 4)
(minimal unsat core)
	votes(n1, n1)
	~vote_request_msg(n0, n1)
	~votes(n0, n0)
	leader(n0)
(clause)
	(~leader(n0) | ~votes(n1, n1) | vote_request_msg(n0, n1) | votes(n0, n0))
(relations)
	leader
	votes
	vote_request_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE1, NODE1)
	~votes(NODE0, NODE0)
	leader(NODE0)
(antecedent reduction)
@     9s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), leader(NODE0), ~votes(NODE0, NODE0), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE1, NODE1), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ~vote_request_msg(V:node:e0:, NODE1), ~votes(V:node:e0:, V:node:e0:), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e0:), votes(V:node:e0:, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & ~vote_request_msg(V:node:e0:, NODE1) & ~votes(V:node:e0:, V:node:e0:)) -> [ NODE0, ]
	(votes(V:node:e0:, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE1, NODE1) | vote_request_msg(NODE0, NODE1) | votes(NODE0, NODE0)))
---------------------------
(original clause)
	(~leader(n0) | ~votes(n1, n1) | vote_request_msg(n0, n1) | votes(n0, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE1, NODE1) | vote_request_msg(NODE0, NODE1) | votes(NODE0, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & votes(N1, N1)) -> (vote_request_msg(N0, N1) | votes(N0, N0))))
@     9s  is global clause? No
@     9s  Learning in F[5]: (forall N0, N1 . ((leader(N0) & votes(N1, N1)) -> (vote_request_msg(N0, N1) | votes(N0, N0))))
@     9s  F[5] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[6] unsat core #4 	(ucsz: 7 -> 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	leader(n1)
	~voted(n0)
	~vote_request_msg(n0, n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n1) | vote_request_msg(n0, n1) | voted(n0))
(relations)
	leader
	vote_request_msg
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE1)
	~vote_request_msg(NODE0, NODE1)
	leader(NODE0)
	~voted(NODE0)
(antecedent reduction)
@     9s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), leader(NODE0), ~voted(NODE0), ]
	NODE1 -> [ leader(NODE1), ~vote_request_msg(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ~vote_request_msg(V:node:e0:, NODE1), ~voted(V:node:e0:), ]
	NODE1 -> [ leader(V:node:e0:), ~vote_request_msg(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & ~vote_request_msg(V:node:e0:, NODE1) & ~voted(V:node:e0:)) -> [ NODE0, ]
	(leader(V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1) | voted(NODE0)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | vote_request_msg(n0, n1) | voted(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1) | voted(NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1)) -> ((N0 = N1) | vote_request_msg(N0, N1) | voted(N0))))
@     9s  is global clause? No
@     9s  Learning in F[6]: (forall N0, N1 . ((leader(N0) & leader(N1)) -> ((N0 = N1) | vote_request_msg(N0, N1) | voted(N0))))
@     9s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     9s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n0
		V__fml:sender -> n1
@     9s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = true
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[4] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[5] unsat core #4 	(ucsz: 5 -> 4 -> 4)
(minimal unsat core)
	decided(n1, v0)
	votes(n1, n1)
	~vote_request_msg(n0, n1)
	vote_msg(n1, n0)
(clause)
	(~decided(n1, v0) | ~vote_msg(n1, n0) | ~votes(n1, n1) | vote_request_msg(n0, n1))
(relations)
	decided
	vote_msg
	votes
	vote_request_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	votes(NODE1, NODE1)
	~vote_request_msg(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     9s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ vote_msg(NODE1, NODE0), ~vote_request_msg(NODE0, NODE1), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), decided(NODE1, VALUE0), votes(NODE1, NODE1), ~vote_request_msg(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ vote_msg(NODE1, V:node:e0:), ~vote_request_msg(V:node:e0:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e0:), vote_msg(V:node:e0:, NODE0), votes(V:node:e0:, V:node:e0:), decided(V:node:e0:, VALUE0), ]
ucubes2qv #2
	(decided(V:node:e0:, VALUE0) & vote_msg(V:node:e0:, NODE0) & votes(V:node:e0:, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
	(vote_msg(NODE1, V:node:e0:) & ~vote_request_msg(V:node:e0:, NODE1)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~vote_msg(NODE1, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~vote_msg(n1, n0) | ~votes(n1, n1) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~vote_msg(NODE1, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  is global clause? No
@     9s  Learning in F[5]: (forall N0, N1, V0 . ((decided(N1, V0) & vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@     9s  F[5] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[6] unsat core #4 	(ucsz: 8 -> 7 -> 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	decided(n1, v0)
	~voted(n0)
	~vote_request_msg(n0, n1)
	votes(n0, n1)
(clause)
	(~decided(n1, v0) | ~votes(n0, n1) | vote_request_msg(n0, n1) | voted(n0))
(relations)
	decided
	votes
	vote_request_msg
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~vote_request_msg(NODE0, NODE1)
	~voted(NODE0)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     9s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #2
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ~voted(NODE0), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ ~vote_request_msg(V:node:e0:, NODE1), ~voted(V:node:e0:), votes(V:node:e0:, NODE1), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ~vote_request_msg(NODE0, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(decided(V:node:e0:, VALUE0) & votes(NODE0, V:node:e0:) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
	(votes(V:node:e0:, NODE1) & ~vote_request_msg(V:node:e0:, NODE1) & ~voted(V:node:e0:)) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | vote_request_msg(NODE0, NODE1) | voted(NODE0)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~votes(n0, n1) | vote_request_msg(n0, n1) | voted(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | vote_request_msg(NODE0, NODE1) | voted(NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
@     9s  is global clause? No
@     9s  Learning in F[6]: (forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
@     9s  F[6] /\ T /\ C+ ?
@     9s  	Ans. UNSAT
@     9s  F[7] unsat core #4 	(ucsz: 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	decided(n1, v0)
	~voted(n0)
	~vote_request_msg(n0, n1)
	leader(n0)
(clause)
	(~decided(n1, v0) | ~leader(n0) | vote_request_msg(n0, n1) | voted(n0))
(relations)
	decided
	leader
	vote_request_msg
	voted
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	~vote_request_msg(NODE0, NODE1)
	~voted(NODE0)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@     9s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), leader(NODE0), ~voted(NODE0), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ~vote_request_msg(V:node:e0:, NODE1), ~voted(V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ~vote_request_msg(NODE0, V:node:e0:), ]
ucubes2qv #2
	(leader(V:node:e0:) & ~vote_request_msg(V:node:e0:, NODE1) & ~voted(V:node:e0:)) -> [ NODE0, ]
	(decided(V:node:e0:, VALUE0) & ~vote_request_msg(NODE0, V:node:e0:)) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1) | voted(NODE0)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~leader(n0) | vote_request_msg(n0, n1) | voted(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE1) | voted(NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> ((N0 = N1) | vote_request_msg(N0, N1) | voted(N0))))
@     9s  is global clause? No
@     9s  Learning in F[7]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> ((N0 = N1) | vote_request_msg(N0, N1) | voted(N0))))
@     9s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n0
		V__fml:v -> v0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = true
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n0
		V__fml:q -> q1
@     9s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n0
		V__fml:sender -> n1
@     9s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e0 with value True
	inputs:
actionName ext:decide
		V__fml:n -> n1
		V__fml:v -> v1
@     9s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	leader(n0) = false
	leader(n1) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@     9s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e0 with value True
	inputs:
actionName ext:become_leader
		V__fml:n -> n1
		V__fml:q -> q1
@     9s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@    10s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e0 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n -> n1
		V__fml:sender -> n1
@    10s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	leader(n0) = false
	leader(n1) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	voted(n0) = false
	voted(n1) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n1, n0) = false
	votes(n1, n1) = false			--> modified
	member(n0, q0) = true
	member(n0, q1) = false
	member(n1, q0) = true
	member(n1, q1) = true

@    10s  F[1] /\ T /\ C+ ?
@    10s  	Ans. UNSAT
@    10s  F[2] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	vote_msg(n1, n1)
(clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n1))
(relations)
	vote_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE1)
	vote_msg(NODE1, NODE0)
(antecedent reduction)
@    10s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~vote_msg(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~vote_msg(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  is global clause? No
@    10s  Learning in F[2]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  F[2] /\ T /\ C+ ?
@    10s  	Ans. UNSAT
@    10s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	vote_msg(n1, n1)
(clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n1))
(relations)
	vote_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE1)
	vote_msg(NODE1, NODE0)
(antecedent reduction)
@    10s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~vote_msg(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~vote_msg(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  is global clause? No
@    10s  Learning in F[3]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  F[3] /\ T /\ C+ ?
@    10s  	Ans. UNSAT
@    10s  F[4] unsat core #2 	(ucsz: 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	vote_msg(n1, n1)
(clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n1))
(relations)
	vote_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE1)
	vote_msg(NODE1, NODE0)
(antecedent reduction)
@    10s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~vote_msg(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~vote_msg(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  is global clause? No
@    10s  Learning in F[4]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  F[4] /\ T /\ C+ ?
@    10s  	Ans. UNSAT
@    10s  F[5] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	vote_msg(n1, n1)
(clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n1))
(relations)
	vote_msg
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE1)
	vote_msg(NODE1, NODE0)
(antecedent reduction)
@    10s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~vote_msg(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~vote_msg(NODE1, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  is global clause? No
@    10s  Learning in F[5]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  F[5] /\ T /\ C+ ?
@    10s  	Ans. UNSAT
@    10s  F[6] unsat core #2 	(ucsz: 5 -> 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	votes(n0, n1)
	vote_msg(n1, n1)
(clause)
	(~vote_msg(n1, n1) | ~votes(n0, n1))
(relations)
	vote_msg
	votes
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	vote_msg(NODE1, NODE1)
	votes(NODE0, NODE1)
(antecedent reduction)
@    10s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ vote_msg(NODE1, NODE1), votes(NODE0, NODE1), ]
qv2ucubes #2
	NODE0 -> [ votes(V:node:e0:, NODE1), ]
	NODE1 -> [ vote_msg(V:node:e0:, V:node:e0:), votes(NODE0, V:node:e0:), ]
ucubes2qv #2
	(vote_msg(V:node:e0:, V:node:e0:) & votes(NODE0, V:node:e0:)) -> [ NODE1, ]
	votes(V:node:e0:, NODE1) -> [ NODE0, ]
(partition) #2 node:e0: -> { NODE1, | NODE0, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~vote_msg(n1, n1) | ~votes(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~vote_msg(NODE1, NODE1) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((vote_msg(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
@    10s  is global clause? No
@    10s  Learning in F[6]: (forall N0, N1 . ((vote_msg(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
@    10s  F[6] /\ T /\ C+ ?
@    10s  	Ans. UNSAT
@    10s  F[7] unsat core #2 	(ucsz: 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v1)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0))
(relations)
	decided
	leader
(fullsorts)
	node:e0: -> [ NODE0, NODE1, ]
(cube: std)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    10s  antecedent: 2 -> 2

qv2cubes #2
	NODE0 -> [ leader(NODE0), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
qv2ucubes #2
	NODE0 -> [ leader(V:node:e0:), ]
	NODE1 -> [ decided(V:node:e0:, VALUE0), ]
ucubes2qv #2
	leader(V:node:e0:) -> [ NODE0, ]
	decided(V:node:e0:, VALUE0) -> [ NODE1, ]
(partition) #2 node:e0: -> { NODE0, | NODE1, | }
	#2 singles, #0 multiples (out of #2 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@    10s  is global clause? No
@    10s  Learning in F[7]: (forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
@    10s  F[7] /\ T /\ !P+ -> UNSAT
Frames: #8
	F[0]: #1
		((forall N0_2, N0_1 . ~vote_request_msg(N0_2, N0_1)) & (forall N0_2 . ~voted(N0_2)) & (forall N0_2, N0 . ~vote_msg(N0_2, N0)) & (forall N0_2, N0_3 . ~votes(N0_2, N0_3)) & (forall N0_2 . ~leader(N0_2)) & (forall N0_2, V0 . ~decided(N0_2, V0)))
	F[1]: #1
		(forall N0, N1 . ~vote_msg(N1, N0))
	F[2]: #2
		(forall N0, N1 . ~votes(N0, N1))
		(forall N0, N1 . (vote_msg(N1, N0) -> ((N0 = N1) | vote_request_msg(N0, N1))))
	F[3]: #4
		(forall N0, N1 . (votes(N0, N1) -> ((N0 = N1) | vote_request_msg(N0, N1))))
		(forall N0 . ~leader(N0))
		(forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
	F[4]: #7
		(forall N0, V0 . ~decided(N0, V0))
		(forall N0, N1 . ((leader(N1) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((leader(N1) & vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
		(forall N0, N1 . ((votes(N0, N1) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
		(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> votes(N1, N0)))
		(forall N0, N1 . ((leader(N0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((leader(N0) & votes(N0, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
	F[5]: #8
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N0) & votes(N1, N0)) -> (N0 = N1)))
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((leader(N0) & votes(N1, N1)) -> (vote_request_msg(N0, N1) | votes(N0, N0))))
		(forall N0, N1, V0 . ((decided(N1, V0) & vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
		(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
		(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
		(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> votes(N1, N0)))
	F[6]: #3
		(forall N0, N1 . ((vote_msg(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((leader(N0) & leader(N1)) -> ((N0 = N1) | vote_request_msg(N0, N1) | voted(N0))))
		(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
	F[7]: #7
		(exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
		(forall N0, N1 . (votes(N0, N1) -> voted(N1)))
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
		(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    10s  
Adding frame 8...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
Forwarded #2 to F[4]
@    10s  Learning in F[4]: (forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
@    10s  Learning in F[4]: (forall N0, N1 . ((vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
Trying forwarding F[4]
Forwarded #3 to F[5]
@    10s  Learning in F[5]: (forall N0, N1 . ((vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@    10s  Learning in F[5]: (forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> votes(N1, N0)))
@    10s  Learning in F[5]: (forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
Trying forwarding F[5]
Forwarded #8 to F[6]
@    10s  Learning in F[6]: (forall N0, N1 . ((leader(N0) & votes(N1, N1)) -> (vote_request_msg(N0, N1) | votes(N0, N0))))
@    10s  Learning in F[6]: (forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
@    10s  Learning in F[6]: (forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
@    10s  Learning in F[6]: (forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
@    10s  Learning in F[6]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    10s  Learning in F[6]: (forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> votes(N1, N0)))
@    10s  Learning in F[6]: (forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> votes(N1, N0)))
@    10s  Learning in F[6]: (forall N0, N1 . ((vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
@    10s  F[5] converged!
Explored 9 frames
@    10s  -------------------------------------------------
### Invariant: #18
invariant [other10]	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> votes(N1, N0)))
invariant [other6]	(forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
invariant [other1]	(forall N0, N1 . ((vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
invariant [other5]	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
invariant [other9]	(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
invariant [global7]	(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
invariant [global4]	(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
invariant [other12]	(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> votes(N1, N0)))
invariant [other7]	(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
invariant [prop1]	(forall V0_1, V0, N0_2, N0 . ((decided(N0_2, V0_1) & decided(N0, V0)) -> (V0_1 = V0)))
invariant [other3]	(forall N0, N1 . ((leader(N0) & votes(N1, N1)) -> (vote_request_msg(N0, N1) | votes(N0, N0))))
invariant [other11]	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
invariant [other2]	(forall N0, N1 . (votes(N0, N1) -> voted(N1)))
invariant [other4]	(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
invariant [global3]	(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
invariant [global5]	(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
invariant [other8]	(forall N0, N1 . ((vote_msg(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
invariant [global1]	(exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
###


Inv_all /\ !P -> UNSAT
Inv_all /\ T /\ !P+ -> UNSAT
Checking Init /\ !Inv:
	#1 other10 -> UNSAT
	#2 other6 -> UNSAT
	#3 other1 -> UNSAT
	#4 prop1  (property) -> UNSAT
	#5 other8 -> UNSAT
	#6 global7 -> UNSAT
	#7 global4 -> UNSAT
	#8 other3 -> UNSAT
	#9 other7 -> UNSAT
	#10 other5 -> UNSAT
	#11 other12 -> UNSAT
	#12 other11 -> UNSAT
	#13 other2 -> UNSAT
	#14 other4 -> UNSAT
	#15 global3 -> UNSAT
	#16 global5 -> UNSAT
	#17 other9 -> UNSAT
	#18 global1 -> UNSAT
	Init /\ !Inv: passed
Checking Inv_all /\ T /\ !Inv+:
	#1 other10 -> UNSAT
	#2 other6 -> UNSAT
	#3 other1 -> UNSAT
	#4 prop1  (property) -> UNSAT
	#5 other8 -> UNSAT
	#6 global7 -> UNSAT
	#7 global4 -> UNSAT
	#8 other3 -> UNSAT
	#9 other7 -> UNSAT
	#10 other5 -> UNSAT
	#11 other12 -> UNSAT
	#12 other11 -> UNSAT
	#13 other2 -> UNSAT
	#14 other4 -> UNSAT
	#15 global3 -> UNSAT
	#16 global5 -> UNSAT
	#17 other9 -> UNSAT
	#18 global1 -> UNSAT
	Inv_all /\ T /\ !Inv+: passed

Finite sorts: #3
	node -> node:e0: -> [`node:e0:0`, `node:e0:1`]
	quorum -> quorum:e0: -> [`quorum:e0:0`, `quorum:e0:1`]
	value -> value:e0: -> [`value:e0:0`, `value:e0:1`]

Invariant is a proof certificate
@    10s  -------------------------------------------------
--> The system is safe!
raw invariant [prop1] (cost: 4, 4F, 0E) 	(forall V1:e0, V2:e0, N1:e0, N2:e0 . ((__decided:e0(N1:e0, V1:e0) & __decided:e0(N2:e0, V2:e0)) -> (V1:e0 = V2:e0)))
raw invariant [other10] (cost: 3, 3F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1, Q:value:e0:0 . (__decided:e0(Q:node:e0:1, Q:value:e0:0) & __votes:e0(Q:node:e0:0, Q:node:e0:1) & ~...(..., ...)))
raw invariant [other6] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__votes:e0(Q:node:e0:1, Q:node:e0:1) & __votes:e0(Q:node:e0:0, Q:node:e0:1) & ~(... = ...)))
raw invariant [other1] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__vote_msg:e0(Q:node:e0:1, Q:node:e0:0) & __votes:e0(Q:node:e0:1, Q:node:e0:1) & ~(... = ...) & ~...(..., ...)))
raw invariant [other5] (cost: 3, 3F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1, Q:value:e0:0 . (__decided:e0(Q:node:e0:1, Q:value:e0:0) & __leader:e0(Q:node:e0:0) & ~(... = ...)))
raw invariant [other9] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__vote_msg:e0(Q:node:e0:1, Q:node:e0:1) & __vote_msg:e0(Q:node:e0:1, Q:node:e0:0) & ~(... = ...)))
raw invariant [global7] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__vote_msg:e0(Q:node:e0:1, Q:node:e0:0) & ~...(...)))
raw invariant [global4] (cost: 3, 2F, 1E) 	~(forall Q:quorum:e0:0 . (exists Q:node:e0:0, Q:node:e0:1 . (...(...) & ...(..., ...) & ~...)))
raw invariant [other12] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__leader:e0(Q:node:e0:1) & __votes:e0(Q:node:e0:0, Q:node:e0:1) & ~...(..., ...)))
raw invariant [other7] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__leader:e0(Q:node:e0:1) & __leader:e0(Q:node:e0:0) & ~(... = ...)))
raw invariant [other3] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__leader:e0(Q:node:e0:0) & __votes:e0(Q:node:e0:1, Q:node:e0:1) & ~...(..., ...) & ~...(..., ...)))
raw invariant [other11] (cost: 3, 3F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1, Q:value:e0:0 . (__decided:e0(Q:node:e0:1, Q:value:e0:0) & __votes:e0(Q:node:e0:0, Q:node:e0:1) & ~...(..., ...) & ~...(...)))
raw invariant [other2] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__votes:e0(Q:node:e0:0, Q:node:e0:1) & ~...(...)))
raw invariant [other4] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__leader:e0(Q:node:e0:1) & __votes:e0(Q:node:e0:0, Q:node:e0:1) & ~...(..., ...) & ~...(...)))
raw invariant [global3] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:value:e0:0 . (~...(...) & __decided:e0(Q:node:e0:0, Q:value:e0:0)))
raw invariant [global5] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__votes:e0(Q:node:e0:0, Q:node:e0:1) & ~...(..., ...)))
raw invariant [other8] (cost: 2, 2F, 0E) 	~(exists Q:node:e0:0, Q:node:e0:1 . (__vote_msg:e0(Q:node:e0:1, Q:node:e0:1) & __votes:e0(Q:node:e0:0, Q:node:e0:1) & ~(... = ...)))
raw invariant [global1] (cost: 3, 2F, 1E) 	~(forall Q:quorum:e0:0 . (exists Q:node:e0:0, Q:node:e0:1 . (...(...) & ...(...) & ...(..., ...) & ~... & ~... & ~...)))
@    10s  Minimizing certificate of size 18
@    10s  	prop1	(cost: 4) -> property
@    10s  	other10	(cost: 3) -> remove
@    10s  	other5	(cost: 3) -> remove
@    11s  	global4	(cost: 3) -> add
@    11s  	other11	(cost: 3) -> remove
@    11s  	global1	(cost: 3) -> remove
@    11s  	other6	(cost: 2) -> remove
@    11s  	other1	(cost: 2) -> remove
@    11s  	other9	(cost: 2) -> add
@    11s  	global7	(cost: 2) -> add
@    11s  	other12	(cost: 2) -> remove
@    11s  	other7	(cost: 2) -> remove
@    11s  	other3	(cost: 2) -> remove
@    12s  	other2	(cost: 2) -> remove
@    12s  	other4	(cost: 2) -> remove
@    12s  	global3	(cost: 2) -> add
@    12s  	global5	(cost: 2) -> add
@    12s  	other8	(cost: 2) -> remove
	Minimized certificate: 18 -> 6
@    12s  -------------------------------------------------
### Proof certificate (required): #6
invariant [prop1]	(forall V0_1, V0, N0_2, N0 . ((decided(N0_2, V0_1) & decided(N0, V0)) -> (V0_1 = V0)))
invariant [global4]	(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
invariant [other9]	(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
invariant [global7]	(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
invariant [global3]	(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
invariant [global5]	(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
###

### Optional invariants: #12
invariant [other10_optional]	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> votes(N1, N0)))
invariant [other5_optional]	(forall N0, N1, V0 . ((decided(N1, V0) & leader(N0)) -> (N0 = N1)))
invariant [other11_optional]	(forall N0, N1, V0 . ((decided(N1, V0) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
invariant [global1_optional]	(exists Q0 . (forall N0, N1 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N0, N0) | votes(N1, N0)))))
invariant [other6_optional]	(forall N0, N1 . ((votes(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
invariant [other1_optional]	(forall N0, N1 . ((vote_msg(N1, N0) & votes(N1, N1)) -> ((N0 = N1) | vote_request_msg(N0, N1))))
invariant [other12_optional]	(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> votes(N1, N0)))
invariant [other7_optional]	(forall N0, N1 . ((leader(N1) & leader(N0)) -> (N0 = N1)))
invariant [other3_optional]	(forall N0, N1 . ((leader(N0) & votes(N1, N1)) -> (vote_request_msg(N0, N1) | votes(N0, N0))))
invariant [other2_optional]	(forall N0, N1 . (votes(N0, N1) -> voted(N1)))
invariant [other4_optional]	(forall N0, N1 . ((leader(N1) & votes(N0, N1)) -> (vote_request_msg(N0, N1) | voted(N0))))
invariant [other8_optional]	(forall N0, N1 . ((vote_msg(N1, N1) & votes(N0, N1)) -> (N0 = N1)))
###

	random:	0
	scalls:	906
	scalls-finite:	906
	scalls-infinite:	0
	scalls-finite-full:	906
	cti:	76
	cubes:	77
	subsumed-calls:	752
	subsumed-subset:	20
	subsumed-varintersect-c:	646
	subsumed-varintersect-e:	0
	subsumed-query-sat:	75
	subsumed-query-unsat:	11
	subsumed-eq:	51
	unsat-core:	140
	sz-unsat-core-avg:	3.00
	sz-unsat-min-avg:	2.06
	sz-cube-avg:	24.00
	antecedent-reduction-sum:	40
	antecedent-total-sum:	138
	antecedent-reduction-avg:	0.29
	antecedent-calls:	64
	antecedent-calls-reduced:	20
	antecedent-scalls:	202
	time-q-max-finite-ms:	15
	time-q-max-finite-core-ms:	0
	time-q-max-infinite-ms:	0
	time-q-max-infinite-core-ms:	0
	time-cti-bad-sat:	0
	time-cti-bad-unsat:	0
	time-cti-sat:	1
	time-cti-unsat:	2
	time-forward:	0
	time-antecedent:	1
	time-subsume:	0
	time-subsume-query:	0
	time-inv-check-finite:	0
	time-inv-check-infinite:	0
	time-inv-reuse:	0
	time-minimize:	2
	time-qf:	0
	time-sum:	7
@    12s  -------------------------------------------------
@    12s  -------------------------------------------------
sort: node <-> unbounded
sort: quorum <-> unbounded
sort: value <-> unbounded
(use_wires: False)
@    12s  (finite convergence checks)
@    12s  (performing finite convergence checks for node)
(enumsort) node <-> node:e1:
	[ NODE0, NODE1, NODE2, ] <-> [ n0, n1, n2, ]
(enumsort) quorum <-> quorum:e1:
	[ QUORUM0, QUORUM1, QUORUM2, ] <-> [ q0, q1, q2, ]
(enumsort) value <-> value:e1:
	[ VALUE0, VALUE1, ] <-> [ v0, v1, ]
	dep_height[q0] = 0
	dep_height[q1] = 1
	dep_height[q2] = 2
	dep_height[v0] = 100
	dep_height[v1] = 101
	dep_height[n0] = 200
	dep_height[n1] = 201
	dep_height[n2] = 202
(use_wires: False)
@    12s  -------------------------------------------------
### Invariant: #6
invariant [global7]	(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
invariant [global4]	(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
invariant [prop1]	(forall V1_1, V1, N1_2, N1 . ((decided(N1_2, V1_1) & decided(N1, V1)) -> (V1_1 = V1)))
invariant [other9]	(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
invariant [global3]	(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
invariant [global5]	(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
###


Inv_all /\ !P -> UNSAT
Inv_all /\ T /\ !P+ -> SAT
Checking Init /\ !Inv:
	#1 global7 -> UNSAT
	#2 global4 -> UNSAT
	#3 prop1  (property) -> UNSAT
	#4 other9 -> UNSAT
	#5 global5 -> UNSAT
	#6 global3 -> UNSAT
	Init /\ !Inv: passed
Checking Inv_all /\ T /\ !Inv+:
	#1 global7 -> UNSAT
	#2 global4 -> SAT
	#3 prop1  (property) -> SAT
	#4 other9 -> UNSAT
	#5 global5 -> UNSAT
	#6 global3 -> UNSAT
	Inv_all /\ T /\ !Inv+: 2 failed

Finite sorts: #3
	node -> node:e1: -> [`node:e1:0`, `node:e1:1`, `node:e1:2`]
	quorum -> quorum:e1: -> [`quorum:e1:0`, `quorum:e1:1`, `quorum:e1:2`]
	value -> value:e1: -> [`value:e1:0`, `value:e1:1`]

Invariant is not a proof certificate
@    12s  -------------------------------------------------
@    12s  (extended |node| to 3)
@    12s  (finite convergence checks failed for node)
(enumsort) node <-> node:e2:
	[ NODE0, NODE1, NODE2, ] <-> [ n0, n1, n2, ]
(enumsort) quorum <-> quorum:e2:
	[ QUORUM0, QUORUM1, QUORUM2, ] <-> [ q0, q1, q2, ]
(enumsort) value <-> value:e2:
	[ VALUE0, VALUE1, ] <-> [ v0, v1, ]
	dep_height[q0] = 0
	dep_height[q1] = 1
	dep_height[q2] = 2
	dep_height[n0] = 100
	dep_height[n1] = 101
	dep_height[n2] = 102
	dep_height[v0] = 200
	dep_height[v1] = 201
(use_wires: False)
sort: node <-> unbounded
sort: quorum <-> unbounded
sort: value <-> unbounded
(use_wires: False)
@    12s  -------------------------------------------------
### Checking reusability of clauses: #5
invariant [global5]	(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
invariant [global4]	(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
invariant [other9]	(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
invariant [global3]	(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
invariant [global7]	(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
###

Checking Init /\ !Inv:
	#1 global5 -> UNSAT
	#2 global4 -> UNSAT
	#3 other9 -> UNSAT
	#4 global3 -> UNSAT
	#5 global7 -> UNSAT
	Init /\ !Inv: passed
Checking Init /\ T /\ !Inv+:
	#1 global5 -> UNSAT
	#2 global4 -> UNSAT
	#3 other9 -> UNSAT
	#4 global3 -> UNSAT
	#5 global7 -> UNSAT
	Init /\ T /\ !Inv+: passed

Finite sorts: #0

Reusable: 5 -> 5 (0 + 0 failed)
All clauses reusable
@    12s  -------------------------------------------------
	random:	0
	scalls:	930
	scalls-finite:	920
	scalls-infinite:	10
	scalls-finite-full:	920
	cti:	76
	cubes:	77
	subsumed-calls:	752
	subsumed-subset:	20
	subsumed-varintersect-c:	646
	subsumed-varintersect-e:	0
	subsumed-query-sat:	75
	subsumed-query-unsat:	11
	subsumed-eq:	51
	unsat-core:	140
	sz-unsat-core-avg:	3.00
	sz-unsat-min-avg:	2.06
	sz-cube-avg:	24.00
	antecedent-reduction-sum:	40
	antecedent-total-sum:	138
	antecedent-reduction-avg:	0.29
	antecedent-calls:	64
	antecedent-calls-reduced:	20
	antecedent-scalls:	202
	time-q-max-finite-ms:	15
	time-q-max-finite-core-ms:	0
	time-q-max-infinite-ms:	5
	time-q-max-infinite-core-ms:	0
	time-cti-bad-sat:	0
	time-cti-bad-unsat:	0
	time-cti-sat:	1
	time-cti-unsat:	2
	time-forward:	0
	time-antecedent:	1
	time-subsume:	0
	time-subsume-query:	0
	time-inv-check-finite:	0
	time-inv-check-infinite:	0
	time-inv-reuse:	0
	time-minimize:	2
	time-qf:	0
	time-sum:	7
@    12s  -------------------------------------------------
@    12s  -------------------------------------------------
@    12s  (incremental SymIC3)
	dep_height[q0] = 0
	dep_height[q1] = 1
	dep_height[q2] = 2
	dep_height[n0] = 100
	dep_height[n1] = 101
	dep_height[n2] = 102
	dep_height[v0] = 200
	dep_height[v1] = 201
(use_wires: False)

Checking property...

@    12s  Storing init values:
@    12s  Init -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(one of the initial states)
	member(n0, q0)
	member(n0, q1)
	member(n0, q2)
	~decided(n0, v0)
	~decided(n0, v1)
	~decided(n1, v0)
	~decided(n1, v1)
	~decided(n2, v0)
	~decided(n2, v1)
	~leader(n0)
	~leader(n1)
	~leader(n2)
	~vote_msg(n0, n0)
	~vote_msg(n0, n1)
	~vote_msg(n0, n2)
	~vote_msg(n1, n0)
	~vote_msg(n1, n1)
	~vote_msg(n1, n2)
	~vote_msg(n2, n0)
	~vote_msg(n2, n1)
	~vote_msg(n2, n2)
	~vote_request_msg(n0, n0)
	~vote_request_msg(n0, n1)
	~vote_request_msg(n0, n2)
	~vote_request_msg(n1, n0)
	~vote_request_msg(n1, n1)
	~vote_request_msg(n1, n2)
	~vote_request_msg(n2, n0)
	~vote_request_msg(n2, n1)
	~vote_request_msg(n2, n2)
	~voted(n0)
	~voted(n1)
	~voted(n2)
	~votes(n0, n0)
	~votes(n0, n1)
	~votes(n0, n2)
	~votes(n1, n0)
	~votes(n1, n1)
	~votes(n1, n2)
	~votes(n2, n0)
	~votes(n2, n1)
	~votes(n2, n2)
	~member(n1, q0)
	~member(n1, q1)
	~member(n1, q2)
	~member(n2, q0)
	~member(n2, q1)
	~member(n2, q2)

@    12s  F[0] /\ !P -> UNSAT
@    12s  F[0] /\ T /\ !P+ -> UNSAT
Frames: #1
	F[0]: #1
		((forall N3_2, N3_1 . ~vote_request_msg(N3_2, N3_1)) & (forall N3_2 . ~voted(N3_2)) & (forall N3_2, N3 . ~vote_msg(N3_2, N3)) & (forall N3_2, N3_3 . ~votes(N3_2, N3_3)) & (forall N3_2 . ~leader(N3_2)) & (forall N3_2, V3 . ~decided(N3_2, V3)))
@    12s  
Adding frame 1...
@    12s  Is F[0] -> global7? -> UNSAT
@    12s  Is global7 inductive? -> UNSAT
@    12s  Is F[0] -> global5? -> UNSAT
@    12s  Is global5 inductive? -> UNSAT
@    12s  Is F[0] -> global3? -> UNSAT
@    12s  Is global3 inductive? -> UNSAT
@    12s  Is F[0] -> other9? -> UNSAT
@    12s  Is other9 inductive? -> SAT
@    12s  Is F[0] /\ T -> other9+? -> UNSAT
@    12s  Learning in F[1]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    12s  Is F[0] -> global4? -> UNSAT
@    12s  Is global4 inductive? -> SAT
@    12s  Is F[0] /\ T -> global4+? -> UNSAT
@    12s  Learning in F[1]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
Seeded 5 (global: 3, init: 2) helpers out of 5
@    12s  Learning in F[1]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    12s  Learning in F[1]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    12s  Learning in F[1]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    12s  F[1] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[1])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    12s  F[0] /\ T /\ C+ ?
@    12s  	Ans. UNSAT
@    12s  F[1] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	decided(n1, v1)
(clause)
	~decided(n1, v1)
(relations)
	decided
(cube: std)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(original clause)
	~decided(n1, v1)
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(clause-type: univ)	(forall N0, V0 . ~decided(N0, V0))
@    12s  is global clause? No
@    12s  Learning in F[1]: (forall N0, V0 . ~decided(N0, V0))
@    12s  F[1] /\ T /\ !P+ -> UNSAT
Frames: #2
	F[0]: #1
		((forall N3_2, N3_1 . ~vote_request_msg(N3_2, N3_1)) & (forall N3_2 . ~voted(N3_2)) & (forall N3_2, N3 . ~vote_msg(N3_2, N3)) & (forall N3_2, N3_3 . ~votes(N3_2, N3_3)) & (forall N3_2 . ~leader(N3_2)) & (forall N3_2, V3 . ~decided(N3_2, V3)))
	F[1]: #5
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
		(forall N0, V0 . ~decided(N0, V0))
		(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    12s  
Adding frame 2...
Trying forwarding F[1]
Forwarded #3 to F[2]
@    12s  Learning in F[2]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    12s  Learning in F[2]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    12s  Learning in F[2]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    12s  Learning in F[2]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    12s  Learning in F[2]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    12s  Learning in F[2]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    12s  F[2] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    12s  F[1] /\ T /\ C+ ?
@    12s  	Ans. UNSAT
@    12s  F[2] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	decided(n1, v0)
	decided(n2, v0)
(clause)
	(~decided(n1, v0) | ~decided(n2, v0))
(relations)
	decided
(cube: std)
	decided(NODE0, VALUE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    12s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE0, VALUE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~decided(n2, v0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE0, VALUE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N0, V0) & decided(N1, V0)) -> (N0 = N1)))
@    12s  is global clause? No
@    12s  Learning in F[2]: (forall N0, N1, V0 . ((decided(N0, V0) & decided(N1, V0)) -> (N0 = N1)))
@    12s  F[2] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

(cube in F[2])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    12s  F[1] /\ T /\ C+ ?
@    12s  	Ans. UNSAT
@    13s  F[2] unsat core #5 	(ucsz: 6 -> 5 -> 5)
(minimal unsat core)
	~votes(n0, n0)
	member(n0, q0)
	member(n0, q2)
	leader(n0)
	member(n0, q1)
(clause)
	(~leader(n0) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | votes(n0, n0))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
(cube: std)
	leader(NODE0)
	~votes(NODE0, NODE0)
	member(NODE0, QUORUM2)
	member(NODE0, QUORUM1)
	member(NODE0, QUORUM0)
(antecedent reduction)
@    13s  antecedent: 3 -> 3

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE0, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall NODE0 . (~leader(NODE0) | ~member(NODE0, QUORUM0) | votes(NODE0, NODE0))))
(non-epr version)
	(forall NODE0 . (exists QUORUM0 . (~leader(NODE0) | ~member(NODE0, QUORUM0) | votes(NODE0, NODE0))))
(epr-reduction) -> SAT
	EPR-reduction is not allowed!
	Learning non-epr version instead.
(boosted clause)
	(forall NODE0 . (exists QUORUM0 . (~leader(NODE0) | ~member(NODE0, QUORUM0) | votes(NODE0, NODE0))))
---------------------------
(original clause)
	(~leader(n0) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | votes(n0, n0))
(learnt sym-boosted clause)
	(forall NODE0 . (exists QUORUM0 . (~leader(NODE0) | ~member(NODE0, QUORUM0) | votes(NODE0, NODE0))))
---------------------------
(clause-type: non-epr)	(forall N0 . (exists Q0 . ((leader(N0) & member(N0, Q0)) -> votes(N0, N0))))
@    13s  is global clause? Yes
@    13s  Learning in F[2]: (forall N0 . (exists Q0 . ((leader(N0) & member(N0, Q0)) -> votes(N0, N0))))
@    13s  F[2] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    13s  F[1] /\ T /\ C+ ?
@    13s  	Ans. UNSAT
@    13s  F[2] unsat core #5 	(ucsz: 6 -> 5 -> 5)
(minimal unsat core)
	~votes(n0, n1)
	member(n1, q0)
	member(n1, q1)
	leader(n0)
	member(n1, q2)
(clause)
	(~leader(n0) | ~member(n1, q0) | ~member(n1, q1) | ~member(n1, q2) | votes(n0, n1))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
(cube: std)
	leader(NODE0)
	member(NODE1, QUORUM0)
	member(NODE1, QUORUM2)
	~votes(NODE0, NODE1)
	member(NODE1, QUORUM1)
(antecedent reduction)
@    13s  antecedent: 5 -> 3 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE1, QUORUM1), ]
	QUORUM2 -> [ member(NODE1, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE1, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1 . (~leader(NODE0) | ~member(NODE1, QUORUM0) | votes(NODE0, NODE1))))
(non-epr version)
	(forall NODE0, NODE1 . (exists QUORUM0 . (~leader(NODE0) | ~member(NODE1, QUORUM0) | votes(NODE0, NODE1))))
(epr-reduction) -> SAT
	EPR-reduction is not allowed!
	Learning non-epr version instead.
(boosted clause)
	(forall NODE0, NODE1 . (exists QUORUM0 . (~leader(NODE0) | ~member(NODE1, QUORUM0) | votes(NODE0, NODE1))))
---------------------------
(original clause)
	(~leader(n0) | ~member(n1, q0) | ~member(n1, q1) | ~member(n1, q2) | votes(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (exists QUORUM0 . (~leader(NODE0) | ~member(NODE1, QUORUM0) | votes(NODE0, NODE1))))
---------------------------
(clause-type: non-epr)	(forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    13s  is global clause? Yes
@    13s  Learning in F[2]: (forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    13s  F[2] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    13s  F[1] /\ T /\ C+ ?
@    13s  	Ans. UNSAT
@    13s  F[2] unsat core #6 	(ucsz: 7 -> 6 -> 6)
(minimal unsat core)
	member(n0, q1)
	member(n0, q2)
	member(n1, q0)
	leader(n0)
	~votes(n0, n0)
	~votes(n0, n1)
(clause)
	(~leader(n0) | ~member(n0, q1) | ~member(n0, q2) | ~member(n1, q0) | votes(n0, n0) | votes(n0, n1))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
(cube: std)
	~votes(NODE0, NODE0)
	member(NODE0, QUORUM2)
	~votes(NODE0, NODE1)
	leader(NODE0)
	member(NODE1, QUORUM0)
	member(NODE0, QUORUM1)
(antecedent reduction)
@    13s  antecedent: 5 -> 3 (reduced)
	removed: NODE0
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM0, ]
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, QUORUM2, ]
(partition) #2 quorum:e2: -> { QUORUM0, | QUORUM1, QUORUM2, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM0:
		member(NODE1, QUORUM0)
ucmulti:
	member(NODE0, QUORUM1)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
(epr reduced)
	(exists QUORUM1 . (forall NODE0, NODE1, QUORUM0 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | votes(NODE0, NODE0) | votes(NODE0, NODE1))))
(non-epr version)
	(forall NODE0, NODE1, QUORUM0 . (exists QUORUM1 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | votes(NODE0, NODE0) | votes(NODE0, NODE1))))
	Both verions not allowed!
(epr-reduction) -> SAT
	EPR-reduction is not allowed!
	Learning non-epr version instead.
(boosted clause)
	(forall NODE0, NODE1, QUORUM0 . (exists QUORUM1 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | votes(NODE0, NODE0) | votes(NODE0, NODE1))))
---------------------------
(original clause)
	(~leader(n0) | ~member(n0, q1) | ~member(n0, q2) | ~member(n1, q0) | votes(n0, n0) | votes(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, QUORUM0 . (exists QUORUM1 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | votes(NODE0, NODE0) | votes(NODE0, NODE1))))
---------------------------
(clause-type: non-epr)	(forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    13s  is global clause? Yes
@    13s  Learning in F[2]: (forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    13s  F[2] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    13s  F[1] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    13s  	Ans. SAT
(cube in F[1])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    13s  F[0] /\ T /\ C+ ?
@    13s  	Ans. UNSAT
@    13s  F[1] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	vote_msg(n2, n0)
(clause)
	~vote_msg(n2, n0)
(relations)
	vote_msg
(cube: std)
	vote_msg(NODE1, NODE0)
(antecedent reduction)
@    13s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1 . ~vote_msg(NODE1, NODE0))
---------------------------
(original clause)
	~vote_msg(n2, n0)
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . ~vote_msg(NODE1, NODE0))
---------------------------
(clause-type: univ)	(forall N0, N1 . ~vote_msg(N1, N0))
@    13s  is global clause? No
@    13s  Learning in F[1]: (forall N0, N1 . ~vote_msg(N1, N0))
@    13s  F[1] /\ T /\ C+ ?
@    13s  	Ans. UNSAT
@    13s  F[2] unsat core #1 	(ucsz: 2 -> 1 -> 1)
(minimal unsat core)
	votes(n0, n2)
(clause)
	~votes(n0, n2)
(relations)
	votes
(cube: std)
	votes(NODE0, NODE1)
(antecedent reduction)
@    13s  antecedent: 2 -> 0 (reduced)
	removed: NODE0
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1 . ~votes(NODE0, NODE1))
---------------------------
(original clause)
	~votes(n0, n2)
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . ~votes(NODE0, NODE1))
---------------------------
(clause-type: univ)	(forall N0, N1 . ~votes(N0, N1))
@    13s  is global clause? No
@    13s  Learning in F[2]: (forall N0, N1 . ~votes(N0, N1))
@    13s  F[2] /\ T /\ !P+ -> UNSAT
Frames: #3
	F[0]: #1
		((forall N3_2, N3_1 . ~vote_request_msg(N3_2, N3_1)) & (forall N3_2 . ~voted(N3_2)) & (forall N3_2, N3 . ~vote_msg(N3_2, N3)) & (forall N3_2, N3_3 . ~votes(N3_2, N3_3)) & (forall N3_2 . ~leader(N3_2)) & (forall N3_2, V3 . ~decided(N3_2, V3)))
	F[1]: #3
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, V0 . ~decided(N0, V0))
		(forall N0, N1 . ~vote_msg(N1, N0))
	F[2]: #7
		(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
		(forall N0, N1, V0 . ((decided(N0, V0) & decided(N1, V0)) -> (N0 = N1)))
		(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
		(forall N0, N1 . ~votes(N0, N1))
		(forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
		(forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    13s  
Adding frame 3...
Trying forwarding F[1]
Forwarded #2 to F[2]
@    13s  Learning in F[2]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@    13s  Learning in F[2]: (forall N0, V0 . ~decided(N0, V0))
Trying forwarding F[2]
Forwarded #4 to F[3]
@    13s  Learning in F[3]: (forall N0, V0 . ~decided(N0, V0))
@    13s  Learning in F[3]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
@    13s  Learning in F[3]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    13s  Learning in F[3]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    13s  Learning in F[3]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    13s  Learning in F[3]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    13s  Learning in F[3]: (forall N0 . (exists Q0 . ((leader(N0) & member(N0, Q0)) -> votes(N0, N0))))
@    13s  Learning in F[3]: (forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    13s  Learning in F[3]: (forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    13s  Learning in F[3]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    13s  F[3] /\ T /\ !P+ -> UNSAT
Frames: #4
	F[0]: #1
		((forall N3_2, N3_1 . ~vote_request_msg(N3_2, N3_1)) & (forall N3_2 . ~voted(N3_2)) & (forall N3_2, N3 . ~vote_msg(N3_2, N3)) & (forall N3_2, N3_3 . ~votes(N3_2, N3_3)) & (forall N3_2 . ~leader(N3_2)) & (forall N3_2, V3 . ~decided(N3_2, V3)))
	F[1]: #1
		(forall N0, N1 . ~vote_msg(N1, N0))
	F[2]: #1
		(forall N0, N1 . ~votes(N0, N1))
	F[3]: #8
		(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
		(forall N0, V0 . ~decided(N0, V0))
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
		(forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    13s  
Adding frame 4...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
Forwarded #6 to F[4]
@    13s  Learning in F[4]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    13s  Learning in F[4]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    13s  Learning in F[4]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    13s  Learning in F[4]: (forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    13s  Learning in F[4]: (forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    13s  Learning in F[4]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    13s  Learning in F[4]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    13s  Learning in F[4]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    13s  Learning in F[4]: (forall N0 . (exists Q0 . ((leader(N0) & member(N0, Q0)) -> votes(N0, N0))))
@    13s  Learning in F[4]: (forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    13s  Learning in F[4]: (forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    13s  Learning in F[4]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    13s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[4])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    14s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    14s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    14s  F[2] /\ T /\ C+ ?
@    14s  	Ans. UNSAT
@    14s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	votes(n1, n2)
	votes(n0, n1)
(clause)
	(~votes(n0, n1) | ~votes(n1, n2))
(relations)
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE1, NODE2)
	votes(NODE0, NODE1)
(antecedent reduction)
@    14s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~votes(NODE1, NODE2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~votes(n0, n1) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~votes(NODE1, NODE2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N1, N2) & votes(N0, N1)) -> (N0 = N2)))
@    14s  is global clause? No
@    14s  Learning in F[3]: (forall N0, N1, N2 . ((votes(N1, N2) & votes(N0, N1)) -> (N0 = N2)))
@    14s  F[3] /\ T /\ C+ ?
@    14s  	Ans. UNSAT
@    14s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	votes(n1, n2)
	votes(n0, n1)
	decided(n1, v1)
(clause)
	(~decided(n1, v1) | ~votes(n0, n1) | ~votes(n1, n2))
(relations)
	decided
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE1, NODE2)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    14s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE2), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE1, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE1), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, NODE2), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ votes(NODE1, V:node:e2:), ]
ucubes2qv #3
	(decided(V:node:e2:, VALUE0) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE2)) -> [ NODE1, ]
	votes(NODE1, V:node:e2:) -> [ NODE2, ]
	votes(V:node:e2:, NODE1) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE2) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n0, n1) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE2) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N2)) -> (N0 = N2)))
@    14s  is global clause? No
@    14s  Learning in F[4]: (forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N2)) -> (N0 = N2)))
@    14s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    14s  F[3] /\ T /\ C+ ?
@    14s  	Ans. UNSAT
@    14s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	decided(n1, v0)
	votes(n0, n2)
	votes(n0, n0)
(clause)
	(~decided(n1, v0) | ~votes(n0, n0) | ~votes(n0, n2))
(relations)
	decided
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE0)
	votes(NODE0, NODE2)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    14s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE0), votes(NODE0, NODE2), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ]
	NODE2 -> [ votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(votes(V:node:e2:, NODE2) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	decided(V:node:e2:, VALUE0) -> [ NODE1, ]
	votes(NODE0, V:node:e2:) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~votes(n0, n0) | ~votes(n0, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N0) & votes(N0, N2)) -> (N0 = N2)))
@    14s  is global clause? No
@    14s  Learning in F[4]: (forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N0) & votes(N0, N2)) -> (N0 = N2)))
@    14s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    14s  F[3] /\ T /\ C+ ?
@    14s  	Ans. UNSAT
@    14s  F[4] unsat core #5 	(ucsz: 8 -> 7 -> 6 -> 5 -> 5)
(minimal unsat core)
	member(n0, q2)
	member(n1, q0)
	member(n1, q1)
	leader(n0)
	leader(n1)
(clause)
	(~leader(n0) | ~leader(n1) | ~member(n0, q2) | ~member(n1, q0) | ~member(n1, q1))
(relations)
	leader
	member
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
(cube: std)
	leader(NODE0)
	leader(NODE1)
	member(NODE1, QUORUM1)
	member(NODE0, QUORUM2)
	member(NODE1, QUORUM0)
(antecedent reduction)
@    14s  antecedent: 5 -> 5

qv2cubes #3
	QUORUM1 -> [ member(NODE1, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM1, QUORUM0, ]
	member(NODE0, V:quorum:e2:) -> [ QUORUM2, ]
(partition) #2 quorum:e2: -> { QUORUM1, QUORUM0, | QUORUM2, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM2:
		member(NODE0, QUORUM2)
ucmulti:
	member(NODE1, QUORUM0)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE0) | ~leader(NODE1) | ~member(NODE0, QUORUM2) | (NODE0 = NODE1))))
(non-epr version)
	(forall QUORUM2, NODE0, NODE1 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE0) | ~leader(NODE1) | ~member(NODE0, QUORUM2) | (NODE0 = NODE1))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE0) | ~leader(NODE1) | ~member(NODE0, QUORUM2) | (NODE0 = NODE1))))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | ~member(n0, q2) | ~member(n1, q0) | ~member(n1, q1))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE0) | ~leader(NODE1) | ~member(NODE0, QUORUM2) | (NODE0 = NODE1))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall Q2, N0, N1 . ((((Q2 = Q0) | member(N1, Q0)) & leader(N0) & leader(N1) & member(N0, Q2)) -> (N0 = N1))))
@    15s  is global clause? No
@    15s  Learning in F[4]: (exists Q0 . (forall Q2, N0, N1 . ((((Q2 = Q0) | member(N1, Q0)) & leader(N0) & leader(N1) & member(N0, Q2)) -> (N0 = N1))))
@    15s  F[4] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

(cube in F[4])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    15s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    15s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    15s  F[2] /\ T /\ C+ ?
@    15s  	Ans. UNSAT
@    15s  F[3] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	votes(n0, n1)
	votes(n2, n1)
(clause)
	(~votes(n0, n1) | ~votes(n2, n1))
(relations)
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE1)
	votes(NODE2, NODE1)
(antecedent reduction)
@    16s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@    16s  is global clause? No
@    16s  Learning in F[3]: (forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@    16s  F[3] /\ T /\ C+ ?
@    16s  	Ans. UNSAT
@    16s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	votes(n0, n1)
	votes(n2, n1)
	decided(n2, v1)
(clause)
	(~decided(n2, v1) | ~votes(n0, n1) | ~votes(n2, n1))
(relations)
	decided
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	decided(NODE2, VALUE0)
	votes(NODE0, NODE1)
	votes(NODE2, NODE1)
(antecedent reduction)
@    16s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE0, NODE1), votes(NODE2, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE1), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(votes(NODE0, V:node:e2:) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, NODE1)) -> [ NODE2, ]
	votes(V:node:e2:, NODE1) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~votes(n0, n1) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@    16s  is global clause? No
@    16s  Learning in F[4]: (forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@    16s  F[4] /\ T /\ !P+ -> UNSAT
Frames: #5
	F[0]: #1
		((forall N3_2, N3_1 . ~vote_request_msg(N3_2, N3_1)) & (forall N3_2 . ~voted(N3_2)) & (forall N3_2, N3 . ~vote_msg(N3_2, N3)) & (forall N3_2, N3_3 . ~votes(N3_2, N3_3)) & (forall N3_2 . ~leader(N3_2)) & (forall N3_2, V3 . ~decided(N3_2, V3)))
	F[1]: #1
		(forall N0, N1 . ~vote_msg(N1, N0))
	F[2]: #1
		(forall N0, N1 . ~votes(N0, N1))
	F[3]: #4
		(forall N0, N1, N2 . ((votes(N1, N2) & votes(N0, N1)) -> (N0 = N2)))
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, V0 . ~decided(N0, V0))
	F[4]: #10
		(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N2)) -> (N0 = N2)))
		(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
		(exists Q0 . (forall Q2, N0, N1 . ((((Q2 = Q0) | member(N1, Q0)) & leader(N0) & leader(N1) & member(N0, Q2)) -> (N0 = N1))))
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
		(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
		(forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
		(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N0) & votes(N0, N2)) -> (N0 = N2)))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    16s  
Adding frame 5...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
Forwarded #1 to F[4]
@    16s  Learning in F[4]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
Trying forwarding F[4]
Forwarded #4 to F[5]
@    16s  Learning in F[5]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    16s  Learning in F[5]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    16s  Learning in F[5]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    16s  Learning in F[5]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    16s  Learning in F[5]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    16s  Learning in F[5]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    16s  Learning in F[5]: (forall N0 . (exists Q0 . ((leader(N0) & member(N0, Q0)) -> votes(N0, N0))))
@    16s  Learning in F[5]: (forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    16s  Learning in F[5]: (forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    16s  Learning in F[5]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    16s  F[5] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[5])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    16s  F[4] /\ T /\ C+ ?
@    16s  	Ans. UNSAT
@    17s  F[5] unsat core #5 	(ucsz: 10 -> 8 -> 7 -> 6 -> 5 -> 5)
(minimal unsat core)
	member(n0, q1)
	member(n0, q2)
	member(n1, q0)
	decided(n1, v1)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0) | ~member(n0, q1) | ~member(n0, q2) | ~member(n1, q0))
(relations)
	decided
	leader
	member
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
(cube: std)
	leader(NODE0)
	member(NODE1, QUORUM0)
	member(NODE0, QUORUM1)
	decided(NODE1, VALUE0)
	member(NODE0, QUORUM2)
(antecedent reduction)
@    17s  antecedent: 5 -> 5

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM0, ]
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, QUORUM2, ]
(partition) #2 quorum:e2: -> { QUORUM0, | QUORUM1, QUORUM2, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM0:
		member(NODE1, QUORUM0)
ucmulti:
	member(NODE0, QUORUM1)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM1 . (forall NODE0, NODE1, QUORUM0 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~decided(NODE1, VALUE0) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | (NODE0 = NODE1)))))
(non-epr version)
	(forall VALUE0 . (forall NODE0, NODE1, QUORUM0 . (exists QUORUM1 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~decided(NODE1, VALUE0) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | (NODE0 = NODE1)))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM1 . (forall NODE0, NODE1, QUORUM0 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~decided(NODE1, VALUE0) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | (NODE0 = NODE1)))))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0) | ~member(n0, q1) | ~member(n0, q2) | ~member(n1, q0))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM1 . (forall NODE0, NODE1, QUORUM0 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~decided(NODE1, VALUE0) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | (NODE0 = NODE1)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q1 . (forall N0, N1, Q0 . ((((Q0 = Q1) | member(N0, Q1)) & decided(N1, V0) & leader(N0) & member(N1, Q0)) -> (N0 = N1)))))
@    17s  is global clause? No
@    17s  Learning in F[5]: (forall V0 . (exists Q1 . (forall N0, N1, Q0 . ((((Q0 = Q1) | member(N0, Q1)) & decided(N1, V0) & leader(N0) & member(N1, Q0)) -> (N0 = N1)))))
@    17s  F[5] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

(cube in F[5])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    17s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    17s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    17s  F[3] /\ T /\ C+ ?
@    17s  	Ans. UNSAT
@    18s  F[4] unsat core #2 	(ucsz: 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	leader(n2)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n2))
(relations)
	leader
(cube: std)
	leader(NODE0)
	leader(NODE1)
(antecedent reduction)
@    18s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
@    18s  is global clause? No
@    18s  Learning in F[4]: (forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
@    18s  F[4] /\ T /\ C+ ?
@    18s  	Ans. UNSAT
@    18s  F[5] unsat core #2 	(ucsz: 5 -> 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	leader(n0)
	decided(n2, v1)
(clause)
	(~decided(n2, v1) | ~leader(n0))
(relations)
	decided
	leader
(cube: std)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    18s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~leader(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
@    18s  is global clause? No
@    18s  Learning in F[5]: (forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
@    18s  F[5] /\ T /\ !P+ -> UNSAT
Frames: #6
	F[0]: #1
		((forall N3_2, N3_1 . ~vote_request_msg(N3_2, N3_1)) & (forall N3_2 . ~voted(N3_2)) & (forall N3_2, N3 . ~vote_msg(N3_2, N3)) & (forall N3_2, N3_3 . ~votes(N3_2, N3_3)) & (forall N3_2 . ~leader(N3_2)) & (forall N3_2, V3 . ~decided(N3_2, V3)))
	F[1]: #1
		(forall N0, N1 . ~vote_msg(N1, N0))
	F[2]: #1
		(forall N0, N1 . ~votes(N0, N1))
	F[3]: #3
		(forall N0, N1, N2 . ((votes(N1, N2) & votes(N0, N1)) -> (N0 = N2)))
		(forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, V0 . ~decided(N0, V0))
	F[4]: #5
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N1) & votes(N1, N2)) -> (N0 = N2)))
		(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N0) & votes(N0, N2)) -> (N0 = N2)))
		(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
	F[5]: #7
		(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
		(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
		(forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
		(forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    18s  
Adding frame 6...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
Trying forwarding F[4]
Trying forwarding F[5]
Forwarded #6 to F[6]
@    18s  Learning in F[6]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    18s  Learning in F[6]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    18s  Learning in F[6]: (forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    18s  Learning in F[6]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    18s  Learning in F[6]: (forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    18s  Learning in F[6]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    18s  Learning in F[6]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    18s  Learning in F[6]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    18s  Learning in F[6]: (forall N0 . (exists Q0 . ((leader(N0) & member(N0, Q0)) -> votes(N0, N0))))
@    18s  Learning in F[6]: (forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    18s  Learning in F[6]: (forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    18s  Learning in F[6]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    18s  F[6] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[6])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    18s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@    18s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    18s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    19s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    19s  F[3] /\ T /\ C+ ?
@    19s  	Ans. UNSAT
@    19s  F[4] unsat core #4 	(ucsz: 5 -> 4 -> 4)
(minimal unsat core)
	votes(n1, n2)
	votes(n0, n2)
	votes(n1, n1)
	votes(n0, n0)
(clause)
	(~votes(n0, n0) | ~votes(n0, n2) | ~votes(n1, n1) | ~votes(n1, n2))
(relations)
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE1, NODE1)
	votes(NODE1, NODE2)
	votes(NODE0, NODE0)
	votes(NODE0, NODE2)
(antecedent reduction)
@    19s  antecedent: 3 -> 2 (reduced)
	removed: NODE2

(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~votes(NODE0, NODE2) | ~votes(NODE1, NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~votes(n0, n0) | ~votes(n0, n2) | ~votes(n1, n1) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~votes(NODE0, NODE2) | ~votes(NODE1, NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N0, N2) & votes(N1, N2) & votes(N0, N0) & votes(N1, N1)) -> (N0 = N1)))
@    19s  is global clause? No
@    19s  Learning in F[4]: (forall N0, N1, N2 . ((votes(N0, N2) & votes(N1, N2) & votes(N0, N0) & votes(N1, N1)) -> (N0 = N1)))
@    19s  F[4] /\ T /\ C+ ?
@    19s  	Ans. UNSAT
@    19s  F[5] unsat core #5 	(ucsz: 6 -> 5 -> 5)
(minimal unsat core)
	votes(n1, n2)
	votes(n0, n2)
	decided(n1, v1)
	votes(n1, n1)
	votes(n0, n0)
(clause)
	(~decided(n1, v1) | ~votes(n0, n0) | ~votes(n0, n2) | ~votes(n1, n1) | ~votes(n1, n2))
(relations)
	decided
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE1, NODE1)
	votes(NODE1, NODE2)
	votes(NODE0, NODE0)
	votes(NODE0, NODE2)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    19s  antecedent: 3 -> 2 (reduced)
	removed: NODE2

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE0), votes(NODE0, NODE2), ]
	NODE1 -> [ votes(NODE1, NODE2), votes(NODE1, NODE1), decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE1, NODE2), votes(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, NODE2), votes(V:node:e2:, V:node:e2:), ]
	NODE2 -> [ votes(NODE1, V:node:e2:), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(votes(V:node:e2:, NODE2) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, NODE2) & votes(V:node:e2:, V:node:e2:)) -> [ NODE1, ]
	(votes(NODE0, V:node:e2:) & votes(NODE1, V:node:e2:)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | ~votes(NODE1, NODE2) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n0, n0) | ~votes(n0, n2) | ~votes(n1, n1) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | ~votes(NODE1, NODE2) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N0) & votes(N0, N2) & votes(N1, N1) & votes(N1, N2)) -> (N0 = N1)))
@    19s  is global clause? No
@    19s  Learning in F[5]: (forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N0) & votes(N0, N2) & votes(N1, N1) & votes(N1, N2)) -> (N0 = N1)))
@    19s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    19s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    19s  F[4] /\ T /\ C+ ?
@    19s  	Ans. UNSAT
@    19s  F[5] unsat core #4 	(ucsz: 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	leader(n1)
	leader(n0)
	votes(n1, n1)
	votes(n0, n0)
(clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n0) | ~votes(n1, n1))
(relations)
	leader
	votes
(cube: std)
	leader(NODE0)
	leader(NODE1)
	votes(NODE0, NODE0)
	votes(NODE1, NODE1)
(antecedent reduction)
@    19s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n0) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1) & votes(N0, N0) & votes(N1, N1)) -> (N0 = N1)))
@    19s  is global clause? No
@    19s  Learning in F[5]: (forall N0, N1 . ((leader(N0) & leader(N1) & votes(N0, N0) & votes(N1, N1)) -> (N0 = N1)))
@    19s  F[5] /\ T /\ C+ ?
@    19s  	Ans. UNSAT
@    19s  F[6] unsat core #5 	(ucsz: 7 -> 6 -> 5 -> 5)
(minimal unsat core)
	votes(n1, n2)
	decided(n1, v1)
	leader(n0)
	votes(n1, n1)
	votes(n0, n0)
(clause)
	(~decided(n1, v1) | ~leader(n0) | ~votes(n0, n0) | ~votes(n1, n1) | ~votes(n1, n2))
(relations)
	decided
	leader
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE0)
	votes(NODE1, NODE2)
	votes(NODE0, NODE0)
	votes(NODE1, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    20s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), votes(NODE0, NODE0), ]
	NODE1 -> [ votes(NODE1, NODE2), votes(NODE1, NODE1), decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE1, NODE2), ]
qv2ucubes #3
	NODE0 -> [ leader(V:node:e2:), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, NODE2), votes(V:node:e2:, V:node:e2:), ]
	NODE2 -> [ votes(NODE1, V:node:e2:), ]
ucubes2qv #3
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, NODE2) & votes(V:node:e2:, V:node:e2:)) -> [ NODE1, ]
	votes(NODE1, V:node:e2:) -> [ NODE2, ]
	(leader(V:node:e2:) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE1) | ~votes(NODE1, NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0) | ~votes(n0, n0) | ~votes(n1, n1) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE0) | ~votes(NODE1, NODE1) | ~votes(NODE1, NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N1, V0) & leader(N0) & votes(N0, N0) & votes(N1, N1) & votes(N1, N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2))))
@    20s  is global clause? No
@    20s  Learning in F[6]: (forall N0, N1, V0, N2 . ((decided(N1, V0) & leader(N0) & votes(N0, N0) & votes(N1, N1) & votes(N1, N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2))))
@    20s  F[6] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = true
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = true
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    20s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@    20s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = true
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = true
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    20s  F[4] /\ T /\ C+ ?
@    20s  	Ans. UNSAT
@    20s  F[5] unsat core #6 	(ucsz: 9 -> 7 -> 6 -> 6)
(minimal unsat core)
	member(n0, q1)
	member(n0, q2)
	member(n1, q0)
	leader(n2)
	~votes(n2, n0)
	~votes(n2, n1)
(clause)
	(~leader(n2) | ~member(n0, q1) | ~member(n0, q2) | ~member(n1, q0) | votes(n2, n0) | votes(n2, n1))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	member(NODE0, QUORUM2)
	member(NODE0, QUORUM1)
	~votes(NODE2, NODE0)
	leader(NODE2)
	member(NODE1, QUORUM0)
	~votes(NODE2, NODE1)
(antecedent reduction)
@    20s  antecedent: 6 -> 3 (reduced)
	removed: NODE2
	removed: NODE1
	removed: NODE0

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM0, ]
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, QUORUM2, ]
(partition) #2 quorum:e2: -> { QUORUM0, | QUORUM1, QUORUM2, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM0:
		member(NODE1, QUORUM0)
ucmulti:
	member(NODE0, QUORUM1)
qv2cubes #3
	NODE0 -> [ ((QUORUM0 = QUORUM1) | member(NODE0, QUORUM1)), ~votes(NODE2, NODE0), ]
	NODE1 -> [ member(NODE1, QUORUM0), ~votes(NODE2, NODE1), ]
	NODE2 -> [ leader(NODE2), ~votes(NODE2, NODE1), ~votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ ((QUORUM0 = QUORUM1) | member(V:node:e2:, QUORUM1)), ~votes(NODE2, V:node:e2:), ]
	NODE1 -> [ member(V:node:e2:, QUORUM0), ~votes(NODE2, V:node:e2:), ]
	NODE2 -> [ ~votes(V:node:e2:, NODE0), ~votes(V:node:e2:, NODE1), leader(V:node:e2:), ]
ucubes2qv #3
	(((QUORUM0 = QUORUM1) | member(V:node:e2:, QUORUM1)) & ~votes(NODE2, V:node:e2:)) -> [ NODE0, ]
	(member(V:node:e2:, QUORUM0) & ~votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	(leader(V:node:e2:) & ~votes(V:node:e2:, NODE0) & ~votes(V:node:e2:, NODE1)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
(epr reduced)
	(exists QUORUM1 . (forall NODE0, NODE1, NODE2, QUORUM0 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~leader(NODE2) | ~member(NODE1, QUORUM0) | votes(NODE2, NODE0) | votes(NODE2, NODE1))))
(non-epr version)
	(forall NODE0, NODE1, NODE2, QUORUM0 . (exists QUORUM1 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~leader(NODE2) | ~member(NODE1, QUORUM0) | votes(NODE2, NODE0) | votes(NODE2, NODE1))))
	Both verions not allowed!
(epr-reduction) -> SAT
	EPR-reduction is not allowed!
	Learning non-epr version instead.
(boosted clause)
	(forall NODE0, NODE1, NODE2, QUORUM0 . (exists QUORUM1 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~leader(NODE2) | ~member(NODE1, QUORUM0) | votes(NODE2, NODE0) | votes(NODE2, NODE1))))
---------------------------
(original clause)
	(~leader(n2) | ~member(n0, q1) | ~member(n0, q2) | ~member(n1, q0) | votes(n2, n0) | votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2, QUORUM0 . (exists QUORUM1 . ((~(QUORUM0 = QUORUM1) & ~member(NODE0, QUORUM1)) | ~leader(NODE2) | ~member(NODE1, QUORUM0) | votes(NODE2, NODE0) | votes(NODE2, NODE1))))
---------------------------
(clause-type: non-epr)	(forall N0, N1, N2, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N2) & member(N1, Q0)) -> (votes(N2, N0) | votes(N2, N1)))))
@    20s  is global clause? Yes
@    20s  Learning in F[6]: (forall N0, N1, N2, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N2) & member(N1, Q0)) -> (votes(N2, N0) | votes(N2, N1)))))
@    20s  F[5] /\ T /\ C+ ?
@    20s  	Ans. UNSAT
@    21s  F[6] unsat core #3 	(ucsz: 10 -> 8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	leader(n2)
	~votes(n2, n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n2) | votes(n2, n1))
(relations)
	leader
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE0)
	leader(NODE2)
	~votes(NODE2, NODE1)
(antecedent reduction)
@    21s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), ]
	NODE1 -> [ ~votes(NODE2, NODE1), ]
	NODE2 -> [ leader(NODE2), ~votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ leader(V:node:e2:), ]
	NODE1 -> [ ~votes(NODE2, V:node:e2:), ]
	NODE2 -> [ ~votes(V:node:e2:, NODE1), leader(V:node:e2:), ]
ucubes2qv #3
	leader(V:node:e2:) -> [ NODE0, ]
	~votes(NODE2, V:node:e2:) -> [ NODE1, ]
	(leader(V:node:e2:) & ~votes(V:node:e2:, NODE1)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~leader(NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | votes(NODE2, NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2) | votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~leader(NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | votes(NODE2, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | votes(N2, N1))))
@    21s  is global clause? No
@    21s  Learning in F[6]: (forall N0, N1, N2 . ((leader(N0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | votes(N2, N1))))
@    21s  F[6] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    22s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@    22s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    22s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    22s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    22s  F[3] /\ T /\ C+ ?
@    22s  	Ans. UNSAT
@    22s  F[4] unsat core #4 	(ucsz: 4 -> 4)
(minimal unsat core)
	votes(n1, n2)
	votes(n0, n1)
	votes(n0, n2)
	votes(n1, n0)
(clause)
	(~votes(n0, n1) | ~votes(n0, n2) | ~votes(n1, n0) | ~votes(n1, n2))
(relations)
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE1, NODE0)
	votes(NODE1, NODE2)
	votes(NODE0, NODE2)
	votes(NODE0, NODE1)
(antecedent reduction)
@    22s  antecedent: 3 -> 2 (reduced)
	removed: NODE2

(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~votes(NODE1, NODE0) | ~votes(NODE1, NODE2) | ~votes(NODE0, NODE2) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | ~votes(n0, n2) | ~votes(n1, n0) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~votes(NODE1, NODE0) | ~votes(NODE1, NODE2) | ~votes(NODE0, NODE2) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N1, N0) & votes(N1, N2) & votes(N0, N2) & votes(N0, N1)) -> (N0 = N1)))
@    22s  is global clause? No
@    22s  Learning in F[4]: (forall N0, N1, N2 . ((votes(N1, N0) & votes(N1, N2) & votes(N0, N2) & votes(N0, N1)) -> (N0 = N1)))
@    22s  F[4] /\ T /\ C+ ?
@    22s  	Ans. UNSAT
@    22s  F[5] unsat core #7 	(ucsz: 10 -> 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	decided(n1, v0)
	member(n1, q0)
	member(n1, q1)
	votes(n0, n1)
	votes(n0, n2)
	votes(n1, n0)
	member(n2, q2)
(clause)
	(~decided(n1, v0) | ~member(n1, q0) | ~member(n1, q1) | ~member(n2, q2) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n1, n0))
(relations)
	decided
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE2)
	votes(NODE0, NODE1)
	member(NODE1, QUORUM1)
	member(NODE1, QUORUM0)
	votes(NODE1, NODE0)
	member(NODE2, QUORUM2)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    22s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE1, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM1, QUORUM0, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM2, ]
(partition) #2 quorum:e2: -> { QUORUM1, QUORUM0, | QUORUM2, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM2:
		member(NODE2, QUORUM2)
ucmulti:
	member(NODE1, QUORUM0)
qv2cubes #3
	NODE0 -> [ votes(NODE1, NODE0), votes(NODE0, NODE2), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE0), votes(NODE0, NODE1), decided(NODE1, VALUE0), ((QUORUM2 = QUORUM0) | member(NODE1, QUORUM0)), ]
	NODE2 -> [ votes(NODE0, NODE2), member(NODE2, QUORUM2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), votes(NODE1, V:node:e2:), votes(V:node:e2:, NODE1), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)), votes(NODE0, V:node:e2:), votes(V:node:e2:, NODE0), ]
	NODE2 -> [ member(V:node:e2:, QUORUM2), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(votes(NODE1, V:node:e2:) & votes(V:node:e2:, NODE1) & votes(V:node:e2:, NODE2)) -> [ NODE0, ]
	(((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)) & decided(V:node:e2:, VALUE0) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0)) -> [ NODE1, ]
	(member(V:node:e2:, QUORUM2) & votes(NODE0, V:node:e2:)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))))
(non-epr version)
	(forall VALUE0 . (forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))))
---------------------------
(original clause)
	(~decided(n1, v0) | ~member(n1, q0) | ~member(n1, q1) | ~member(n2, q2) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE0) | (NODE0 = NODE1)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N1, V0) & member(N2, Q2) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0)) -> (N0 = N1)))))
@    23s  is global clause? No
@    23s  Learning in F[5]: (forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N1, V0) & member(N2, Q2) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0)) -> (N0 = N1)))))
@    23s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    23s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@    23s  F[4] /\ T /\ C+ ?
@    23s  	Ans. UNSAT
@    23s  F[5] unsat core #4 	(ucsz: 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	votes(n0, n1)
	votes(n1, n0)
	leader(n0)
	leader(n1)
(clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0))
(relations)
	leader
	votes
(cube: std)
	leader(NODE0)
	leader(NODE1)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@    23s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | ~votes(NODE0, NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | ~votes(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1) & votes(N1, N0) & votes(N0, N1)) -> (N0 = N1)))
@    23s  is global clause? No
@    23s  Learning in F[5]: (forall N0, N1 . ((leader(N0) & leader(N1) & votes(N1, N0) & votes(N0, N1)) -> (N0 = N1)))
@    23s  F[5] /\ T /\ C+ ?
@    24s  	Ans. UNSAT
@    24s  F[6] unsat core #4 	(ucsz: 9 -> 7 -> 6 -> 4 -> 4)
(minimal unsat core)
	votes(n0, n1)
	decided(n1, v0)
	votes(n1, n0)
	leader(n0)
(clause)
	(~decided(n1, v0) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n0))
(relations)
	decided
	leader
	votes
(cube: std)
	leader(NODE0)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    24s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | ~votes(NODE1, NODE0) | ~votes(NODE0, NODE1) | ~decided(NODE1, VALUE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | ~votes(NODE1, NODE0) | ~votes(NODE0, NODE1) | ~decided(NODE1, VALUE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((leader(N0) & votes(N1, N0) & votes(N0, N1) & decided(N1, V0)) -> (N0 = N1)))
@    24s  is global clause? No
@    24s  Learning in F[6]: (forall N0, N1, V0 . ((leader(N0) & votes(N1, N0) & votes(N0, N1) & decided(N1, V0)) -> (N0 = N1)))
@    24s  F[6] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    24s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@    24s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    24s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    24s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    24s  F[3] /\ T /\ C+ ?
@    24s  	Ans. UNSAT
@    24s  F[4] unsat core #4 	(ucsz: 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	votes(n0, n1)
	votes(n0, n2)
	votes(n2, n1)
	votes(n0, n0)
(clause)
	(~votes(n0, n0) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n2, n1))
(relations)
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE0)
	votes(NODE0, NODE2)
	votes(NODE0, NODE1)
	votes(NODE2, NODE1)
(antecedent reduction)
@    24s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1)))
---------------------------
(original clause)
	(~votes(n0, n0) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N0, N0) & votes(N0, N2) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@    24s  is global clause? No
@    24s  Learning in F[4]: (forall N0, N1, N2 . ((votes(N0, N0) & votes(N0, N2) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@    24s  F[4] /\ T /\ C+ ?
@    24s  	Ans. UNSAT
@    25s  F[5] unsat core #4 	(ucsz: 5 -> 4 -> 4)
(minimal unsat core)
	votes(n0, n1)
	votes(n0, n2)
	decided(n2, v0)
	votes(n0, n0)
(clause)
	(~decided(n2, v0) | ~votes(n0, n0) | ~votes(n0, n1) | ~votes(n0, n2))
(relations)
	decided
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE2)
	votes(NODE0, NODE0)
	decided(NODE2, VALUE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@    25s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE0), votes(NODE0, NODE2), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE0, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), votes(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), votes(V:node:e2:, NODE1), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ votes(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(votes(V:node:e2:, NODE1) & votes(V:node:e2:, NODE2) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	(decided(V:node:e2:, VALUE0) & votes(NODE0, V:node:e2:)) -> [ NODE2, ]
	votes(NODE0, V:node:e2:) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE0, | NODE2, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2)))
---------------------------
(original clause)
	(~decided(n2, v0) | ~votes(n0, n0) | ~votes(n0, n1) | ~votes(n0, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N0) & votes(N0, N1) & votes(N0, N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2))))
@    25s  is global clause? No
@    25s  Learning in F[5]: (forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N0) & votes(N0, N1) & votes(N0, N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2))))
@    25s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    25s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@    25s  F[4] /\ T /\ C+ ?
@    25s  	Ans. UNSAT
@    26s  F[5] unsat core #4 	(ucsz: 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	leader(n2)
	votes(n0, n2)
	leader(n0)
	votes(n0, n0)
(clause)
	(~leader(n0) | ~leader(n2) | ~votes(n0, n0) | ~votes(n0, n2))
(relations)
	leader
	votes
(cube: std)
	leader(NODE0)
	leader(NODE1)
	votes(NODE0, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@    26s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2) | ~votes(n0, n0) | ~votes(n0, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1) & votes(N0, N0) & votes(N0, N1)) -> (N0 = N1)))
@    26s  is global clause? No
@    26s  Learning in F[5]: (forall N0, N1 . ((leader(N0) & leader(N1) & votes(N0, N0) & votes(N0, N1)) -> (N0 = N1)))
@    26s  F[5] /\ T /\ C+ ?
@    26s  	Ans. UNSAT
@    26s  F[6] unsat core #4 	(ucsz: 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	votes(n0, n2)
	decided(n2, v0)
	leader(n0)
	votes(n0, n0)
(clause)
	(~decided(n2, v0) | ~leader(n0) | ~votes(n0, n0) | ~votes(n0, n2))
(relations)
	decided
	leader
	votes
(cube: std)
	leader(NODE0)
	votes(NODE0, NODE0)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    26s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~decided(NODE1, VALUE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n2, v0) | ~leader(n0) | ~votes(n0, n0) | ~votes(n0, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~decided(NODE1, VALUE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((leader(N0) & votes(N0, N0) & votes(N0, N1) & decided(N1, V0)) -> (N0 = N1)))
@    26s  is global clause? No
@    26s  Learning in F[6]: (forall N0, N1, V0 . ((leader(N0) & votes(N0, N0) & votes(N0, N1) & decided(N1, V0)) -> (N0 = N1)))
@    26s  F[6] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[6])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    26s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@    26s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    26s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    26s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    26s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@    26s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    26s  F[2] /\ T /\ C+ ?
@    26s  	Ans. UNSAT
@    27s  F[3] unsat core #1 	(ucsz: 5 -> 4 -> 2 -> 1 -> 1)
(minimal unsat core)
	leader(n1)
(clause)
	~leader(n1)
(relations)
	leader
(cube: std)
	leader(NODE0)

(boosted clause)
	(forall NODE0 . ~leader(NODE0))
---------------------------
(original clause)
	~leader(n1)
(learnt sym-boosted clause)
	(forall NODE0 . ~leader(NODE0))
---------------------------
(clause-type: univ)	(forall N0 . ~leader(N0))
@    27s  is global clause? No
@    27s  Learning in F[3]: (forall N0 . ~leader(N0))
@    27s  F[3] /\ T /\ C+ ?
@    27s  	Ans. UNSAT
@    27s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	votes(n1, n2)
	votes(n0, n2)
	leader(n1)
(clause)
	(~leader(n1) | ~votes(n0, n2) | ~votes(n1, n2))
(relations)
	leader
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE1)
	votes(NODE1, NODE2)
	votes(NODE0, NODE2)
(antecedent reduction)
@    27s  antecedent: 3 -> 2 (reduced)
	removed: NODE2

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE2), ]
	NODE1 -> [ leader(NODE1), votes(NODE1, NODE2), ]
	NODE2 -> [ votes(NODE1, NODE2), votes(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), ]
	NODE1 -> [ votes(V:node:e2:, NODE2), leader(V:node:e2:), ]
	NODE2 -> [ votes(NODE1, V:node:e2:), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(leader(V:node:e2:) & votes(V:node:e2:, NODE2)) -> [ NODE1, ]
	votes(V:node:e2:, NODE2) -> [ NODE0, ]
	(votes(NODE0, V:node:e2:) & votes(NODE1, V:node:e2:)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE2) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n0, n2) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE2) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N1) & votes(N0, N2) & votes(N1, N2)) -> (N0 = N1)))
@    27s  is global clause? No
@    27s  Learning in F[4]: (forall N0, N1, N2 . ((leader(N1) & votes(N0, N2) & votes(N1, N2)) -> (N0 = N1)))
@    27s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@    27s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    27s  F[3] /\ T /\ C+ ?
@    27s  	Ans. UNSAT
@    27s  F[4] unsat core #1 	(ucsz: 1 -> 1)
(minimal unsat core)
	decided(n1, v1)
(clause)
	~decided(n1, v1)
(relations)
	decided
(cube: std)
	decided(NODE0, VALUE0)

(boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(original clause)
	~decided(n1, v1)
(learnt sym-boosted clause)
	(forall NODE0, VALUE0 . ~decided(NODE0, VALUE0))
---------------------------
(clause-type: univ)	(forall N0, V0 . ~decided(N0, V0))
@    27s  is global clause? No
@    27s  Learning in F[4]: (forall N0, V0 . ~decided(N0, V0))
@    27s  F[4] /\ T /\ C+ ?
@    27s  	Ans. UNSAT
@    27s  F[5] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	votes(n1, n2)
	votes(n0, n2)
	decided(n1, v1)
(clause)
	(~decided(n1, v1) | ~votes(n0, n2) | ~votes(n1, n2))
(relations)
	decided
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE1, NODE2)
	votes(NODE0, NODE2)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    27s  antecedent: 3 -> 2 (reduced)
	removed: NODE2

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE2), ]
	NODE1 -> [ votes(NODE1, NODE2), decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE1, NODE2), votes(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, NODE2), ]
	NODE2 -> [ votes(NODE1, V:node:e2:), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, NODE2)) -> [ NODE1, ]
	votes(V:node:e2:, NODE2) -> [ NODE0, ]
	(votes(NODE0, V:node:e2:) & votes(NODE1, V:node:e2:)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE2) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n0, n2) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE2) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N2) & votes(N1, N2)) -> (N0 = N1)))
@    27s  is global clause? No
@    27s  Learning in F[5]: (forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N2) & votes(N1, N2)) -> (N0 = N1)))
@    27s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    27s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    27s  F[4] /\ T /\ C+ ?
@    27s  	Ans. UNSAT
@    27s  F[5] unsat core #2 	(ucsz: 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	leader(n0)
	leader(n1)
(clause)
	(~leader(n0) | ~leader(n1))
(relations)
	leader
(cube: std)
	leader(NODE0)
	leader(NODE1)
(antecedent reduction)
@    27s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
@    27s  is global clause? No
@    27s  Learning in F[5]: (forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
@    27s  F[5] /\ T /\ C+ ?
@    27s  	Ans. UNSAT
@    28s  F[6] unsat core #2 	(ucsz: 5 -> 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v1)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0))
(relations)
	decided
	leader
(cube: std)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@    28s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
@    28s  is global clause? No
@    28s  Learning in F[6]: (forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
@    28s  F[6] /\ T /\ !P+ -> UNSAT
Frames: #7
	F[0]: #1
		((forall N3_2, N3_1 . ~vote_request_msg(N3_2, N3_1)) & (forall N3_2 . ~voted(N3_2)) & (forall N3_2, N3 . ~vote_msg(N3_2, N3)) & (forall N3_2, N3_3 . ~votes(N3_2, N3_3)) & (forall N3_2 . ~leader(N3_2)) & (forall N3_2, V3 . ~decided(N3_2, V3)))
	F[1]: #1
		(forall N0, N1 . ~vote_msg(N1, N0))
	F[2]: #1
		(forall N0, N1 . ~votes(N0, N1))
	F[3]: #3
		(forall N0, N1, N2 . ((votes(N1, N2) & votes(N0, N1)) -> (N0 = N2)))
		(forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0 . ~leader(N0))
	F[4]: #6
		(forall N0, N1, N2 . ((votes(N0, N2) & votes(N1, N2) & votes(N0, N0) & votes(N1, N1)) -> (N0 = N1)))
		(forall N0, N1, N2 . ((leader(N1) & votes(N0, N2) & votes(N1, N2)) -> (N0 = N1)))
		(forall N0, N1, N2 . ((votes(N1, N0) & votes(N1, N2) & votes(N0, N2) & votes(N0, N1)) -> (N0 = N1)))
		(forall N0, N1, N2 . ((votes(N0, N0) & votes(N0, N2) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, V0 . ~decided(N0, V0))
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
	F[5]: #4
		(forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N1, V0) & member(N2, Q2) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0)) -> (N0 = N1)))))
		(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N2) & votes(N1, N2)) -> (N0 = N1)))
		(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N0) & votes(N0, N1) & votes(N0, N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2))))
		(forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
	F[6]: #7
		(forall N0, N1, N2 . ((leader(N0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | votes(N2, N1))))
		(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
		(forall N0, N1, N2, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N2) & member(N1, Q0)) -> (votes(N2, N0) | votes(N2, N1)))))
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
		(forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    28s  
Adding frame 7...
Trying forwarding F[1]
Trying forwarding F[2]
Trying forwarding F[3]
Trying forwarding F[4]
Forwarded #1 to F[5]
@    29s  Learning in F[5]: (exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
Trying forwarding F[5]
Trying forwarding F[6]
Forwarded #6 to F[7]
@    30s  Learning in F[7]: (forall N0, N1, N2 . ((leader(N0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | votes(N2, N1))))
@    30s  Learning in F[7]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    30s  Learning in F[7]: (forall N0, N1, N2, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N2) & member(N1, Q0)) -> (votes(N2, N0) | votes(N2, N1)))))
@    30s  Learning in F[7]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    30s  Learning in F[7]: (forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
@    30s  Learning in F[7]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    30s  Learning in F[7]: (forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
@    30s  Learning in F[7]: (forall N0, N1, N2, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N2) & member(N1, Q0)) -> (votes(N2, N0) | votes(N2, N1)))))
@    30s  Learning in F[7]: (forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
@    30s  Learning in F[7]: (forall N0 . (exists Q0 . ((leader(N0) & member(N0, Q0)) -> votes(N0, N0))))
@    30s  Learning in F[7]: (forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
@    30s  Learning in F[7]: (forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
@    30s  Learning in F[7]: (forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@    30s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    30s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@    30s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    30s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@    30s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = false			--> modified
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    30s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    30s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    30s  F[3] /\ T /\ C+ ?
@    30s  	Ans. UNSAT
@    30s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	votes(n1, n2)
	votes(n1, n1)
	leader(n1)
(clause)
	(~leader(n1) | ~votes(n1, n1) | ~votes(n1, n2))
(relations)
	leader
	votes
(cube: std)
	leader(NODE0)
	votes(NODE0, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@    30s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n1, n1) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & votes(N0, N0) & votes(N0, N1)) -> (N0 = N1)))
@    30s  is global clause? No
@    30s  Learning in F[4]: (forall N0, N1 . ((leader(N0) & votes(N0, N0) & votes(N0, N1)) -> (N0 = N1)))
@    30s  F[4] /\ T /\ C+ ?
@    30s  	Ans. UNSAT
@    30s  F[5] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	votes(n1, n2)
	decided(n1, v1)
	votes(n1, n1)
(clause)
	(~decided(n1, v1) | ~votes(n1, n1) | ~votes(n1, n2))
(relations)
	decided
	votes
(cube: std)
	decided(NODE0, VALUE0)
	votes(NODE0, NODE0)
	votes(NODE0, NODE1)
(antecedent reduction)
@    30s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE0, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n1, n1) | ~votes(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~decided(NODE0, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((decided(N0, V0) & votes(N0, N0) & votes(N0, N1)) -> (N0 = N1)))
@    30s  is global clause? No
@    30s  Learning in F[5]: (forall N0, N1, V0 . ((decided(N0, V0) & votes(N0, N0) & votes(N0, N1)) -> (N0 = N1)))
@    30s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    30s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    30s  F[4] /\ T /\ C+ ?
@    30s  	Ans. UNSAT
@    31s  F[5] unsat core #7 	(ucsz: 11 -> 8 -> 7 -> 7)
(minimal unsat core)
	member(n0, q2)
	votes(n0, n2)
	leader(n1)
	member(n2, q0)
	member(n2, q1)
	votes(n1, n1)
	votes(n0, n0)
(clause)
	(~leader(n1) | ~member(n0, q2) | ~member(n2, q0) | ~member(n2, q1) | ~votes(n0, n0) | ~votes(n0, n2) | ~votes(n1, n1))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE0)
	votes(NODE0, NODE2)
	member(NODE0, QUORUM2)
	votes(NODE1, NODE1)
	member(NODE2, QUORUM1)
	leader(NODE1)
	member(NODE2, QUORUM0)
(antecedent reduction)
@    31s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE2, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE0, V:quorum:e2:) -> [ QUORUM2, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM1, QUORUM0, ]
(partition) #2 quorum:e2: -> { QUORUM2, | QUORUM1, QUORUM0, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM2:
		member(NODE0, QUORUM2)
ucmulti:
	member(NODE2, QUORUM0)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE0), votes(NODE0, NODE2), member(NODE0, QUORUM2), ]
	NODE1 -> [ leader(NODE1), votes(NODE1, NODE1), ]
	NODE2 -> [ votes(NODE0, NODE2), ((QUORUM2 = QUORUM0) | member(NODE2, QUORUM0)), ]
qv2ucubes #3
	NODE0 -> [ member(V:node:e2:, QUORUM2), votes(V:node:e2:, NODE2), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ leader(V:node:e2:), votes(V:node:e2:, V:node:e2:), ]
	NODE2 -> [ ((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)) & votes(NODE0, V:node:e2:)) -> [ NODE2, ]
	(leader(V:node:e2:) & votes(V:node:e2:, V:node:e2:)) -> [ NODE1, ]
	(member(V:node:e2:, QUORUM2) & votes(V:node:e2:, NODE2) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE2, | NODE1, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
(epr reduced)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE1) | ~member(NODE0, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1))))
(non-epr version)
	(forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE1) | ~member(NODE0, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE1) | ~member(NODE0, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1))))
---------------------------
(original clause)
	(~leader(n1) | ~member(n0, q2) | ~member(n2, q0) | ~member(n2, q1) | ~votes(n0, n0) | ~votes(n0, n2) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE1) | ~member(NODE0, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N2, Q0)) & leader(N1) & member(N0, Q2) & votes(N0, N0) & votes(N0, N2) & votes(N1, N1)) -> (N0 = N1))))
@    98s  is global clause? No
@    98s  Learning in F[5]: (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N2, Q0)) & leader(N1) & member(N0, Q2) & votes(N0, N0) & votes(N0, N2) & votes(N1, N1)) -> (N0 = N1))))
@    98s  F[5] /\ T /\ C+ ?
@    98s  	Ans. UNSAT
@    98s  F[6] unsat core #7 	(ucsz: 11 -> 10 -> 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	decided(n1, v1)
	member(n0, q2)
	votes(n0, n2)
	votes(n0, n0)
	member(n2, q0)
	member(n2, q1)
	votes(n1, n1)
(clause)
	(~decided(n1, v1) | ~member(n0, q2) | ~member(n2, q0) | ~member(n2, q1) | ~votes(n0, n0) | ~votes(n0, n2) | ~votes(n1, n1))
(relations)
	decided
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE0)
	votes(NODE0, NODE2)
	member(NODE0, QUORUM2)
	votes(NODE1, NODE1)
	member(NODE2, QUORUM1)
	decided(NODE1, VALUE0)
	member(NODE2, QUORUM0)
(antecedent reduction)
@    98s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE2, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE0, V:quorum:e2:) -> [ QUORUM2, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM1, QUORUM0, ]
(partition) #2 quorum:e2: -> { QUORUM2, | QUORUM1, QUORUM0, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM2:
		member(NODE0, QUORUM2)
ucmulti:
	member(NODE2, QUORUM0)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE0), votes(NODE0, NODE2), member(NODE0, QUORUM2), ]
	NODE1 -> [ votes(NODE1, NODE1), decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE0, NODE2), ((QUORUM2 = QUORUM0) | member(NODE2, QUORUM0)), ]
qv2ucubes #3
	NODE0 -> [ member(V:node:e2:, QUORUM2), votes(V:node:e2:, NODE2), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, V:node:e2:), ]
	NODE2 -> [ ((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)) & votes(NODE0, V:node:e2:)) -> [ NODE2, ]
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, V:node:e2:)) -> [ NODE1, ]
	(member(V:node:e2:, QUORUM2) & votes(V:node:e2:, NODE2) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE2, | NODE1, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))))
(non-epr version)
	(forall VALUE0 . (forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))))
---------------------------
(original clause)
	(~decided(n1, v1) | ~member(n0, q2) | ~member(n2, q0) | ~member(n2, q1) | ~votes(n0, n0) | ~votes(n0, n2) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N2, Q0)) & decided(N1, V0) & member(N0, Q2) & votes(N0, N0) & votes(N0, N2) & votes(N1, N1)) -> (N0 = N1)))))
@    99s  is global clause? No
@    99s  Learning in F[6]: (forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N2, Q0)) & decided(N1, V0) & member(N0, Q2) & votes(N0, N0) & votes(N0, N2) & votes(N1, N1)) -> (N0 = N1)))))
@    99s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@    99s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@    99s  F[5] /\ T /\ C+ ?
@    99s  	Ans. UNSAT
@    99s  F[6] unsat core #6 	(ucsz: 11 -> 10 -> 9 -> 6 -> 6)
(minimal unsat core)
	member(n0, q2)
	member(n1, q0)
	leader(n0)
	leader(n1)
	votes(n1, n1)
	votes(n0, n0)
(clause)
	(~leader(n0) | ~leader(n1) | ~member(n0, q2) | ~member(n1, q0) | ~votes(n0, n0) | ~votes(n1, n1))
(relations)
	leader
	member
	votes
(cube: std)
	votes(NODE0, NODE0)
	member(NODE0, QUORUM1)
	leader(NODE0)
	member(NODE1, QUORUM0)
	votes(NODE1, NODE1)
	leader(NODE1)
(antecedent reduction)
@   100s  antecedent: 4 -> 2 (reduced)
	removed: QUORUM0
	removed: QUORUM1

(boosted clause)
	(forall QUORUM1, NODE1, NODE0, QUORUM0 . (~leader(NODE1) | ~votes(NODE0, NODE0) | (NODE0 = NODE1) | ~member(NODE0, QUORUM1) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | ~votes(NODE1, NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | ~member(n0, q2) | ~member(n1, q0) | ~votes(n0, n0) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall QUORUM1, NODE1, NODE0, QUORUM0 . (~leader(NODE1) | ~votes(NODE0, NODE0) | (NODE0 = NODE1) | ~member(NODE0, QUORUM1) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | ~votes(NODE1, NODE1)))
---------------------------
(clause-type: univ)	(forall Q1, N1, N0, Q0 . ((leader(N1) & votes(N0, N0) & member(N0, Q1) & leader(N0) & member(N1, Q0) & votes(N1, N1)) -> (N0 = N1)))
@   100s  is global clause? No
@   100s  Learning in F[6]: (forall Q1, N1, N0, Q0 . ((leader(N1) & votes(N0, N0) & member(N0, Q1) & leader(N0) & member(N1, Q0) & votes(N1, N1)) -> (N0 = N1)))
@   100s  F[6] /\ T /\ C+ ?
@   100s  	Ans. UNSAT
@   100s  F[7] unsat core #6 	(ucsz: 10 -> 9 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n1, v1)
	member(n0, q2)
	member(n1, q0)
	leader(n0)
	votes(n0, n0)
	votes(n1, n1)
(clause)
	(~decided(n1, v1) | ~leader(n0) | ~member(n0, q2) | ~member(n1, q0) | ~votes(n0, n0) | ~votes(n1, n1))
(relations)
	decided
	leader
	member
	votes
(cube: std)
	votes(NODE0, NODE0)
	member(NODE0, QUORUM1)
	leader(NODE0)
	member(NODE1, QUORUM0)
	votes(NODE1, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   100s  antecedent: 4 -> 2 (reduced)
	removed: QUORUM0
	removed: QUORUM1

(boosted clause)
	(forall QUORUM1, NODE1, NODE0, VALUE0, QUORUM0 . (~votes(NODE0, NODE0) | ~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM1) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0) | ~member(n0, q2) | ~member(n1, q0) | ~votes(n0, n0) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall QUORUM1, NODE1, NODE0, VALUE0, QUORUM0 . (~votes(NODE0, NODE0) | ~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM1) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall Q1, N1, N0, V0, Q0 . ((votes(N0, N0) & decided(N1, V0) & member(N0, Q1) & leader(N0) & member(N1, Q0) & votes(N1, N1)) -> (N0 = N1)))
@   100s  is global clause? No
@   100s  Learning in F[7]: (forall Q1, N1, N0, V0, Q0 . ((votes(N0, N0) & decided(N1, V0) & member(N0, Q1) & leader(N0) & member(N1, Q0) & votes(N1, N1)) -> (N0 = N1)))
@   100s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   101s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   101s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   101s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   101s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false			--> modified
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   101s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   101s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = false			--> modified
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   101s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   101s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = false			--> modified
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   101s  F[2] /\ T /\ C+ ?
@   101s  	Ans. UNSAT
@   101s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	votes(n2, n1)
	votes(n0, n0)
(clause)
	(~votes(n0, n0) | ~votes(n2, n1))
(relations)
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE0)
	votes(NODE2, NODE1)
(antecedent reduction)
@   101s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE2, NODE1)))
---------------------------
(original clause)
	(~votes(n0, n0) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE2, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N0, N0) & votes(N2, N1)) -> (N0 = N2)))
@   101s  is global clause? No
@   101s  Learning in F[3]: (forall N0, N1, N2 . ((votes(N0, N0) & votes(N2, N1)) -> (N0 = N2)))
@   101s  F[3] /\ T /\ C+ ?
@   101s  	Ans. UNSAT
@   101s  F[4] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	leader(n2)
	votes(n0, n0)
(clause)
	(~leader(n2) | ~votes(n0, n0))
(relations)
	leader
	votes
(cube: std)
	leader(NODE1)
	votes(NODE0, NODE0)
(antecedent reduction)
@   101s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n2) | ~votes(n0, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE0, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & votes(N0, N0)) -> (N0 = N1)))
@   101s  is global clause? No
@   101s  Learning in F[4]: (forall N0, N1 . ((leader(N1) & votes(N0, N0)) -> (N0 = N1)))
@   101s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   102s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = false			--> modified
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   102s  F[3] /\ T /\ C+ ?
@   102s  	Ans. UNSAT
@   102s  F[4] unsat core #3 	(ucsz: 5 -> 3 -> 3)
(minimal unsat core)
	votes(n0, n1)
	votes(n2, n1)
	votes(n0, n0)
(clause)
	(~votes(n0, n0) | ~votes(n0, n1) | ~votes(n2, n1))
(relations)
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE0)
	votes(NODE0, NODE1)
	votes(NODE2, NODE1)
(antecedent reduction)
@   102s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1)))
---------------------------
(original clause)
	(~votes(n0, n0) | ~votes(n0, n1) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@   102s  is global clause? No
@   102s  Learning in F[4]: (forall N0, N1, N2 . ((votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@   102s  F[4] /\ T /\ C+ ?
@   102s  	Ans. UNSAT
@   102s  F[5] unsat core #4 	(ucsz: 6 -> 4 -> 4)
(minimal unsat core)
	leader(n2)
	votes(n0, n1)
	votes(n2, n1)
	votes(n0, n0)
(clause)
	(~leader(n2) | ~votes(n0, n0) | ~votes(n0, n1) | ~votes(n2, n1))
(relations)
	leader
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE2)
	votes(NODE0, NODE0)
	votes(NODE0, NODE1)
	votes(NODE2, NODE1)
(antecedent reduction)
@   102s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE0, NODE1), votes(NODE2, NODE1), ]
	NODE2 -> [ leader(NODE2), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE1), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ leader(V:node:e2:), votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(votes(V:node:e2:, NODE1) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	(votes(NODE0, V:node:e2:) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	(leader(V:node:e2:) & votes(V:node:e2:, NODE1)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~leader(n2) | ~votes(n0, n0) | ~votes(n0, n1) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N2) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@   102s  is global clause? No
@   102s  Learning in F[5]: (forall N0, N1, N2 . ((leader(N2) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@   102s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   103s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = false			--> modified
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   103s  F[4] /\ T /\ C+ ?
@   103s  	Ans. UNSAT
@   103s  F[5] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	decided(n2, v1)
	votes(n0, n0)
(clause)
	(~decided(n2, v1) | ~votes(n0, n0))
(relations)
	decided
	votes
(cube: std)
	votes(NODE0, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   103s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE0, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~votes(n0, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE0, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((votes(N0, N0) & decided(N1, V0)) -> (N0 = N1)))
@   103s  is global clause? No
@   103s  Learning in F[5]: (forall N0, N1, V0 . ((votes(N0, N0) & decided(N1, V0)) -> (N0 = N1)))
@   103s  F[5] /\ T /\ C+ ?
@   103s  	Ans. UNSAT
@   103s  F[6] unsat core #4 	(ucsz: 8 -> 5 -> 5 -> 4 -> 4)
(minimal unsat core)
	votes(n0, n1)
	decided(n2, v1)
	votes(n2, n1)
	votes(n0, n0)
(clause)
	(~decided(n2, v1) | ~votes(n0, n0) | ~votes(n0, n1) | ~votes(n2, n1))
(relations)
	decided
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE0)
	decided(NODE2, VALUE0)
	votes(NODE0, NODE1)
	votes(NODE2, NODE1)
(antecedent reduction)
@   103s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE0, NODE1), votes(NODE2, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE1), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(votes(V:node:e2:, NODE1) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	(votes(NODE0, V:node:e2:) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, NODE1)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~votes(n0, n0) | ~votes(n0, n1) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@   103s  is global clause? No
@   103s  Learning in F[6]: (forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@   103s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   103s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false			--> modified
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   103s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   103s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = false			--> modified
	vote_msg(n0, n0) = true
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = true
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   103s  F[4] /\ T /\ C+ ?
@   104s  	Ans. UNSAT
@   104s  F[5] unsat core #7 	(ucsz: 10 -> 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	votes(n2, n1)
	votes(n0, n1)
	leader(n0)
	member(n1, q2)
	member(n2, q0)
	member(n2, q1)
	votes(n0, n0)
(clause)
	(~leader(n0) | ~member(n1, q2) | ~member(n2, q0) | ~member(n2, q1) | ~votes(n0, n0) | ~votes(n0, n1) | ~votes(n2, n1))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	member(NODE2, QUORUM1)
	member(NODE2, QUORUM0)
	votes(NODE0, NODE1)
	member(NODE1, QUORUM2)
	leader(NODE0)
	votes(NODE0, NODE0)
	votes(NODE2, NODE1)
(antecedent reduction)
@   104s  antecedent: 6 -> 5 (reduced)
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE2, QUORUM1), ]
	QUORUM2 -> [ member(NODE1, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM2, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM1, QUORUM0, ]
(partition) #2 quorum:e2: -> { QUORUM2, | QUORUM1, QUORUM0, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM2:
		member(NODE1, QUORUM2)
ucmulti:
	member(NODE2, QUORUM0)
qv2cubes #3
	NODE0 -> [ leader(NODE0), votes(NODE0, NODE0), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE2, NODE1), votes(NODE0, NODE1), member(NODE1, QUORUM2), ]
	NODE2 -> [ ((QUORUM2 = QUORUM0) | member(NODE2, QUORUM0)), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ leader(V:node:e2:), votes(V:node:e2:, NODE1), votes(V:node:e2:, V:node:e2:), ]
	NODE1 -> [ member(V:node:e2:, QUORUM2), votes(NODE2, V:node:e2:), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ ((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)), votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)) & votes(V:node:e2:, NODE1)) -> [ NODE2, ]
	(leader(V:node:e2:) & votes(V:node:e2:, NODE1) & votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	(member(V:node:e2:, QUORUM2) & votes(NODE0, V:node:e2:) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE2, | NODE0, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
(epr reduced)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE0) | ~member(NODE1, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2))))
(non-epr version)
	(forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE0) | ~member(NODE1, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE0) | ~member(NODE1, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2))))
---------------------------
(original clause)
	(~leader(n0) | ~member(n1, q2) | ~member(n2, q0) | ~member(n2, q1) | ~votes(n0, n0) | ~votes(n0, n1) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE0) | ~member(NODE1, QUORUM2) | ~votes(NODE0, NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N2, Q0)) & leader(N0) & member(N1, Q2) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2))))
@   105s  is global clause? No
@   105s  Learning in F[5]: (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N2, Q0)) & leader(N0) & member(N1, Q2) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2))))
@   105s  F[5] /\ T /\ C+ ?
@   105s  	Ans. UNSAT
@   107s  F[6] unsat core #3 	(ucsz: 8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	leader(n2)
	leader(n0)
	votes(n0, n0)
(clause)
	(~leader(n0) | ~leader(n2) | ~votes(n0, n0))
(relations)
	leader
	votes
(cube: std)
	leader(NODE0)
	leader(NODE1)
	votes(NODE0, NODE0)
(antecedent reduction)
@   107s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2) | ~votes(n0, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1) & votes(N0, N0)) -> (N0 = N1)))
@   107s  is global clause? No
@   107s  Learning in F[6]: (forall N0, N1 . ((leader(N0) & leader(N1) & votes(N0, N0)) -> (N0 = N1)))
@   107s  F[6] /\ T /\ C+ ?
@   107s  	Ans. UNSAT
@   109s  F[7] unsat core #3 	(ucsz: 6 -> 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	decided(n2, v1)
	leader(n0)
	votes(n0, n0)
(clause)
	(~decided(n2, v1) | ~leader(n0) | ~votes(n0, n0))
(relations)
	decided
	leader
	votes
(cube: std)
	leader(NODE0)
	votes(NODE0, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   110s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | ~votes(NODE0, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~leader(n0) | ~votes(n0, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | ~votes(NODE0, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((leader(N0) & votes(N0, N0) & decided(N1, V0)) -> (N0 = N1)))
@   110s  is global clause? No
@   110s  Learning in F[7]: (forall N0, N1, V0 . ((leader(N0) & votes(N0, N0) & decided(N1, V0)) -> (N0 = N1)))
@   110s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   110s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   110s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   110s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   110s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   110s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   110s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false			--> modified
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   110s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   110s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false			--> modified
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   110s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   110s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false			--> modified
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   110s  F[1] /\ T /\ C+ ?
@   110s  	Ans. UNSAT
@   110s  F[2] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n0, n2)
	~vote_request_msg(n2, n0)
(clause)
	(~vote_msg(n0, n2) | vote_request_msg(n2, n0))
(relations)
	vote_msg
	vote_request_msg
(cube: std)
	~vote_request_msg(NODE1, NODE0)
	vote_msg(NODE0, NODE1)
(antecedent reduction)
@   110s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (vote_request_msg(NODE1, NODE0) | ~vote_msg(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~vote_msg(n0, n2) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (vote_request_msg(NODE1, NODE0) | ~vote_msg(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . (vote_msg(N0, N1) -> (vote_request_msg(N1, N0) | (N0 = N1))))
@   110s  is global clause? No
@   110s  Learning in F[2]: (forall N0, N1 . (vote_msg(N0, N1) -> (vote_request_msg(N1, N0) | (N0 = N1))))
@   110s  F[2] /\ T /\ C+ ?
@   110s  	Ans. UNSAT
@   110s  F[3] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	~vote_request_msg(n1, n0)
	vote_msg(n0, n1)
	votes(n2, n0)
(clause)
	(~vote_msg(n0, n1) | ~votes(n2, n0) | vote_request_msg(n1, n0))
(relations)
	vote_msg
	votes
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	~vote_request_msg(NODE1, NODE0)
	vote_msg(NODE0, NODE1)
	votes(NODE2, NODE0)
(antecedent reduction)
@   110s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE1, NODE0), vote_msg(NODE0, NODE1), votes(NODE2, NODE0), ]
	NODE1 -> [ ~vote_request_msg(NODE1, NODE0), vote_msg(NODE0, NODE1), ]
	NODE2 -> [ votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ vote_msg(V:node:e2:, NODE1), votes(NODE2, V:node:e2:), ~vote_request_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(V:node:e2:, NODE0), vote_msg(NODE0, V:node:e2:), ]
	NODE2 -> [ votes(V:node:e2:, NODE0), ]
ucubes2qv #3
	(vote_msg(V:node:e2:, NODE1) & votes(NODE2, V:node:e2:) & ~vote_request_msg(NODE1, V:node:e2:)) -> [ NODE0, ]
	(vote_msg(NODE0, V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE1, ]
	votes(V:node:e2:, NODE0) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~vote_msg(NODE0, NODE1) | ~votes(NODE2, NODE0) | (NODE0 = NODE2) | vote_request_msg(NODE1, NODE0)))
---------------------------
(original clause)
	(~vote_msg(n0, n1) | ~votes(n2, n0) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~vote_msg(NODE0, NODE1) | ~votes(NODE2, NODE0) | (NODE0 = NODE2) | vote_request_msg(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((vote_msg(N0, N1) & votes(N2, N0)) -> ((N0 = N2) | vote_request_msg(N1, N0))))
@   110s  is global clause? No
@   110s  Learning in F[3]: (forall N0, N1, N2 . ((vote_msg(N0, N1) & votes(N2, N0)) -> ((N0 = N2) | vote_request_msg(N1, N0))))
@   110s  F[3] /\ T /\ C+ ?
@   110s  	Ans. UNSAT
@   111s  F[4] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	~vote_request_msg(n1, n0)
	votes(n1, n0)
	votes(n2, n0)
(clause)
	(~votes(n1, n0) | ~votes(n2, n0) | vote_request_msg(n1, n0))
(relations)
	votes
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE1, NODE0)
	votes(NODE2, NODE0)
(antecedent reduction)
@   111s  antecedent: 3 -> 2 (reduced)
	removed: NODE0

qv2cubes #3
	NODE0 -> [ votes(NODE1, NODE0), ~vote_request_msg(NODE1, NODE0), votes(NODE2, NODE0), ]
	NODE1 -> [ votes(NODE1, NODE0), ~vote_request_msg(NODE1, NODE0), ]
	NODE2 -> [ votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ votes(NODE2, V:node:e2:), votes(NODE1, V:node:e2:), ~vote_request_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(V:node:e2:, NODE0), votes(V:node:e2:, NODE0), ]
	NODE2 -> [ votes(V:node:e2:, NODE0), ]
ucubes2qv #3
	(votes(NODE1, V:node:e2:) & votes(NODE2, V:node:e2:) & ~vote_request_msg(NODE1, V:node:e2:)) -> [ NODE0, ]
	(votes(V:node:e2:, NODE0) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE1, ]
	votes(V:node:e2:, NODE0) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~votes(NODE1, NODE0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0)))
---------------------------
(original clause)
	(~votes(n1, n0) | ~votes(n2, n0) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~votes(NODE1, NODE0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N1, N0) & votes(N2, N0)) -> ((N1 = N2) | vote_request_msg(N1, N0))))
@   111s  is global clause? No
@   111s  Learning in F[4]: (forall N0, N1, N2 . ((votes(N1, N0) & votes(N2, N0)) -> ((N1 = N2) | vote_request_msg(N1, N0))))
@   111s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   111s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false			--> modified
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   111s  F[3] /\ T /\ C+ ?
@   111s  	Ans. UNSAT
@   111s  F[4] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	~vote_request_msg(n1, n0)
	votes(n1, n0)
	leader(n1)
(clause)
	(~leader(n1) | ~votes(n1, n0) | vote_request_msg(n1, n0))
(relations)
	leader
	vote_request_msg
	votes
(cube: std)
	leader(NODE1)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE1, NODE0)
(antecedent reduction)
@   111s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE0)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n1, n0) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N1) & votes(N1, N0)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
@   111s  is global clause? No
@   111s  Learning in F[4]: (forall N0, N1 . ((leader(N1) & votes(N1, N0)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
@   111s  F[4] /\ T /\ C+ ?
@   111s  	Ans. UNSAT
@   111s  F[5] unsat core #6 	(ucsz: 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	member(n0, q0)
	~vote_request_msg(n1, n0)
	member(n0, q2)
	leader(n1)
	member(n0, q1)
	votes(n2, n0)
(clause)
	(~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | ~votes(n2, n0) | vote_request_msg(n1, n0))
(relations)
	leader
	member
	vote_request_msg
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	member(NODE0, QUORUM2)
	votes(NODE2, NODE0)
	member(NODE0, QUORUM0)
	member(NODE0, QUORUM1)
	~vote_request_msg(NODE1, NODE0)
	leader(NODE1)
(antecedent reduction)
@   112s  antecedent: 6 -> 5 (reduced)
	removed: NODE0

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE0, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE1, NODE0), votes(NODE2, NODE0), member(NODE0, QUORUM0), ]
	NODE1 -> [ leader(NODE1), ~vote_request_msg(NODE1, NODE0), ]
	NODE2 -> [ votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ member(V:node:e2:, QUORUM0), votes(NODE2, V:node:e2:), ~vote_request_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(V:node:e2:, NODE0), leader(V:node:e2:), ]
	NODE2 -> [ votes(V:node:e2:, NODE0), ]
ucubes2qv #3
	(member(V:node:e2:, QUORUM0) & votes(NODE2, V:node:e2:) & ~vote_request_msg(NODE1, V:node:e2:)) -> [ NODE0, ]
	(leader(V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE1, ]
	votes(V:node:e2:, NODE0) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0))))
(non-epr version)
	(forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0))))
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0))))
---------------------------
(original clause)
	(~leader(n1) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | ~votes(n2, n0) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~member(NODE0, QUORUM0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1, N2 . ((leader(N1) & member(N0, Q0) & votes(N2, N0)) -> ((N1 = N2) | vote_request_msg(N1, N0)))))
@   113s  is global clause? No
@   113s  Learning in F[5]: (exists Q0 . (forall N0, N1, N2 . ((leader(N1) & member(N0, Q0) & votes(N2, N0)) -> ((N1 = N2) | vote_request_msg(N1, N0)))))
@   113s  F[5] /\ T /\ C+ ?
@   113s  	Ans. UNSAT
@   114s  F[6] unsat core #7 	(ucsz: 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	member(n0, q0)
	~vote_request_msg(n1, n0)
	member(n0, q2)
	leader(n1)
	leader(n2)
	member(n0, q1)
	~vote_request_msg(n2, n0)
(clause)
	(~leader(n1) | ~leader(n2) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | vote_request_msg(n1, n0) | vote_request_msg(n2, n0))
(relations)
	leader
	member
	vote_request_msg
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	~vote_request_msg(NODE2, NODE0)
	member(NODE0, QUORUM2)
	member(NODE0, QUORUM1)
	member(NODE0, QUORUM0)
	leader(NODE2)
	~vote_request_msg(NODE1, NODE0)
	leader(NODE1)
(antecedent reduction)
@   115s  antecedent: 6 -> 5 (reduced)
	removed: NODE0

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE0, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE1, NODE0), ~vote_request_msg(NODE2, NODE0), member(NODE0, QUORUM0), ]
	NODE1 -> [ leader(NODE1), ~vote_request_msg(NODE1, NODE0), ]
	NODE2 -> [ leader(NODE2), ~vote_request_msg(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ member(V:node:e2:, QUORUM0), ~vote_request_msg(NODE2, V:node:e2:), ~vote_request_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(V:node:e2:, NODE0), leader(V:node:e2:), ]
	NODE2 -> [ ~vote_request_msg(V:node:e2:, NODE0), leader(V:node:e2:), ]
ucubes2qv #2
	(member(V:node:e2:, QUORUM0) & ~vote_request_msg(NODE1, V:node:e2:) & ~vote_request_msg(NODE2, V:node:e2:)) -> [ NODE0, ]
	(leader(V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE1, NODE2, ]
(partition) #2 node:e2: -> { NODE0, | NODE1, NODE2, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	NODE0:
		~vote_request_msg(NODE1, NODE0)
		~vote_request_msg(NODE2, NODE0)
		member(NODE0, QUORUM0)
ucmulti:
	leader(NODE1)
	~vote_request_msg(NODE1, NODE0)
	(epr check: forward)	allowed(arc: node -> node)? False
	(epr check: reverse)	allowed(arc: node -> node)? False
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists NODE1, QUORUM0 . (forall NODE0 . ((~(NODE0 = NODE1) & ~leader(NODE1)) | (~(NODE0 = NODE1) & vote_request_msg(NODE1, NODE0)) | ~member(NODE0, QUORUM0))))
(non-epr version)
	(forall NODE0 . (exists NODE1, QUORUM0 . ((~(NODE0 = NODE1) & ~leader(NODE1)) | (~(NODE0 = NODE1) & vote_request_msg(NODE1, NODE0)) | ~member(NODE0, QUORUM0))))
	Both verions not allowed!
(epr-reduction) -> SAT
	EPR-reduction is not allowed!
	Learning non-epr version instead.
(boosted clause)
	(forall NODE0 . (exists NODE1, QUORUM0 . ((~(NODE0 = NODE1) & ~leader(NODE1)) | (~(NODE0 = NODE1) & vote_request_msg(NODE1, NODE0)) | ~member(NODE0, QUORUM0))))
---------------------------
(original clause)
	(~leader(n1) | ~leader(n2) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | vote_request_msg(n1, n0) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0 . (exists NODE1, QUORUM0 . ((~(NODE0 = NODE1) & ~leader(NODE1)) | (~(NODE0 = NODE1) & vote_request_msg(NODE1, NODE0)) | ~member(NODE0, QUORUM0))))
---------------------------
(clause-type: non-epr)	(forall N0 . (exists N1, Q0 . (((N0 = N1) | leader(N1)) -> ((vote_request_msg(N1, N0) -> (N0 = N1)) -> ~member(N0, Q0)))))
@   115s  is global clause? No
@   115s  Learning in F[6]: (forall N0 . (exists N1, Q0 . (((N0 = N1) | leader(N1)) -> ((vote_request_msg(N1, N0) -> (N0 = N1)) -> ~member(N0, Q0)))))
@   115s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   115s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   115s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   115s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = false
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false			--> modified
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   115s  F[4] /\ T /\ C+ ?
@   115s  	Ans. UNSAT
@   115s  F[5] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v1)
	votes(n1, n0)
	~vote_request_msg(n1, n0)
(clause)
	(~decided(n1, v1) | ~votes(n1, n0) | vote_request_msg(n1, n0))
(relations)
	decided
	votes
	vote_request_msg
(cube: std)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE1, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   115s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n1, n0) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((votes(N1, N0) & decided(N1, V0)) -> (vote_request_msg(N1, N0) | (N0 = N1))))
@   115s  is global clause? No
@   115s  Learning in F[5]: (forall N0, N1, V0 . ((votes(N1, N0) & decided(N1, V0)) -> (vote_request_msg(N1, N0) | (N0 = N1))))
@   115s  F[5] /\ T /\ C+ ?
@   115s  	Ans. UNSAT
@   116s  F[6] unsat core #6 	(ucsz: 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n1, v1)
	member(n0, q0)
	~vote_request_msg(n1, n0)
	member(n0, q2)
	member(n0, q1)
	votes(n2, n0)
(clause)
	(~decided(n1, v1) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | ~votes(n2, n0) | vote_request_msg(n1, n0))
(relations)
	decided
	member
	vote_request_msg
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	member(NODE0, QUORUM2)
	votes(NODE2, NODE0)
	member(NODE0, QUORUM0)
	member(NODE0, QUORUM1)
	~vote_request_msg(NODE1, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   116s  antecedent: 6 -> 5 (reduced)
	removed: NODE0

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE0, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE1, NODE0), votes(NODE2, NODE0), member(NODE0, QUORUM0), ]
	NODE1 -> [ ~vote_request_msg(NODE1, NODE0), decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ member(V:node:e2:, QUORUM0), votes(NODE2, V:node:e2:), ~vote_request_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ~vote_request_msg(V:node:e2:, NODE0), ]
	NODE2 -> [ votes(V:node:e2:, NODE0), ]
ucubes2qv #3
	(decided(V:node:e2:, VALUE0) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE1, ]
	(member(V:node:e2:, QUORUM0) & votes(NODE2, V:node:e2:) & ~vote_request_msg(NODE1, V:node:e2:)) -> [ NODE0, ]
	votes(V:node:e2:, NODE0) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0)))))
(non-epr version)
	(forall VALUE0 . (forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0)))))
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0)))))
---------------------------
(original clause)
	(~decided(n1, v1) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | ~votes(n2, n0) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE0, QUORUM0) | ~votes(NODE2, NODE0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N0, Q0) & votes(N2, N0)) -> ((N1 = N2) | vote_request_msg(N1, N0))))))
@   120s  is global clause? No
@   120s  Learning in F[6]: (forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N0, Q0) & votes(N2, N0)) -> ((N1 = N2) | vote_request_msg(N1, N0))))))
@   120s  F[6] /\ T /\ C+ ?
@   120s  	Ans. UNSAT
@   120s  F[7] unsat core #7 	(ucsz: 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	decided(n1, v1)
	member(n0, q0)
	~vote_request_msg(n1, n0)
	member(n0, q2)
	~vote_request_msg(n2, n0)
	leader(n2)
	member(n0, q1)
(clause)
	(~decided(n1, v1) | ~leader(n2) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | vote_request_msg(n1, n0) | vote_request_msg(n2, n0))
(relations)
	decided
	leader
	member
	vote_request_msg
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	~vote_request_msg(NODE2, NODE0)
	member(NODE0, QUORUM2)
	member(NODE0, QUORUM1)
	member(NODE0, QUORUM0)
	leader(NODE2)
	~vote_request_msg(NODE1, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   121s  antecedent: 6 -> 5 (reduced)
	removed: NODE0

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE0, QUORUM2), ]
	QUORUM0 -> [ member(NODE0, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE0, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE1, NODE0), ~vote_request_msg(NODE2, NODE0), member(NODE0, QUORUM0), ]
	NODE1 -> [ ~vote_request_msg(NODE1, NODE0), decided(NODE1, VALUE0), ]
	NODE2 -> [ leader(NODE2), ~vote_request_msg(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ member(V:node:e2:, QUORUM0), ~vote_request_msg(NODE2, V:node:e2:), ~vote_request_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ~vote_request_msg(V:node:e2:, NODE0), ]
	NODE2 -> [ ~vote_request_msg(V:node:e2:, NODE0), leader(V:node:e2:), ]
ucubes2qv #3
	(member(V:node:e2:, QUORUM0) & ~vote_request_msg(NODE1, V:node:e2:) & ~vote_request_msg(NODE2, V:node:e2:)) -> [ NODE0, ]
	(decided(V:node:e2:, VALUE0) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE1, ]
	(leader(V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~leader(NODE2) | ~member(NODE0, QUORUM0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0) | vote_request_msg(NODE2, NODE0)))))
(non-epr version)
	(forall VALUE0 . (forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~decided(NODE1, VALUE0) | ~leader(NODE2) | ~member(NODE0, QUORUM0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0) | vote_request_msg(NODE2, NODE0)))))
(epr-reduction) -> SAT
	EPR-reduction is not allowed!
	Learning non-epr version instead.
(boosted clause)
	(forall VALUE0 . (forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~decided(NODE1, VALUE0) | ~leader(NODE2) | ~member(NODE0, QUORUM0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0) | vote_request_msg(NODE2, NODE0)))))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n2) | ~member(n0, q0) | ~member(n0, q1) | ~member(n0, q2) | vote_request_msg(n1, n0) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall VALUE0 . (forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~decided(NODE1, VALUE0) | ~leader(NODE2) | ~member(NODE0, QUORUM0) | (NODE1 = NODE2) | vote_request_msg(NODE1, NODE0) | vote_request_msg(NODE2, NODE0)))))
---------------------------
(clause-type: non-epr)	(forall V0 . (forall N0, N1, N2 . (exists Q0 . ((decided(N1, V0) & leader(N2) & member(N0, Q0)) -> ((N1 = N2) | vote_request_msg(N1, N0) | vote_request_msg(N2, N0))))))
@   121s  is global clause? No
@   121s  Learning in F[7]: (forall V0 . (forall N0, N1, N2 . (exists Q0 . ((decided(N1, V0) & leader(N2) & member(N0, Q0)) -> ((N1 = N2) | vote_request_msg(N1, N0) | vote_request_msg(N2, N0))))))
@   121s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   121s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   121s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = true
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = true
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   121s  F[5] /\ T /\ C+ ?
@   121s  	Ans. UNSAT
@   122s  F[6] unsat core #6 	(ucsz: 10 -> 8 -> 6 -> 6)
(minimal unsat core)
	decided(n1, v0)
	votes(n0, n2)
	member(n2, q0)
	member(n2, q1)
	member(n2, q2)
	votes(n1, n1)
(clause)
	(~decided(n1, v0) | ~member(n2, q0) | ~member(n2, q1) | ~member(n2, q2) | ~votes(n0, n2) | ~votes(n1, n1))
(relations)
	decided
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	member(NODE2, QUORUM1)
	votes(NODE0, NODE2)
	votes(NODE1, NODE1)
	member(NODE2, QUORUM2)
	decided(NODE1, VALUE0)
	member(NODE2, QUORUM0)
(antecedent reduction)
@   122s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE2, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE2, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE2), ]
	NODE1 -> [ votes(NODE1, NODE1), decided(NODE1, VALUE0), ]
	NODE2 -> [ member(NODE2, QUORUM0), votes(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, V:node:e2:), ]
	NODE2 -> [ member(V:node:e2:, QUORUM0), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(member(V:node:e2:, QUORUM0) & votes(NODE0, V:node:e2:)) -> [ NODE2, ]
	votes(V:node:e2:, NODE2) -> [ NODE0, ]
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, V:node:e2:)) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE2, | NODE0, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))))
(non-epr version)
	(forall VALUE0 . (forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))))
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))))
---------------------------
(original clause)
	(~decided(n1, v0) | ~member(n2, q0) | ~member(n2, q1) | ~member(n2, q2) | ~votes(n0, n2) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE1) | (NODE0 = NODE1)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N2, Q0) & votes(N0, N2) & votes(N1, N1)) -> (N0 = N1)))))
@   122s  is global clause? No
@   122s  Learning in F[6]: (forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N2, Q0) & votes(N0, N2) & votes(N1, N1)) -> (N0 = N1)))))
@   122s  F[6] /\ T /\ C+ ?
@   122s  	Ans. UNSAT
@   123s  F[7] unsat core #3 	(ucsz: 8 -> 7 -> 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v0)
	leader(n0)
	votes(n1, n1)
(clause)
	(~decided(n1, v0) | ~leader(n0) | ~votes(n1, n1))
(relations)
	decided
	leader
	votes
(cube: std)
	leader(NODE0)
	votes(NODE1, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   123s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~leader(n0) | ~votes(n1, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | ~votes(NODE1, NODE1) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((leader(N0) & votes(N1, N1) & decided(N1, V0)) -> (N0 = N1)))
@   123s  is global clause? No
@   123s  Learning in F[7]: (forall N0, N1, V0 . ((leader(N0) & votes(N1, N1) & decided(N1, V0)) -> (N0 = N1)))
@   123s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   123s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   123s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   123s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   123s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   123s  F[4] /\ T /\ C+ ?
@   123s  	Ans. UNSAT
@   124s  F[5] unsat core #6 	(ucsz: 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	~vote_request_msg(n1, n0)
	leader(n1)
	votes(n0, n1)
	votes(n0, n2)
	votes(n1, n0)
	votes(n1, n2)
(clause)
	(~leader(n1) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n1, n0) | ~votes(n1, n2) | vote_request_msg(n1, n0))
(relations)
	leader
	vote_request_msg
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE2)
	votes(NODE0, NODE1)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE1, NODE0)
	votes(NODE1, NODE2)
	leader(NODE1)
(antecedent reduction)
@   124s  antecedent: 3 -> 2 (reduced)
	removed: NODE2

qv2cubes #3
	NODE0 -> [ votes(NODE1, NODE0), ~vote_request_msg(NODE1, NODE0), votes(NODE0, NODE2), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE0), ~vote_request_msg(NODE1, NODE0), votes(NODE1, NODE2), votes(NODE0, NODE1), leader(NODE1), ]
	NODE2 -> [ votes(NODE1, NODE2), votes(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), votes(NODE1, V:node:e2:), votes(V:node:e2:, NODE1), ~vote_request_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(V:node:e2:, NODE0), votes(V:node:e2:, NODE0), votes(V:node:e2:, NODE2), leader(V:node:e2:), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ votes(NODE1, V:node:e2:), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(votes(NODE1, V:node:e2:) & votes(V:node:e2:, NODE1) & votes(V:node:e2:, NODE2) & ~vote_request_msg(NODE1, V:node:e2:)) -> [ NODE0, ]
	(leader(V:node:e2:) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0) & votes(V:node:e2:, NODE2) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE1, ]
	(votes(NODE0, V:node:e2:) & votes(NODE1, V:node:e2:)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE0) | ~votes(NODE1, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE0)))
---------------------------
(original clause)
	(~leader(n1) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n1, n0) | ~votes(n1, n2) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE0) | ~votes(NODE1, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N1) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0) & votes(N1, N2)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
@   124s  is global clause? No
@   124s  Learning in F[5]: (forall N0, N1, N2 . ((leader(N1) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0) & votes(N1, N2)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
@   124s  F[5] /\ T /\ C+ ?
@   124s  	Ans. UNSAT
@   125s  F[6] unsat core #6 	(ucsz: 10 -> 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n1, v1)
	~vote_request_msg(n1, n0)
	votes(n0, n1)
	votes(n0, n2)
	votes(n1, n0)
	votes(n1, n2)
(clause)
	(~decided(n1, v1) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n1, n0) | ~votes(n1, n2) | vote_request_msg(n1, n0))
(relations)
	decided
	votes
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE2)
	votes(NODE0, NODE1)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE1, NODE0)
	votes(NODE1, NODE2)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   125s  antecedent: 3 -> 2 (reduced)
	removed: NODE2

qv2cubes #3
	NODE0 -> [ votes(NODE1, NODE0), ~vote_request_msg(NODE1, NODE0), votes(NODE0, NODE2), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE0), ~vote_request_msg(NODE1, NODE0), votes(NODE1, NODE2), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE1, NODE2), votes(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), votes(NODE1, V:node:e2:), votes(V:node:e2:, NODE1), ~vote_request_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ~vote_request_msg(V:node:e2:, NODE0), votes(V:node:e2:, NODE0), votes(V:node:e2:, NODE2), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ votes(NODE1, V:node:e2:), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(votes(NODE1, V:node:e2:) & votes(V:node:e2:, NODE1) & votes(V:node:e2:, NODE2) & ~vote_request_msg(NODE1, V:node:e2:)) -> [ NODE0, ]
	(decided(V:node:e2:, VALUE0) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0) & votes(V:node:e2:, NODE2) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE1, ]
	(votes(NODE0, V:node:e2:) & votes(NODE1, V:node:e2:)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE0) | ~votes(NODE1, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n1, n0) | ~votes(n1, n2) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE1, NODE0) | ~votes(NODE1, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0) & votes(N1, N2)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
@   125s  is global clause? No
@   125s  Learning in F[6]: (forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0) & votes(N1, N2)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
@   125s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   125s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   125s  F[5] /\ T /\ C+ ?
@   125s  	Ans. UNSAT
@   127s  F[6] unsat core #6 	(ucsz: 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	~vote_request_msg(n0, n1)
	~vote_request_msg(n1, n0)
	leader(n0)
	leader(n1)
	votes(n0, n1)
	votes(n1, n0)
(clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0) | vote_request_msg(n0, n1) | vote_request_msg(n1, n0))
(relations)
	leader
	vote_request_msg
	votes
(cube: std)
	votes(NODE0, NODE1)
	leader(NODE0)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE1, NODE0)
	leader(NODE1)
(antecedent reduction)
@   127s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | ~votes(NODE0, NODE1) | ~leader(NODE1) | ~leader(NODE0) | vote_request_msg(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0) | vote_request_msg(n0, n1) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | ~votes(NODE0, NODE1) | ~leader(NODE1) | ~leader(NODE0) | vote_request_msg(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((votes(N1, N0) & votes(N0, N1) & leader(N1) & leader(N0)) -> (vote_request_msg(N1, N0) | vote_request_msg(N0, N1) | (N0 = N1))))
@   127s  is global clause? No
@   127s  Learning in F[6]: (forall N0, N1 . ((votes(N1, N0) & votes(N0, N1) & leader(N1) & leader(N0)) -> (vote_request_msg(N1, N0) | vote_request_msg(N0, N1) | (N0 = N1))))
@   127s  F[6] /\ T /\ C+ ?
@   127s  	Ans. UNSAT
@   128s  F[7] unsat core #6 	(ucsz: 9 -> 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n1, v1)
	~vote_request_msg(n0, n1)
	~vote_request_msg(n1, n0)
	leader(n0)
	votes(n0, n1)
	votes(n1, n0)
(clause)
	(~decided(n1, v1) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n0) | vote_request_msg(n0, n1) | vote_request_msg(n1, n0))
(relations)
	decided
	leader
	vote_request_msg
	votes
(cube: std)
	votes(NODE0, NODE1)
	leader(NODE0)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE1, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   129s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | ~votes(NODE0, NODE1) | ~decided(NODE1, VALUE0) | ~leader(NODE0) | vote_request_msg(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n0) | vote_request_msg(n0, n1) | vote_request_msg(n1, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | ~votes(NODE0, NODE1) | ~decided(NODE1, VALUE0) | ~leader(NODE0) | vote_request_msg(NODE0, NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((votes(N1, N0) & votes(N0, N1) & decided(N1, V0) & leader(N0)) -> (vote_request_msg(N1, N0) | vote_request_msg(N0, N1) | (N0 = N1))))
@   129s  is global clause? No
@   129s  Learning in F[7]: (forall N0, N1, V0 . ((votes(N1, N0) & votes(N0, N1) & decided(N1, V0) & leader(N0)) -> (vote_request_msg(N1, N0) | vote_request_msg(N0, N1) | (N0 = N1))))
@   129s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   129s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   129s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   129s  F[5] /\ T /\ C+ ?
@   129s  	Ans. UNSAT
@   131s  F[6] unsat core #7 	(ucsz: 12 -> 11 -> 10 -> 8 -> 7 -> 7)
(minimal unsat core)
	~vote_request_msg(n0, n0)
	~vote_request_msg(n0, n1)
	leader(n0)
	~vote_request_msg(n2, n0)
	leader(n2)
	votes(n0, n2)
	votes(n2, n0)
(clause)
	(~leader(n0) | ~leader(n2) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n0, n0) | vote_request_msg(n0, n1) | vote_request_msg(n2, n0))
(relations)
	leader
	vote_request_msg
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	~vote_request_msg(NODE0, NODE0)
	votes(NODE0, NODE2)
	votes(NODE2, NODE0)
	leader(NODE0)
	~vote_request_msg(NODE0, NODE1)
	leader(NODE2)
	~vote_request_msg(NODE2, NODE0)
(antecedent reduction)
@   132s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE0, NODE0), ~vote_request_msg(NODE2, NODE0), votes(NODE2, NODE0), leader(NODE0), ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE2), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), ]
	NODE2 -> [ leader(NODE2), ~vote_request_msg(NODE2, NODE0), votes(NODE0, NODE2), votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, V:node:e2:), leader(V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), votes(V:node:e2:, NODE2), votes(NODE2, V:node:e2:), ~vote_request_msg(NODE2, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), ]
	NODE2 -> [ ~vote_request_msg(V:node:e2:, NODE0), votes(V:node:e2:, NODE0), leader(V:node:e2:), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	~vote_request_msg(NODE0, V:node:e2:) -> [ NODE1, ]
	(leader(V:node:e2:) & votes(NODE2, V:node:e2:) & votes(V:node:e2:, NODE2) & ~vote_request_msg(NODE2, V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE1) & ~vote_request_msg(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	(leader(V:node:e2:) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~leader(NODE2) | ~votes(NODE0, NODE2) | ~votes(NODE2, NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE0) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE2, NODE0)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n0, n0) | vote_request_msg(n0, n1) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~leader(NODE2) | ~votes(NODE0, NODE2) | ~votes(NODE2, NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE0) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE2, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N0) & leader(N2) & votes(N0, N2) & votes(N2, N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N0) | vote_request_msg(N0, N1) | vote_request_msg(N2, N0))))
@   132s  is global clause? No
@   132s  Learning in F[6]: (forall N0, N1, N2 . ((leader(N0) & leader(N2) & votes(N0, N2) & votes(N2, N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N0) | vote_request_msg(N0, N1) | vote_request_msg(N2, N0))))
@   132s  F[6] /\ T /\ C+ ?
@   132s  	Ans. UNSAT
@   133s  F[7] unsat core #7 	(ucsz: 10 -> 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	~vote_request_msg(n0, n0)
	decided(n2, v0)
	leader(n0)
	~vote_request_msg(n2, n0)
	votes(n0, n2)
	votes(n2, n0)
	~vote_request_msg(n0, n1)
(clause)
	(~decided(n2, v0) | ~leader(n0) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n0, n0) | vote_request_msg(n0, n1) | vote_request_msg(n2, n0))
(relations)
	decided
	leader
	vote_request_msg
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	~vote_request_msg(NODE0, NODE0)
	votes(NODE0, NODE2)
	votes(NODE2, NODE0)
	leader(NODE0)
	~vote_request_msg(NODE0, NODE1)
	decided(NODE2, VALUE0)
	~vote_request_msg(NODE2, NODE0)
(antecedent reduction)
@   134s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE0, NODE0), ~vote_request_msg(NODE2, NODE0), votes(NODE2, NODE0), leader(NODE0), ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE2), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), ~vote_request_msg(NODE2, NODE0), votes(NODE0, NODE2), votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, V:node:e2:), leader(V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), votes(V:node:e2:, NODE2), votes(NODE2, V:node:e2:), ~vote_request_msg(NODE2, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), ~vote_request_msg(V:node:e2:, NODE0), votes(V:node:e2:, NODE0), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	~vote_request_msg(NODE0, V:node:e2:) -> [ NODE1, ]
	(leader(V:node:e2:) & votes(NODE2, V:node:e2:) & votes(V:node:e2:, NODE2) & ~vote_request_msg(NODE2, V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE1) & ~vote_request_msg(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	(decided(V:node:e2:, VALUE0) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE2, NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE0) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE2, NODE0)))
---------------------------
(original clause)
	(~decided(n2, v0) | ~leader(n0) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n0, n0) | vote_request_msg(n0, n1) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE2) | ~votes(NODE2, NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE0) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE2, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N2, V0) & leader(N0) & votes(N0, N2) & votes(N2, N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N0) | vote_request_msg(N0, N1) | vote_request_msg(N2, N0))))
@   134s  is global clause? No
@   134s  Learning in F[7]: (forall N0, N1, V0, N2 . ((decided(N2, V0) & leader(N0) & votes(N0, N2) & votes(N2, N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N0) | vote_request_msg(N0, N1) | vote_request_msg(N2, N0))))
@   134s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = true
	vote_request_msg(n1, n1) = true
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = true
	vote_request_msg(n1, n1) = true
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   134s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   134s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false			--> modified
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = true
	vote_request_msg(n1, n1) = true
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   134s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   134s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = true
	vote_request_msg(n1, n1) = true
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   134s  F[4] /\ T /\ C+ ?
@   134s  	Ans. UNSAT
@   135s  F[5] unsat core #7 	(ucsz: 11 -> 8 -> 7 -> 7)
(minimal unsat core)
	member(n1, q1)
	leader(n1)
	member(n2, q0)
	votes(n0, n2)
	member(n2, q2)
	~votes(n1, n1)
	~vote_request_msg(n1, n2)
(clause)
	(~leader(n1) | ~member(n1, q1) | ~member(n2, q0) | ~member(n2, q2) | ~votes(n0, n2) | vote_request_msg(n1, n2) | votes(n1, n1))
(relations)
	leader
	member
	vote_request_msg
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE2)
	member(NODE1, QUORUM1)
	~vote_request_msg(NODE1, NODE2)
	member(NODE2, QUORUM2)
	leader(NODE1)
	member(NODE2, QUORUM0)
	~votes(NODE1, NODE1)
(antecedent reduction)
@   135s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE1, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM1, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM2, QUORUM0, ]
(partition) #2 quorum:e2: -> { QUORUM1, | QUORUM2, QUORUM0, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM1:
		member(NODE1, QUORUM1)
ucmulti:
	member(NODE2, QUORUM0)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE2), ]
	NODE1 -> [ leader(NODE1), member(NODE1, QUORUM1), ~votes(NODE1, NODE1), ~vote_request_msg(NODE1, NODE2), ]
	NODE2 -> [ ~vote_request_msg(NODE1, NODE2), votes(NODE0, NODE2), ((QUORUM1 = QUORUM0) | member(NODE2, QUORUM0)), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), ]
	NODE1 -> [ ~votes(V:node:e2:, V:node:e2:), ~vote_request_msg(V:node:e2:, NODE2), member(V:node:e2:, QUORUM1), leader(V:node:e2:), ]
	NODE2 -> [ ((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)), ~vote_request_msg(NODE1, V:node:e2:), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)) & votes(NODE0, V:node:e2:) & ~vote_request_msg(NODE1, V:node:e2:)) -> [ NODE2, ]
	(leader(V:node:e2:) & member(V:node:e2:, QUORUM1) & ~vote_request_msg(V:node:e2:, NODE2) & ~votes(V:node:e2:, V:node:e2:)) -> [ NODE1, ]
	votes(V:node:e2:, NODE2) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE2, | NODE1, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE1) | ~member(NODE1, QUORUM1) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE2) | votes(NODE1, NODE1))))
(non-epr version)
	(forall NODE0, NODE1, NODE2, QUORUM1 . (exists QUORUM0 . ((~(QUORUM1 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE1) | ~member(NODE1, QUORUM1) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE2) | votes(NODE1, NODE1))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE1) | ~member(NODE1, QUORUM1) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE2) | votes(NODE1, NODE1))))
---------------------------
(original clause)
	(~leader(n1) | ~member(n1, q1) | ~member(n2, q0) | ~member(n2, q2) | ~votes(n0, n2) | vote_request_msg(n1, n2) | votes(n1, n1))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE1) | ~member(NODE1, QUORUM1) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE2) | votes(NODE1, NODE1))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N2, Q0)) & leader(N1) & member(N1, Q1) & votes(N0, N2)) -> ((N0 = N1) | vote_request_msg(N1, N2) | votes(N1, N1)))))
@   139s  is global clause? No
@   139s  Learning in F[5]: (exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N2, Q0)) & leader(N1) & member(N1, Q1) & votes(N0, N2)) -> ((N0 = N1) | vote_request_msg(N1, N2) | votes(N1, N1)))))
@   139s  F[5] /\ T /\ C+ ?
@   139s  	Ans. UNSAT
@   141s  F[6] unsat core #6 	(ucsz: 12 -> 11 -> 10 -> 9 -> 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	~vote_request_msg(n0, n1)
	~vote_request_msg(n1, n2)
	leader(n0)
	leader(n1)
	votes(n0, n1)
	votes(n1, n0)
(clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0) | vote_request_msg(n0, n1) | vote_request_msg(n1, n2))
(relations)
	leader
	vote_request_msg
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE1)
	leader(NODE0)
	~vote_request_msg(NODE0, NODE1)
	~vote_request_msg(NODE1, NODE2)
	votes(NODE1, NODE0)
	leader(NODE1)
(antecedent reduction)
@   143s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), votes(NODE1, NODE0), ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE0), leader(NODE1), ~vote_request_msg(NODE0, NODE1), ~vote_request_msg(NODE1, NODE2), votes(NODE0, NODE1), ]
	NODE2 -> [ ~vote_request_msg(NODE1, NODE2), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, NODE1), leader(V:node:e2:), votes(V:node:e2:, NODE1), votes(NODE1, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), ~vote_request_msg(V:node:e2:, NODE2), votes(V:node:e2:, NODE0), leader(V:node:e2:), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ ~vote_request_msg(NODE1, V:node:e2:), ]
ucubes2qv #3
	(leader(V:node:e2:) & votes(NODE1, V:node:e2:) & votes(V:node:e2:, NODE1) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
	(leader(V:node:e2:) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0) & ~vote_request_msg(NODE0, V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE2)) -> [ NODE1, ]
	~vote_request_msg(NODE1, V:node:e2:) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE1, NODE2)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1) | ~votes(n0, n1) | ~votes(n1, n0) | vote_request_msg(n0, n1) | vote_request_msg(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~leader(NODE1) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE1, NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N0) & leader(N1) & votes(N0, N1) & votes(N1, N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1) | vote_request_msg(N1, N2))))
@   143s  is global clause? No
@   143s  Learning in F[6]: (forall N0, N1, N2 . ((leader(N0) & leader(N1) & votes(N0, N1) & votes(N1, N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1) | vote_request_msg(N1, N2))))
@   143s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   143s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = true
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = true
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = true
	vote_request_msg(n1, n1) = true
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = true
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   143s  F[5] /\ T /\ C+ ?
@   143s  	Ans. UNSAT
@   144s  F[6] unsat core #7 	(ucsz: 10 -> 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	decided(n1, v0)
	member(n1, q0)
	~vote_request_msg(n1, n2)
	member(n1, q1)
	votes(n0, n2)
	member(n2, q2)
	~votes(n1, n1)
(clause)
	(~decided(n1, v0) | ~member(n1, q0) | ~member(n1, q1) | ~member(n2, q2) | ~votes(n0, n2) | vote_request_msg(n1, n2) | votes(n1, n1))
(relations)
	decided
	member
	vote_request_msg
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE2)
	member(NODE1, QUORUM1)
	member(NODE1, QUORUM0)
	~vote_request_msg(NODE1, NODE2)
	member(NODE2, QUORUM2)
	decided(NODE1, VALUE0)
	~votes(NODE1, NODE1)
(antecedent reduction)
@   144s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE1, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM1, QUORUM0, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM2, ]
(partition) #2 quorum:e2: -> { QUORUM1, QUORUM0, | QUORUM2, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM2:
		member(NODE2, QUORUM2)
ucmulti:
	member(NODE1, QUORUM0)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE2), ]
	NODE1 -> [ ~votes(NODE1, NODE1), ~vote_request_msg(NODE1, NODE2), ((QUORUM2 = QUORUM0) | member(NODE1, QUORUM0)), decided(NODE1, VALUE0), ]
	NODE2 -> [ ~vote_request_msg(NODE1, NODE2), votes(NODE0, NODE2), member(NODE2, QUORUM2), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ~votes(V:node:e2:, V:node:e2:), ~vote_request_msg(V:node:e2:, NODE2), ((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)), ]
	NODE2 -> [ member(V:node:e2:, QUORUM2), ~vote_request_msg(NODE1, V:node:e2:), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(member(V:node:e2:, QUORUM2) & votes(NODE0, V:node:e2:) & ~vote_request_msg(NODE1, V:node:e2:)) -> [ NODE2, ]
	votes(V:node:e2:, NODE2) -> [ NODE0, ]
	(((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)) & decided(V:node:e2:, VALUE0) & ~vote_request_msg(V:node:e2:, NODE2) & ~votes(V:node:e2:, V:node:e2:)) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE2, | NODE0, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE2) | votes(NODE1, NODE1)))))
(non-epr version)
	(forall VALUE0 . (forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE2) | votes(NODE1, NODE1)))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE2) | votes(NODE1, NODE1)))))
---------------------------
(original clause)
	(~decided(n1, v0) | ~member(n1, q0) | ~member(n1, q1) | ~member(n2, q2) | ~votes(n0, n2) | vote_request_msg(n1, n2) | votes(n1, n1))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE2) | votes(NODE1, NODE1)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N1, V0) & member(N2, Q2) & votes(N0, N2)) -> ((N0 = N1) | vote_request_msg(N1, N2) | votes(N1, N1))))))
@   146s  is global clause? No
@   146s  Learning in F[6]: (forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N1, V0) & member(N2, Q2) & votes(N0, N2)) -> ((N0 = N1) | vote_request_msg(N1, N2) | votes(N1, N1))))))
@   146s  F[6] /\ T /\ C+ ?
@   146s  	Ans. UNSAT
@   147s  F[7] unsat core #6 	(ucsz: 12 -> 11 -> 10 -> 9 -> 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n1, v0)
	~vote_request_msg(n0, n1)
	~vote_request_msg(n1, n2)
	leader(n0)
	votes(n0, n1)
	votes(n1, n0)
(clause)
	(~decided(n1, v0) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n0) | vote_request_msg(n0, n1) | vote_request_msg(n1, n2))
(relations)
	decided
	leader
	vote_request_msg
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE1)
	leader(NODE0)
	~vote_request_msg(NODE0, NODE1)
	~vote_request_msg(NODE1, NODE2)
	votes(NODE1, NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   148s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), votes(NODE1, NODE0), ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE1, NODE0), ~vote_request_msg(NODE0, NODE1), ~vote_request_msg(NODE1, NODE2), votes(NODE0, NODE1), decided(NODE1, VALUE0), ]
	NODE2 -> [ ~vote_request_msg(NODE1, NODE2), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, NODE1), leader(V:node:e2:), votes(V:node:e2:, NODE1), votes(NODE1, V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), decided(V:node:e2:, VALUE0), ~vote_request_msg(V:node:e2:, NODE2), votes(V:node:e2:, NODE0), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ ~vote_request_msg(NODE1, V:node:e2:), ]
ucubes2qv #3
	(leader(V:node:e2:) & votes(NODE1, V:node:e2:) & votes(V:node:e2:, NODE1) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
	~vote_request_msg(NODE1, V:node:e2:) -> [ NODE2, ]
	(decided(V:node:e2:, VALUE0) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0) & ~vote_request_msg(NODE0, V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE2)) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE0, | NODE2, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE1, NODE2)))
---------------------------
(original clause)
	(~decided(n1, v0) | ~leader(n0) | ~votes(n0, n1) | ~votes(n1, n0) | vote_request_msg(n0, n1) | vote_request_msg(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE1, NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N1, V0) & leader(N0) & votes(N0, N1) & votes(N1, N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1) | vote_request_msg(N1, N2))))
@   148s  is global clause? No
@   148s  Learning in F[7]: (forall N0, N1, V0, N2 . ((decided(N1, V0) & leader(N0) & votes(N0, N1) & votes(N1, N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1) | vote_request_msg(N1, N2))))
@   148s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   148s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   148s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   148s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   148s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   148s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   148s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = false			--> modified
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   148s  F[3] /\ T /\ C+ ?
@   148s  	Ans. UNSAT
@   148s  F[4] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	votes(n2, n0)
	leader(n0)
	~vote_request_msg(n2, n0)
(clause)
	(~leader(n0) | ~votes(n2, n0) | vote_request_msg(n2, n0))
(relations)
	leader
	vote_request_msg
	votes
(cube: std)
	leader(NODE0)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE1, NODE0)
(antecedent reduction)
@   148s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE0)))
---------------------------
(original clause)
	(~leader(n0) | ~votes(n2, n0) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | vote_request_msg(NODE1, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & votes(N1, N0)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
@   148s  is global clause? No
@   148s  Learning in F[4]: (forall N0, N1 . ((leader(N0) & votes(N1, N0)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
@   148s  F[4] /\ T /\ C+ ?
@   148s  	Ans. UNSAT
@   149s  F[5] unsat core #6 	(ucsz: 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	leader(n0)
	~vote_request_msg(n2, n0)
	votes(n0, n1)
	votes(n0, n2)
	votes(n2, n0)
	votes(n2, n1)
(clause)
	(~leader(n0) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n2, n0) | ~votes(n2, n1) | vote_request_msg(n2, n0))
(relations)
	leader
	vote_request_msg
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	~vote_request_msg(NODE2, NODE0)
	votes(NODE0, NODE1)
	votes(NODE2, NODE0)
	leader(NODE0)
	votes(NODE0, NODE2)
	votes(NODE2, NODE1)
(antecedent reduction)
@   149s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ leader(NODE0), votes(NODE0, NODE2), ~vote_request_msg(NODE2, NODE0), votes(NODE0, NODE1), votes(NODE2, NODE0), ]
	NODE1 -> [ votes(NODE0, NODE1), votes(NODE2, NODE1), ]
	NODE2 -> [ votes(NODE0, NODE2), ~vote_request_msg(NODE2, NODE0), votes(NODE2, NODE0), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ votes(NODE2, V:node:e2:), votes(V:node:e2:, NODE2), leader(V:node:e2:), votes(V:node:e2:, NODE1), ~vote_request_msg(NODE2, V:node:e2:), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ ~vote_request_msg(V:node:e2:, NODE0), votes(NODE0, V:node:e2:), votes(V:node:e2:, NODE1), votes(V:node:e2:, NODE0), ]
ucubes2qv #3
	(votes(NODE0, V:node:e2:) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	(leader(V:node:e2:) & votes(NODE2, V:node:e2:) & votes(V:node:e2:, NODE1) & votes(V:node:e2:, NODE2) & ~vote_request_msg(NODE2, V:node:e2:)) -> [ NODE0, ]
	(votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0) & votes(V:node:e2:, NODE1) & ~vote_request_msg(V:node:e2:, NODE0)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE2, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE2, NODE0)))
---------------------------
(original clause)
	(~leader(n0) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n2, n0) | ~votes(n2, n1) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE2, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE2, NODE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N0) & votes(N0, N1) & votes(N0, N2) & votes(N2, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N2, N0))))
@   149s  is global clause? No
@   149s  Learning in F[5]: (forall N0, N1, N2 . ((leader(N0) & votes(N0, N1) & votes(N0, N2) & votes(N2, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N2, N0))))
@   149s  F[5] /\ T /\ C+ ?
@   149s  	Ans. UNSAT
@   158s  F[6] unsat core #5 	(ucsz: 7 -> 6 -> 5 -> 5)
(minimal unsat core)
	leader(n2)
	votes(n2, n0)
	votes(n0, n2)
	leader(n0)
	~vote_request_msg(n2, n0)
(clause)
	(~leader(n0) | ~leader(n2) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n2, n0))
(relations)
	leader
	vote_request_msg
	votes
(cube: std)
	leader(NODE0)
	leader(NODE1)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
	~vote_request_msg(NODE1, NODE0)
(antecedent reduction)
@   160s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | ~leader(NODE0) | ~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | (NODE0 = NODE1) | ~leader(NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~votes(NODE0, NODE1) | ~leader(NODE0) | ~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | (NODE0 = NODE1) | ~leader(NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((votes(N0, N1) & leader(N0) & votes(N1, N0) & leader(N1)) -> (vote_request_msg(N1, N0) | (N0 = N1))))
@   160s  is global clause? No
@   160s  Learning in F[6]: (forall N0, N1 . ((votes(N0, N1) & leader(N0) & votes(N1, N0) & leader(N1)) -> (vote_request_msg(N1, N0) | (N0 = N1))))
@   160s  F[6] /\ T /\ C+ ?
@   160s  	Ans. UNSAT
@   161s  F[7] unsat core #5 	(ucsz: 8 -> 7 -> 6 -> 5 -> 5)
(minimal unsat core)
	votes(n2, n0)
	votes(n0, n2)
	decided(n2, v0)
	leader(n0)
	~vote_request_msg(n2, n0)
(clause)
	(~decided(n2, v0) | ~leader(n0) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n2, n0))
(relations)
	decided
	leader
	vote_request_msg
	votes
(cube: std)
	leader(NODE0)
	votes(NODE1, NODE0)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
	~vote_request_msg(NODE1, NODE0)
(antecedent reduction)
@   161s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE0, NODE1) | ~leader(NODE0) | ~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n2, v0) | ~leader(n0) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE0, NODE1) | ~leader(NODE0) | ~votes(NODE1, NODE0) | vote_request_msg(NODE1, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((votes(N0, N1) & leader(N0) & votes(N1, N0) & decided(N1, V0)) -> (vote_request_msg(N1, N0) | (N0 = N1))))
@   161s  is global clause? No
@   161s  Learning in F[7]: (forall N0, N1, V0 . ((votes(N0, N1) & leader(N0) & votes(N1, N0) & decided(N1, V0)) -> (vote_request_msg(N1, N0) | (N0 = N1))))
@   161s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = false
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = false
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = true
	member(n2, q2) = true

@   161s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   161s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = true
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = false
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = true
	member(n2, q2) = true

@   161s  F[5] /\ T /\ C+ ?
@   161s  	Ans. UNSAT
@   164s  F[6] unsat core #4 	(ucsz: 16 -> 13 -> 11 -> 10 -> 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	leader(n2)
	~vote_request_msg(n2, n1)
	~vote_request_msg(n0, n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n2) | vote_request_msg(n0, n1) | vote_request_msg(n2, n1))
(relations)
	leader
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE0)
	leader(NODE2)
	~vote_request_msg(NODE0, NODE1)
	~vote_request_msg(NODE2, NODE1)
(antecedent reduction)
@   166s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), ~vote_request_msg(NODE0, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), ~vote_request_msg(NODE2, NODE1), ]
	NODE2 -> [ leader(NODE2), ~vote_request_msg(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ leader(V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), ~vote_request_msg(NODE2, V:node:e2:), ]
	NODE2 -> [ leader(V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), ]
ucubes2qv #2
	(leader(V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, NODE2, ]
	(~vote_request_msg(NODE0, V:node:e2:) & ~vote_request_msg(NODE2, V:node:e2:)) -> [ NODE1, ]
(partition) #2 node:e2: -> { NODE0, NODE2, | NODE1, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	NODE1:
		~vote_request_msg(NODE0, NODE1)
		~vote_request_msg(NODE2, NODE1)
ucmulti:
	leader(NODE0)
	~vote_request_msg(NODE0, NODE1)
	(epr check: forward)	allowed(arc: node -> node)? False
	(epr check: reverse)	allowed(arc: node -> node)? False
(epr reduced)
	(exists NODE0 . (forall NODE1 . ((~(NODE1 = NODE0) & ~leader(NODE0)) | (~(NODE1 = NODE0) & vote_request_msg(NODE0, NODE1)))))
(non-epr version)
	(forall NODE1 . (exists NODE0 . ((~(NODE1 = NODE0) & ~leader(NODE0)) | (~(NODE1 = NODE0) & vote_request_msg(NODE0, NODE1)))))
	Both verions not allowed!
(epr-reduction) -> SAT
	EPR-reduction is not allowed!
	Learning non-epr version instead.
(boosted clause)
	(forall NODE1 . (exists NODE0 . ((~(NODE1 = NODE0) & ~leader(NODE0)) | (~(NODE1 = NODE0) & vote_request_msg(NODE0, NODE1)))))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2) | vote_request_msg(n0, n1) | vote_request_msg(n2, n1))
(learnt sym-boosted clause)
	(forall NODE1 . (exists NODE0 . ((~(NODE1 = NODE0) & ~leader(NODE0)) | (~(NODE1 = NODE0) & vote_request_msg(NODE0, NODE1)))))
---------------------------
(clause-type: non-epr)	(forall N1 . (exists N0 . (((N1 = N0) | leader(N0)) -> (~(N1 = N0) & vote_request_msg(N0, N1)))))
@   166s  is global clause? No
@   166s  Learning in F[6]: (forall N1 . (exists N0 . (((N1 = N0) | leader(N0)) -> (~(N1 = N0) & vote_request_msg(N0, N1)))))
@   166s  F[6] /\ T /\ C+ ?
@   166s  	Ans. UNSAT
@   172s  F[7] unsat core #4 	(ucsz: 12 -> 11 -> 10 -> 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	leader(n2)
	~vote_request_msg(n2, n1)
	decided(n0, v1)
	~vote_request_msg(n0, n1)
(clause)
	(~decided(n0, v1) | ~leader(n2) | vote_request_msg(n0, n1) | vote_request_msg(n2, n1))
(relations)
	decided
	leader
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE2)
	decided(NODE0, VALUE0)
	~vote_request_msg(NODE0, NODE1)
	~vote_request_msg(NODE2, NODE1)
(antecedent reduction)
@   175s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ decided(NODE0, VALUE0), ~vote_request_msg(NODE0, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), ~vote_request_msg(NODE2, NODE1), ]
	NODE2 -> [ leader(NODE2), ~vote_request_msg(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ decided(V:node:e2:, VALUE0), ~vote_request_msg(V:node:e2:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), ~vote_request_msg(NODE2, V:node:e2:), ]
	NODE2 -> [ leader(V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), ]
ucubes2qv #3
	(leader(V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE2, ]
	(decided(V:node:e2:, VALUE0) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
	(~vote_request_msg(NODE0, V:node:e2:) & ~vote_request_msg(NODE2, V:node:e2:)) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE2, | NODE0, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE0, VALUE0) | ~leader(NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE2, NODE1)))
---------------------------
(original clause)
	(~decided(n0, v1) | ~leader(n2) | vote_request_msg(n0, n1) | vote_request_msg(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE0, VALUE0) | ~leader(NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1) | vote_request_msg(NODE2, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N0, V0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1) | vote_request_msg(N2, N1))))
@   175s  is global clause? No
@   175s  Learning in F[7]: (forall N0, N1, V0, N2 . ((decided(N0, V0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1) | vote_request_msg(N2, N1))))
@   175s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   175s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   175s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   175s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   175s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   175s  F[4] /\ T /\ C+ ?
@   175s  	Ans. UNSAT
@   175s  F[5] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	decided(n2, v1)
	votes(n0, n2)
	~vote_request_msg(n0, n2)
(clause)
	(~decided(n2, v1) | ~votes(n0, n2) | vote_request_msg(n0, n2))
(relations)
	decided
	votes
	vote_request_msg
(cube: std)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   176s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (vote_request_msg(NODE0, NODE1) | ~votes(NODE0, NODE1) | ~decided(NODE1, VALUE0) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~votes(n0, n2) | vote_request_msg(n0, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (vote_request_msg(NODE0, NODE1) | ~votes(NODE0, NODE1) | ~decided(NODE1, VALUE0) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((votes(N0, N1) & decided(N1, V0)) -> (vote_request_msg(N0, N1) | (N0 = N1))))
@   176s  is global clause? No
@   176s  Learning in F[5]: (forall N0, N1, V0 . ((votes(N0, N1) & decided(N1, V0)) -> (vote_request_msg(N0, N1) | (N0 = N1))))
@   176s  F[5] /\ T /\ C+ ?
@   176s  	Ans. UNSAT
@   176s  F[6] unsat core #6 	(ucsz: 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n2, v1)
	~vote_request_msg(n0, n2)
	votes(n0, n1)
	votes(n0, n2)
	votes(n2, n0)
	votes(n2, n1)
(clause)
	(~decided(n2, v1) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n2, n0) | ~votes(n2, n1) | vote_request_msg(n0, n2))
(relations)
	decided
	votes
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE2)
	votes(NODE0, NODE1)
	votes(NODE2, NODE0)
	decided(NODE2, VALUE0)
	~vote_request_msg(NODE0, NODE2)
	votes(NODE2, NODE1)
(antecedent reduction)
@   177s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE0, NODE2), votes(NODE0, NODE2), votes(NODE0, NODE1), votes(NODE2, NODE0), ]
	NODE1 -> [ votes(NODE0, NODE1), votes(NODE2, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), votes(NODE0, NODE2), ~vote_request_msg(NODE0, NODE2), votes(NODE2, NODE0), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, NODE2), votes(V:node:e2:, NODE2), votes(V:node:e2:, NODE1), votes(NODE2, V:node:e2:), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), ~vote_request_msg(NODE0, V:node:e2:), votes(V:node:e2:, NODE0), votes(V:node:e2:, NODE1), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(votes(NODE0, V:node:e2:) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	(votes(NODE2, V:node:e2:) & votes(V:node:e2:, NODE1) & votes(V:node:e2:, NODE2) & ~vote_request_msg(V:node:e2:, NODE2)) -> [ NODE0, ]
	(decided(V:node:e2:, VALUE0) & votes(NODE0, V:node:e2:) & votes(V:node:e2:, NODE0) & votes(V:node:e2:, NODE1) & ~vote_request_msg(NODE0, V:node:e2:)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE2, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE2)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~votes(n0, n1) | ~votes(n0, n2) | ~votes(n2, n0) | ~votes(n2, n1) | vote_request_msg(n0, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~votes(NODE0, NODE1) | ~votes(NODE0, NODE2) | ~votes(NODE2, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N1) & votes(N0, N2) & votes(N2, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N0, N2))))
@   177s  is global clause? No
@   177s  Learning in F[6]: (forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N1) & votes(N0, N2) & votes(N2, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N0, N2))))
@   177s  F[6] /\ T /\ C+ ?
@   177s  	Ans. UNSAT
@   178s  F[7] unsat core #5 	(ucsz: 8 -> 7 -> 6 -> 5 -> 5)
(minimal unsat core)
	votes(n2, n0)
	votes(n0, n2)
	decided(n2, v1)
	leader(n0)
	~vote_request_msg(n0, n2)
(clause)
	(~decided(n2, v1) | ~leader(n0) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n0, n2))
(relations)
	decided
	leader
	vote_request_msg
	votes
(cube: std)
	leader(NODE0)
	votes(NODE1, NODE0)
	~vote_request_msg(NODE0, NODE1)
	votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   178s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE0, NODE1) | ~leader(NODE0) | vote_request_msg(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~leader(n0) | ~votes(n0, n2) | ~votes(n2, n0) | vote_request_msg(n0, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~votes(NODE0, NODE1) | ~leader(NODE0) | vote_request_msg(NODE0, NODE1) | ~votes(NODE1, NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((votes(N0, N1) & leader(N0) & votes(N1, N0) & decided(N1, V0)) -> (vote_request_msg(N0, N1) | (N0 = N1))))
@   178s  is global clause? No
@   178s  Learning in F[7]: (forall N0, N1, V0 . ((votes(N0, N1) & leader(N0) & votes(N1, N0) & decided(N1, V0)) -> (vote_request_msg(N0, N1) | (N0 = N1))))
@   178s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   178s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   178s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   178s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   178s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   178s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   178s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   178s  F[3] /\ T /\ C+ ?
@   178s  	Ans. UNSAT
@   179s  F[4] unsat core #4 	(ucsz: 4 -> 4)
(minimal unsat core)
	vote_msg(n1, n0)
	leader(n2)
	votes(n2, n1)
	~vote_request_msg(n0, n1)
(clause)
	(~leader(n2) | ~vote_msg(n1, n0) | ~votes(n2, n1) | vote_request_msg(n0, n1))
(relations)
	vote_msg
	leader
	vote_request_msg
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE2)
	~vote_request_msg(NODE0, NODE1)
	vote_msg(NODE1, NODE0)
	votes(NODE2, NODE1)
(antecedent reduction)
@   179s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), vote_msg(NODE1, NODE0), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), vote_msg(NODE1, NODE0), votes(NODE2, NODE1), ]
	NODE2 -> [ leader(NODE2), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ vote_msg(NODE1, V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), votes(NODE2, V:node:e2:), vote_msg(V:node:e2:, NODE0), ]
	NODE2 -> [ leader(V:node:e2:), votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(vote_msg(NODE1, V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
	(vote_msg(V:node:e2:, NODE0) & votes(NODE2, V:node:e2:) & ~vote_request_msg(NODE0, V:node:e2:)) -> [ NODE1, ]
	(leader(V:node:e2:) & votes(V:node:e2:, NODE1)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE2) | ~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~leader(n2) | ~vote_msg(n1, n0) | ~votes(n2, n1) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE2) | ~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N2) & vote_msg(N1, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1))))
@   179s  is global clause? No
@   179s  Learning in F[4]: (forall N0, N1, N2 . ((leader(N2) & vote_msg(N1, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1))))
@   179s  F[4] /\ T /\ C+ ?
@   179s  	Ans. UNSAT
@   179s  F[5] unsat core #7 	(ucsz: 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	~vote_request_msg(n0, n1)
	member(n2, q0)
	member(n1, q1)
	leader(n2)
	votes(n0, n1)
	member(n2, q2)
	~votes(n2, n2)
(clause)
	(~leader(n2) | ~member(n1, q1) | ~member(n2, q0) | ~member(n2, q2) | ~votes(n0, n1) | vote_request_msg(n0, n1) | votes(n2, n2))
(relations)
	leader
	member
	vote_request_msg
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	member(NODE2, QUORUM0)
	votes(NODE0, NODE1)
	leader(NODE2)
	~vote_request_msg(NODE0, NODE1)
	~votes(NODE2, NODE2)
	member(NODE1, QUORUM1)
	member(NODE2, QUORUM2)
(antecedent reduction)
@   180s  antecedent: 6 -> 5 (reduced)
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE1, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM1, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM2, QUORUM0, ]
(partition) #2 quorum:e2: -> { QUORUM1, | QUORUM2, QUORUM0, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM1:
		member(NODE1, QUORUM1)
ucmulti:
	member(NODE2, QUORUM0)
qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
	NODE1 -> [ member(NODE1, QUORUM1), ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
	NODE2 -> [ leader(NODE2), ~votes(NODE2, NODE2), ((QUORUM1 = QUORUM0) | member(NODE2, QUORUM0)), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, NODE1), votes(V:node:e2:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), member(V:node:e2:, QUORUM1), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ ~votes(V:node:e2:, V:node:e2:), leader(V:node:e2:), ((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)), ]
ucubes2qv #3
	(member(V:node:e2:, QUORUM1) & votes(NODE0, V:node:e2:) & ~vote_request_msg(NODE0, V:node:e2:)) -> [ NODE1, ]
	(((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)) & leader(V:node:e2:) & ~votes(V:node:e2:, V:node:e2:)) -> [ NODE2, ]
	(votes(V:node:e2:, NODE1) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE2) | ~member(NODE1, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1) | votes(NODE2, NODE2))))
(non-epr version)
	(forall NODE0, NODE1, NODE2, QUORUM1 . (exists QUORUM0 . ((~(QUORUM1 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE2) | ~member(NODE1, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1) | votes(NODE2, NODE2))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE2) | ~member(NODE1, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1) | votes(NODE2, NODE2))))
---------------------------
(original clause)
	(~leader(n2) | ~member(n1, q1) | ~member(n2, q0) | ~member(n2, q2) | ~votes(n0, n1) | vote_request_msg(n0, n1) | votes(n2, n2))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~leader(NODE2) | ~member(NODE1, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1) | votes(NODE2, NODE2))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N2, Q0)) & leader(N2) & member(N1, Q1) & votes(N0, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1) | votes(N2, N2)))))
@   183s  is global clause? No
@   183s  Learning in F[5]: (exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N2, Q0)) & leader(N2) & member(N1, Q1) & votes(N0, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1) | votes(N2, N2)))))
@   183s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   183s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   183s  F[4] /\ T /\ C+ ?
@   183s  	Ans. UNSAT
@   183s  F[5] unsat core #4 	(ucsz: 5 -> 4 -> 4)
(minimal unsat core)
	vote_msg(n1, n0)
	votes(n2, n1)
	~vote_request_msg(n0, n1)
	decided(n2, v0)
(clause)
	(~decided(n2, v0) | ~vote_msg(n1, n0) | ~votes(n2, n1) | vote_request_msg(n0, n1))
(relations)
	decided
	votes
	vote_request_msg
	vote_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	~vote_request_msg(NODE0, NODE1)
	decided(NODE2, VALUE0)
	vote_msg(NODE1, NODE0)
	votes(NODE2, NODE1)
(antecedent reduction)
@   184s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), vote_msg(NODE1, NODE0), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), vote_msg(NODE1, NODE0), votes(NODE2, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ vote_msg(NODE1, V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), votes(NODE2, V:node:e2:), vote_msg(V:node:e2:, NODE0), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(vote_msg(NODE1, V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
	(vote_msg(V:node:e2:, NODE0) & votes(NODE2, V:node:e2:) & ~vote_request_msg(NODE0, V:node:e2:)) -> [ NODE1, ]
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, NODE1)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~decided(n2, v0) | ~vote_msg(n1, n0) | ~votes(n2, n1) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N2, V0) & vote_msg(N1, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1))))
@   184s  is global clause? No
@   184s  Learning in F[5]: (forall N0, N1, V0, N2 . ((decided(N2, V0) & vote_msg(N1, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1))))
@   184s  F[5] /\ T /\ C+ ?
@   184s  	Ans. UNSAT
@   185s  F[6] unsat core #7 	(ucsz: 11 -> 10 -> 9 -> 8 -> 7 -> 7)
(minimal unsat core)
	decided(n2, v0)
	member(n1, q0)
	member(n1, q1)
	votes(n0, n1)
	member(n2, q2)
	~votes(n2, n2)
	~vote_request_msg(n0, n1)
(clause)
	(~decided(n2, v0) | ~member(n1, q0) | ~member(n1, q1) | ~member(n2, q2) | ~votes(n0, n1) | vote_request_msg(n0, n1) | votes(n2, n2))
(relations)
	decided
	member
	vote_request_msg
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE1)
	member(NODE1, QUORUM1)
	member(NODE1, QUORUM0)
	~vote_request_msg(NODE0, NODE1)
	~votes(NODE2, NODE2)
	decided(NODE2, VALUE0)
	member(NODE2, QUORUM2)
(antecedent reduction)
@   186s  antecedent: 6 -> 5 (reduced)
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE1, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM1, QUORUM0, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM2, ]
(partition) #2 quorum:e2: -> { QUORUM1, QUORUM0, | QUORUM2, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM2:
		member(NODE2, QUORUM2)
ucmulti:
	member(NODE1, QUORUM0)
qv2cubes #3
	NODE0 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), votes(NODE0, NODE1), ((QUORUM2 = QUORUM0) | member(NODE1, QUORUM0)), ]
	NODE2 -> [ decided(NODE2, VALUE0), ~votes(NODE2, NODE2), member(NODE2, QUORUM2), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, NODE1), votes(V:node:e2:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), ((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), ~votes(V:node:e2:, V:node:e2:), member(V:node:e2:, QUORUM2), ]
ucubes2qv #3
	(((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)) & votes(NODE0, V:node:e2:) & ~vote_request_msg(NODE0, V:node:e2:)) -> [ NODE1, ]
	(decided(V:node:e2:, VALUE0) & member(V:node:e2:, QUORUM2) & ~votes(V:node:e2:, V:node:e2:)) -> [ NODE2, ]
	(votes(V:node:e2:, NODE1) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1) | votes(NODE2, NODE2)))))
(non-epr version)
	(forall VALUE0 . (forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1) | votes(NODE2, NODE2)))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1) | votes(NODE2, NODE2)))))
---------------------------
(original clause)
	(~decided(n2, v0) | ~member(n1, q0) | ~member(n1, q1) | ~member(n2, q2) | ~votes(n0, n1) | vote_request_msg(n0, n1) | votes(n2, n2))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE2, QUORUM2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | vote_request_msg(NODE0, NODE1) | votes(NODE2, NODE2)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N2, V0) & member(N2, Q2) & votes(N0, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1) | votes(N2, N2))))))
@   189s  is global clause? No
@   189s  Learning in F[6]: (forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N2, V0) & member(N2, Q2) & votes(N0, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1) | votes(N2, N2))))))
@   189s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   189s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = false
	member(n2, q2) = true

@   189s  F[5] /\ T /\ C+ ?
@   189s  	Ans. UNSAT
@   193s  F[6] unsat core #3 	(ucsz: 14 -> 12 -> 11 -> 10 -> 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	leader(n2)
	~vote_request_msg(n0, n1)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n2) | vote_request_msg(n0, n1))
(relations)
	leader
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE0)
	leader(NODE2)
	~vote_request_msg(NODE0, NODE1)
(antecedent reduction)
@   417s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), ~vote_request_msg(NODE0, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), ]
	NODE2 -> [ leader(NODE2), ]
qv2ucubes #3
	NODE0 -> [ leader(V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), ]
	NODE2 -> [ leader(V:node:e2:), ]
ucubes2qv #3
	~vote_request_msg(NODE0, V:node:e2:) -> [ NODE1, ]
	(leader(V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
	leader(V:node:e2:) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~leader(NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE0) | ~leader(NODE2) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1))))
@   417s  is global clause? No
@   417s  Learning in F[6]: (forall N0, N1, N2 . ((leader(N0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1))))
@   417s  F[6] /\ T /\ C+ ?
@   418s  	Ans. UNSAT
@   420s  F[7] unsat core #4 	(ucsz: 11 -> 10 -> 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 4)
(minimal unsat core)
	member(n2, q0)
	decided(n2, v0)
	leader(n0)
	~vote_request_msg(n0, n1)
(clause)
	(~decided(n2, v0) | ~leader(n0) | ~member(n2, q0) | vote_request_msg(n0, n1))
(relations)
	decided
	leader
	member
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE0)
	member(NODE2, QUORUM0)
	~vote_request_msg(NODE0, NODE1)
	decided(NODE2, VALUE0)
(antecedent reduction)
@   421s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), ~vote_request_msg(NODE0, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), member(NODE2, QUORUM0), ]
qv2ucubes #3
	NODE0 -> [ leader(V:node:e2:), ~vote_request_msg(V:node:e2:, NODE1), ]
	NODE1 -> [ ~vote_request_msg(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), member(V:node:e2:, QUORUM0), ]
ucubes2qv #3
	~vote_request_msg(NODE0, V:node:e2:) -> [ NODE1, ]
	(decided(V:node:e2:, VALUE0) & member(V:node:e2:, QUORUM0)) -> [ NODE2, ]
	(leader(V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2, VALUE0, QUORUM0 . (~decided(NODE2, VALUE0) | ~leader(NODE0) | ~member(NODE2, QUORUM0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1)))
---------------------------
(original clause)
	(~decided(n2, v0) | ~leader(n0) | ~member(n2, q0) | vote_request_msg(n0, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2, VALUE0, QUORUM0 . (~decided(NODE2, VALUE0) | ~leader(NODE0) | ~member(NODE2, QUORUM0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2, V0, Q0 . ((decided(N2, V0) & leader(N0) & member(N2, Q0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1))))
@   421s  is global clause? No
@   421s  Learning in F[7]: (forall N0, N1, N2, V0, Q0 . ((decided(N2, V0) & leader(N0) & member(N2, Q0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N1))))
@   421s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = false
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = true
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = true
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = true
	voted(n1) = true
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = true
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = true
	member(n1, q0) = true
	member(n1, q1) = false
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   421s  F[6] /\ T /\ C+ ?
@   422s  	Ans. UNSAT
@   426s  F[7] unsat core #3 	(ucsz: 10 -> 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	~vote_request_msg(n2, n1)
	leader(n0)
	decided(n2, v1)
(clause)
	(~decided(n2, v1) | ~leader(n0) | vote_request_msg(n2, n1))
(relations)
	decided
	leader
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE0)
	decided(NODE2, VALUE0)
	~vote_request_msg(NODE2, NODE1)
(antecedent reduction)
@   427s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), ]
	NODE1 -> [ ~vote_request_msg(NODE2, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), ~vote_request_msg(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ leader(V:node:e2:), ]
	NODE1 -> [ ~vote_request_msg(NODE2, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), ~vote_request_msg(V:node:e2:, NODE1), ]
ucubes2qv #3
	(decided(V:node:e2:, VALUE0) & ~vote_request_msg(V:node:e2:, NODE1)) -> [ NODE2, ]
	leader(V:node:e2:) -> [ NODE0, ]
	~vote_request_msg(NODE2, V:node:e2:) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE2, | NODE0, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE2, NODE1)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~leader(n0) | vote_request_msg(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE2, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N2, V0) & leader(N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N2, N1))))
@   427s  is global clause? No
@   427s  Learning in F[7]: (forall N0, N1, V0, N2 . ((decided(N2, V0) & leader(N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N2, N1))))
@   427s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   427s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   427s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   427s  F[5] /\ T /\ C+ ?
@   427s  	Ans. UNSAT
@   428s  F[6] unsat core #6 	(ucsz: 12 -> 10 -> 9 -> 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n1, v1)
	~vote_request_msg(n0, n2)
	votes(n0, n2)
	member(n2, q0)
	member(n2, q1)
	member(n2, q2)
(clause)
	(~decided(n1, v1) | ~member(n2, q0) | ~member(n2, q1) | ~member(n2, q2) | ~votes(n0, n2) | vote_request_msg(n0, n2))
(relations)
	decided
	member
	vote_request_msg
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	member(NODE2, QUORUM1)
	votes(NODE0, NODE2)
	decided(NODE1, VALUE0)
	member(NODE2, QUORUM2)
	~vote_request_msg(NODE0, NODE2)
	member(NODE2, QUORUM0)
(antecedent reduction)
@   429s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE2, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE2, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE2), ~vote_request_msg(NODE0, NODE2), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
	NODE2 -> [ member(NODE2, QUORUM0), votes(NODE0, NODE2), ~vote_request_msg(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, NODE2), votes(V:node:e2:, NODE2), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ]
	NODE2 -> [ ~vote_request_msg(NODE0, V:node:e2:), member(V:node:e2:, QUORUM0), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	decided(V:node:e2:, VALUE0) -> [ NODE1, ]
	(votes(V:node:e2:, NODE2) & ~vote_request_msg(V:node:e2:, NODE2)) -> [ NODE0, ]
	(member(V:node:e2:, QUORUM0) & votes(NODE0, V:node:e2:) & ~vote_request_msg(NODE0, V:node:e2:)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE1, | NODE0, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE2)))))
(non-epr version)
	(forall VALUE0 . (forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE2)))))
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE2)))))
---------------------------
(original clause)
	(~decided(n1, v1) | ~member(n2, q0) | ~member(n2, q1) | ~member(n2, q2) | ~votes(n0, n2) | vote_request_msg(n0, n2))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1) | vote_request_msg(NODE0, NODE2)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N2, Q0) & votes(N0, N2)) -> ((N0 = N1) | vote_request_msg(N0, N2))))))
@   431s  is global clause? No
@   431s  Learning in F[6]: (forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N2, Q0) & votes(N0, N2)) -> ((N0 = N1) | vote_request_msg(N0, N2))))))
@   431s  F[6] /\ T /\ C+ ?
@   431s  	Ans. UNSAT
@   435s  F[7] unsat core #3 	(ucsz: 9 -> 8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 3)
(minimal unsat core)
	decided(n1, v1)
	leader(n0)
	~vote_request_msg(n0, n2)
(clause)
	(~decided(n1, v1) | ~leader(n0) | vote_request_msg(n0, n2))
(relations)
	decided
	leader
	vote_request_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE0)
	~vote_request_msg(NODE0, NODE2)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   586s  antecedent: 3 -> 3

qv2cubes #3
	NODE0 -> [ leader(NODE0), ~vote_request_msg(NODE0, NODE2), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
	NODE2 -> [ ~vote_request_msg(NODE0, NODE2), ]
qv2ucubes #3
	NODE0 -> [ ~vote_request_msg(V:node:e2:, NODE2), leader(V:node:e2:), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ]
	NODE2 -> [ ~vote_request_msg(NODE0, V:node:e2:), ]
ucubes2qv #3
	decided(V:node:e2:, VALUE0) -> [ NODE1, ]
	~vote_request_msg(NODE0, V:node:e2:) -> [ NODE2, ]
	(leader(V:node:e2:) & ~vote_request_msg(V:node:e2:, NODE2)) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE2)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0) | vote_request_msg(n0, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE1, VALUE0) | ~leader(NODE0) | (NODE0 = NODE1) | (NODE0 = NODE2) | (NODE1 = NODE2) | vote_request_msg(NODE0, NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N1, V0) & leader(N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N2))))
@   586s  is global clause? No
@   586s  Learning in F[7]: (forall N0, N1, V0, N2 . ((decided(N1, V0) & leader(N0)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | vote_request_msg(N0, N2))))
@   586s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = false
	decided(n0, v1) = true
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

(cube in F[7])
	decided(n0, v0) = false
	decided(n0, v1) = false			--> modified
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   587s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   587s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   587s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   587s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   587s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   587s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   587s  F[3] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   587s  	Ans. SAT
(cube in F[3])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   587s  F[2] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   587s  	Ans. SAT
(cube in F[2])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = false			--> modified
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   587s  F[1] /\ T /\ C+ ?
@   587s  	Ans. UNSAT
@   587s  F[2] unsat core #2 	(ucsz: 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	vote_msg(n1, n2)
(clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n2))
(relations)
	vote_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	vote_msg(NODE1, NODE2)
(antecedent reduction)
@   588s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~vote_msg(NODE1, NODE0) | ~vote_msg(NODE1, NODE2)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | ~vote_msg(n1, n2))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~vote_msg(NODE1, NODE0) | ~vote_msg(NODE1, NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((vote_msg(N1, N0) & vote_msg(N1, N2)) -> (N0 = N2)))
@   588s  is global clause? No
@   588s  Learning in F[2]: (forall N0, N1, N2 . ((vote_msg(N1, N0) & vote_msg(N1, N2)) -> (N0 = N2)))
@   588s  F[2] /\ T /\ C+ ?
@   588s  	Ans. UNSAT
@   588s  F[3] unsat core #2 	(ucsz: 3 -> 2 -> 2)
(minimal unsat core)
	vote_msg(n1, n0)
	votes(n2, n1)
(clause)
	(~vote_msg(n1, n0) | ~votes(n2, n1))
(relations)
	vote_msg
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	vote_msg(NODE1, NODE0)
	votes(NODE2, NODE1)
(antecedent reduction)
@   588s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ vote_msg(NODE1, NODE0), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), votes(NODE2, NODE1), ]
	NODE2 -> [ votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ vote_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), vote_msg(V:node:e2:, NODE0), ]
	NODE2 -> [ votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(vote_msg(V:node:e2:, NODE0) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	votes(V:node:e2:, NODE1) -> [ NODE2, ]
	vote_msg(NODE1, V:node:e2:) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~vote_msg(n1, n0) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
@   588s  is global clause? No
@   588s  Learning in F[3]: (forall N0, N1, N2 . ((vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
@   588s  F[3] /\ T /\ C+ ?
@   588s  	Ans. UNSAT
@   588s  F[4] unsat core #2 	(ucsz: 4 -> 3 -> 2 -> 2)
(minimal unsat core)
	votes(n0, n1)
	votes(n2, n1)
(clause)
	(~votes(n0, n1) | ~votes(n2, n1))
(relations)
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE1)
	votes(NODE2, NODE1)
(antecedent reduction)
@   588s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

(boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1)))
---------------------------
(original clause)
	(~votes(n0, n1) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . ((NODE0 = NODE2) | ~votes(NODE0, NODE1) | ~votes(NODE2, NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@   588s  is global clause? No
@   588s  Learning in F[4]: (forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
@   588s  F[4] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   588s  	Ans. SAT
(cube in F[4])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   588s  F[3] /\ T /\ C+ ?
@   588s  	Ans. UNSAT
@   589s  F[4] unsat core #3 	(ucsz: 3 -> 3)
(minimal unsat core)
	leader(n2)
	vote_msg(n1, n0)
	votes(n2, n1)
(clause)
	(~leader(n2) | ~vote_msg(n1, n0) | ~votes(n2, n1))
(relations)
	vote_msg
	leader
	votes
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE2)
	vote_msg(NODE1, NODE0)
	votes(NODE2, NODE1)
(antecedent reduction)
@   589s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ vote_msg(NODE1, NODE0), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), votes(NODE2, NODE1), ]
	NODE2 -> [ leader(NODE2), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ vote_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), vote_msg(V:node:e2:, NODE0), ]
	NODE2 -> [ leader(V:node:e2:), votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(leader(V:node:e2:) & votes(V:node:e2:, NODE1)) -> [ NODE2, ]
	(vote_msg(V:node:e2:, NODE0) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	vote_msg(NODE1, V:node:e2:) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE2, | NODE1, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE2) | ~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~leader(n2) | ~vote_msg(n1, n0) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, NODE2 . (~leader(NODE2) | ~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, N2 . ((leader(N2) & vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
@   589s  is global clause? No
@   589s  Learning in F[4]: (forall N0, N1, N2 . ((leader(N2) & vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
@   589s  F[4] /\ T /\ C+ ?
@   589s  	Ans. UNSAT
@   590s  F[5] unsat core #6 	(ucsz: 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	member(n0, q1)
	member(n1, q0)
	member(n1, q2)
	leader(n2)
	votes(n0, n1)
	~votes(n2, n0)
(clause)
	(~leader(n2) | ~member(n0, q1) | ~member(n1, q0) | ~member(n1, q2) | ~votes(n0, n1) | votes(n2, n0))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE1)
	member(NODE0, QUORUM1)
	~votes(NODE2, NODE0)
	leader(NODE2)
	member(NODE1, QUORUM0)
	member(NODE1, QUORUM2)
(antecedent reduction)
@   590s  antecedent: 6 -> 5 (reduced)
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE1, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM2, QUORUM0, ]
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, ]
(partition) #2 quorum:e2: -> { QUORUM2, QUORUM0, | QUORUM1, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM1:
		member(NODE0, QUORUM1)
ucmulti:
	member(NODE1, QUORUM0)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE1), member(NODE0, QUORUM1), ~votes(NODE2, NODE0), ]
	NODE1 -> [ ((QUORUM1 = QUORUM0) | member(NODE1, QUORUM0)), votes(NODE0, NODE1), ]
	NODE2 -> [ leader(NODE2), ~votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ member(V:node:e2:, QUORUM1), ~votes(NODE2, V:node:e2:), votes(V:node:e2:, NODE1), ]
	NODE1 -> [ ((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ ~votes(V:node:e2:, NODE0), leader(V:node:e2:), ]
ucubes2qv #3
	(member(V:node:e2:, QUORUM1) & votes(V:node:e2:, NODE1) & ~votes(NODE2, V:node:e2:)) -> [ NODE0, ]
	(((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)) & votes(NODE0, V:node:e2:)) -> [ NODE1, ]
	(leader(V:node:e2:) & ~votes(V:node:e2:, NODE0)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE2) | ~member(NODE0, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE0))))
(non-epr version)
	(forall NODE0, NODE1, NODE2, QUORUM1 . (exists QUORUM0 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE2) | ~member(NODE0, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE0))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE2) | ~member(NODE0, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE0))))
---------------------------
(original clause)
	(~leader(n2) | ~member(n0, q1) | ~member(n1, q0) | ~member(n1, q2) | ~votes(n0, n1) | votes(n2, n0))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE2) | ~member(NODE0, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE0))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & leader(N2) & member(N0, Q1) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N0)))))
@   603s  is global clause? No
@   603s  Learning in F[5]: (exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & leader(N2) & member(N0, Q1) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N0)))))
@   603s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:recv_vote
	en: en_ext:recv_vote:e3 with value True
	inputs:
actionName ext:recv_vote
		V__fml:n:e1 -> n0
		V__fml:sender:e1 -> n0
@   603s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = true
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = false			--> modified
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   603s  F[4] /\ T /\ C+ ?
@   603s  	Ans. UNSAT
@   604s  F[5] unsat core #3 	(ucsz: 4 -> 3 -> 3)
(minimal unsat core)
	vote_msg(n1, n0)
	votes(n2, n1)
	decided(n2, v0)
(clause)
	(~decided(n2, v0) | ~vote_msg(n1, n0) | ~votes(n2, n1))
(relations)
	decided
	votes
	vote_msg
(fullsorts)
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	decided(NODE2, VALUE0)
	vote_msg(NODE1, NODE0)
	votes(NODE2, NODE1)
(antecedent reduction)
@   604s  antecedent: 3 -> 2 (reduced)
	removed: NODE1

qv2cubes #3
	NODE0 -> [ vote_msg(NODE1, NODE0), ]
	NODE1 -> [ vote_msg(NODE1, NODE0), votes(NODE2, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ vote_msg(NODE1, V:node:e2:), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), vote_msg(V:node:e2:, NODE0), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	(decided(V:node:e2:, VALUE0) & votes(V:node:e2:, NODE1)) -> [ NODE2, ]
	(vote_msg(V:node:e2:, NODE0) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
	vote_msg(NODE1, V:node:e2:) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE2, | NODE1, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
(boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(original clause)
	(~decided(n2, v0) | ~vote_msg(n1, n0) | ~votes(n2, n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, NODE2 . (~decided(NODE2, VALUE0) | ~vote_msg(NODE1, NODE0) | ~votes(NODE2, NODE1) | (NODE0 = NODE2)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, N2 . ((decided(N2, V0) & vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
@   604s  is global clause? No
@   604s  Learning in F[5]: (forall N0, N1, V0, N2 . ((decided(N2, V0) & vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
@   604s  F[5] /\ T /\ C+ ?
@   604s  	Ans. UNSAT
@   605s  F[6] unsat core #6 	(ucsz: 10 -> 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n2, v0)
	member(n0, q1)
	member(n1, q0)
	member(n1, q2)
	votes(n0, n1)
	~votes(n2, n0)
(clause)
	(~decided(n2, v0) | ~member(n0, q1) | ~member(n1, q0) | ~member(n1, q2) | ~votes(n0, n1) | votes(n2, n0))
(relations)
	decided
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE1)
	member(NODE0, QUORUM1)
	~votes(NODE2, NODE0)
	member(NODE1, QUORUM0)
	member(NODE1, QUORUM2)
	decided(NODE2, VALUE0)
(antecedent reduction)
@   606s  antecedent: 6 -> 5 (reduced)
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE1, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM2, QUORUM0, ]
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, ]
(partition) #2 quorum:e2: -> { QUORUM2, QUORUM0, | QUORUM1, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM1:
		member(NODE0, QUORUM1)
ucmulti:
	member(NODE1, QUORUM0)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE1), member(NODE0, QUORUM1), ~votes(NODE2, NODE0), ]
	NODE1 -> [ ((QUORUM1 = QUORUM0) | member(NODE1, QUORUM0)), votes(NODE0, NODE1), ]
	NODE2 -> [ decided(NODE2, VALUE0), ~votes(NODE2, NODE0), ]
qv2ucubes #3
	NODE0 -> [ member(V:node:e2:, QUORUM1), ~votes(NODE2, V:node:e2:), votes(V:node:e2:, NODE1), ]
	NODE1 -> [ ((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), ~votes(V:node:e2:, NODE0), ]
ucubes2qv #3
	(member(V:node:e2:, QUORUM1) & votes(V:node:e2:, NODE1) & ~votes(NODE2, V:node:e2:)) -> [ NODE0, ]
	(((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)) & votes(NODE0, V:node:e2:)) -> [ NODE1, ]
	(decided(V:node:e2:, VALUE0) & ~votes(V:node:e2:, NODE0)) -> [ NODE2, ]
(partition) #3 node:e2: -> { NODE0, | NODE1, | NODE2, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE0, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE0)))))
(non-epr version)
	(forall VALUE0 . (forall NODE0, NODE1, NODE2, QUORUM1 . (exists QUORUM0 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE0, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE0)))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE0, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE0)))))
---------------------------
(original clause)
	(~decided(n2, v0) | ~member(n0, q1) | ~member(n1, q0) | ~member(n1, q2) | ~votes(n0, n1) | votes(n2, n0))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE0, QUORUM1) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE0)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & decided(N2, V0) & member(N0, Q1) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N0))))))
@   613s  is global clause? No
@   613s  Learning in F[6]: (forall V0 . (exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & decided(N2, V0) & member(N0, Q1) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N0))))))
@   613s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   613s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false			--> modified
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   613s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   613s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = false
	leader(n2) = false			--> modified
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = true
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = false
	member(n2, q1) = false
	member(n2, q2) = false

@   613s  F[4] /\ T /\ C+ ?
@   613s  	Ans. UNSAT
@   614s  F[5] unsat core #6 	(ucsz: 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	member(n0, q1)
	member(n1, q0)
	leader(n0)
	member(n1, q2)
	~votes(n0, n0)
	votes(n2, n1)
(clause)
	(~leader(n0) | ~member(n0, q1) | ~member(n1, q0) | ~member(n1, q2) | ~votes(n2, n1) | votes(n0, n0))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	~votes(NODE0, NODE0)
	member(NODE0, QUORUM1)
	member(NODE1, QUORUM2)
	leader(NODE0)
	member(NODE1, QUORUM0)
	votes(NODE2, NODE1)
(antecedent reduction)
@   615s  antecedent: 6 -> 5 (reduced)
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE0, QUORUM1), ]
	QUORUM2 -> [ member(NODE1, QUORUM2), ]
	QUORUM0 -> [ member(NODE1, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE0, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE1, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM2, QUORUM0, ]
	member(NODE0, V:quorum:e2:) -> [ QUORUM1, ]
(partition) #2 quorum:e2: -> { QUORUM2, QUORUM0, | QUORUM1, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM1:
		member(NODE0, QUORUM1)
ucmulti:
	member(NODE1, QUORUM0)
qv2cubes #3
	NODE0 -> [ leader(NODE0), ~votes(NODE0, NODE0), member(NODE0, QUORUM1), ]
	NODE1 -> [ ((QUORUM1 = QUORUM0) | member(NODE1, QUORUM0)), votes(NODE2, NODE1), ]
	NODE2 -> [ votes(NODE2, NODE1), ]
qv2ucubes #3
	NODE0 -> [ ~votes(V:node:e2:, V:node:e2:), member(V:node:e2:, QUORUM1), leader(V:node:e2:), ]
	NODE1 -> [ votes(NODE2, V:node:e2:), ((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)), ]
	NODE2 -> [ votes(V:node:e2:, NODE1), ]
ucubes2qv #3
	votes(V:node:e2:, NODE1) -> [ NODE2, ]
	(leader(V:node:e2:) & member(V:node:e2:, QUORUM1) & ~votes(V:node:e2:, V:node:e2:)) -> [ NODE0, ]
	(((QUORUM1 = QUORUM0) | member(V:node:e2:, QUORUM0)) & votes(NODE2, V:node:e2:)) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE2, | NODE0, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE0) | ~member(NODE0, QUORUM1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | votes(NODE0, NODE0))))
(non-epr version)
	(forall NODE0, NODE1, NODE2, QUORUM1 . (exists QUORUM0 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE0) | ~member(NODE0, QUORUM1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | votes(NODE0, NODE0))))
	Both verions not allowed!
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE0) | ~member(NODE0, QUORUM1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | votes(NODE0, NODE0))))
---------------------------
(original clause)
	(~leader(n0) | ~member(n0, q1) | ~member(n1, q0) | ~member(n1, q2) | ~votes(n2, n1) | votes(n0, n0))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2, QUORUM1 . ((~(QUORUM1 = QUORUM0) & ~member(NODE1, QUORUM0)) | ~leader(NODE0) | ~member(NODE0, QUORUM1) | ~votes(NODE2, NODE1) | (NODE0 = NODE2) | votes(NODE0, NODE0))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & leader(N0) & member(N0, Q1) & votes(N2, N1)) -> ((N0 = N2) | votes(N0, N0)))))
@   622s  is global clause? No
@   622s  Learning in F[5]: (exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & leader(N0) & member(N0, Q1) & votes(N2, N1)) -> ((N0 = N2) | votes(N0, N0)))))
@   622s  F[5] /\ T /\ C+ ?
@   622s  	Ans. UNSAT
@   624s  F[6] unsat core #4 	(ucsz: 10 -> 7 -> 5 -> 4 -> 4)
(minimal unsat core)
	leader(n2)
	member(n0, q1)
	~votes(n2, n0)
	leader(n0)
(clause)
	(~leader(n0) | ~leader(n2) | ~member(n0, q1) | votes(n2, n0))
(relations)
	leader
	member
	votes
(cube: std)
	leader(NODE0)
	leader(NODE1)
	~votes(NODE1, NODE0)
	member(NODE0, QUORUM0)
(antecedent reduction)
@   626s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, QUORUM0 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1) | votes(NODE1, NODE0) | ~member(NODE0, QUORUM0)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n2) | ~member(n0, q1) | votes(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, QUORUM0 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1) | votes(NODE1, NODE0) | ~member(NODE0, QUORUM0)))
---------------------------
(clause-type: univ)	(forall N0, N1, Q0 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N1, N0))))
@   626s  is global clause? No
@   626s  Learning in F[6]: (forall N0, N1, Q0 . ((leader(N0) & leader(N1) & member(N0, Q0)) -> ((N0 = N1) | votes(N1, N0))))
@   626s  F[6] /\ T /\ C+ ?
@   626s  	Ans. UNSAT
@   627s  F[7] unsat core #4 	(ucsz: 8 -> 7 -> 6 -> 4 -> 4)
(minimal unsat core)
	member(n0, q1)
	~votes(n2, n0)
	decided(n2, v0)
	leader(n0)
(clause)
	(~decided(n2, v0) | ~leader(n0) | ~member(n0, q1) | votes(n2, n0))
(relations)
	decided
	leader
	member
	votes
(cube: std)
	leader(NODE0)
	~votes(NODE1, NODE0)
	decided(NODE1, VALUE0)
	member(NODE0, QUORUM0)
(antecedent reduction)
@   628s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0, QUORUM0 . (~leader(NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0) | votes(NODE1, NODE0) | ~member(NODE0, QUORUM0)))
---------------------------
(original clause)
	(~decided(n2, v0) | ~leader(n0) | ~member(n0, q1) | votes(n2, n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0, QUORUM0 . (~leader(NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0) | votes(NODE1, NODE0) | ~member(NODE0, QUORUM0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0, Q0 . ((leader(N0) & decided(N1, V0) & member(N0, Q0)) -> ((N0 = N1) | votes(N1, N0))))
@   628s  is global clause? No
@   628s  Learning in F[7]: (forall N0, N1, V0, Q0 . ((leader(N0) & decided(N1, V0) & member(N0, Q0)) -> ((N0 = N1) | votes(N1, N0))))
@   628s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = true
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = true
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = true
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   628s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   628s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false
	decided(n2, v0) = false
	decided(n2, v1) = true
	leader(n0) = false			--> modified
	leader(n1) = false
	leader(n2) = true
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = true
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = true
	vote_msg(n2, n0) = false
	vote_msg(n2, n1) = false
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = true
	vote_request_msg(n0, n2) = false
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = false
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = true
	vote_request_msg(n2, n2) = true
	voted(n0) = false
	voted(n1) = true
	voted(n2) = false
	votes(n0, n0) = false
	votes(n0, n1) = true
	votes(n0, n2) = false
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = false
	votes(n2, n0) = false
	votes(n2, n1) = true
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = true
	member(n1, q1) = true
	member(n1, q2) = true
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = false

@   628s  F[5] /\ T /\ C+ ?
@   628s  	Ans. UNSAT
@   629s  F[6] unsat core #6 	(ucsz: 10 -> 8 -> 7 -> 6 -> 6)
(minimal unsat core)
	decided(n2, v1)
	member(n2, q0)
	member(n1, q2)
	votes(n0, n1)
	member(n2, q1)
	~votes(n2, n2)
(clause)
	(~decided(n2, v1) | ~member(n1, q2) | ~member(n2, q0) | ~member(n2, q1) | ~votes(n0, n1) | votes(n2, n2))
(relations)
	decided
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	member(NODE2, QUORUM1)
	member(NODE2, QUORUM0)
	votes(NODE0, NODE1)
	member(NODE1, QUORUM2)
	~votes(NODE2, NODE2)
	decided(NODE2, VALUE0)
(antecedent reduction)
@   630s  antecedent: 6 -> 5 (reduced)
	removed: NODE1

qv2cubes #3
	QUORUM1 -> [ member(NODE2, QUORUM1), ]
	QUORUM2 -> [ member(NODE1, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE1, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #2
	member(NODE1, V:quorum:e2:) -> [ QUORUM2, ]
	member(NODE2, V:quorum:e2:) -> [ QUORUM1, QUORUM0, ]
(partition) #2 quorum:e2: -> { QUORUM2, | QUORUM1, QUORUM0, | }
	#1 singles, #1 multiples (out of #2 cells)
ucsingle:
	QUORUM2:
		member(NODE1, QUORUM2)
ucmulti:
	member(NODE2, QUORUM0)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE1), ]
	NODE1 -> [ votes(NODE0, NODE1), member(NODE1, QUORUM2), ]
	NODE2 -> [ decided(NODE2, VALUE0), ~votes(NODE2, NODE2), ((QUORUM2 = QUORUM0) | member(NODE2, QUORUM0)), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE1), ]
	NODE1 -> [ member(V:node:e2:, QUORUM2), votes(NODE0, V:node:e2:), ]
	NODE2 -> [ decided(V:node:e2:, VALUE0), ~votes(V:node:e2:, V:node:e2:), ((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)), ]
ucubes2qv #3
	(((QUORUM2 = QUORUM0) | member(V:node:e2:, QUORUM0)) & decided(V:node:e2:, VALUE0) & ~votes(V:node:e2:, V:node:e2:)) -> [ NODE2, ]
	(member(V:node:e2:, QUORUM2) & votes(NODE0, V:node:e2:)) -> [ NODE1, ]
	votes(V:node:e2:, NODE1) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE2, | NODE1, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: quorum -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> quorum)? False
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall QUORUM2, NODE0, NODE1, NODE2 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE1, QUORUM2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE2)))))
(non-epr version)
	(forall VALUE0 . (forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE1, QUORUM2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE2)))))
	Both verions not allowed!
(epr-reduction) -> SAT
	EPR-reduction is not allowed!
	Learning non-epr version instead.
(boosted clause)
	(forall VALUE0 . (forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE1, QUORUM2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE2)))))
---------------------------
(original clause)
	(~decided(n2, v1) | ~member(n1, q2) | ~member(n2, q0) | ~member(n2, q1) | ~votes(n0, n1) | votes(n2, n2))
(learnt sym-boosted clause)
	(forall VALUE0 . (forall QUORUM2, NODE0, NODE1, NODE2 . (exists QUORUM0 . ((~(QUORUM2 = QUORUM0) & ~member(NODE2, QUORUM0)) | ~decided(NODE2, VALUE0) | ~member(NODE1, QUORUM2) | ~votes(NODE0, NODE1) | (NODE0 = NODE2) | votes(NODE2, NODE2)))))
---------------------------
(clause-type: non-epr)	(forall V0 . (forall Q2, N0, N1, N2 . (exists Q0 . ((((Q2 = Q0) | member(N2, Q0)) & decided(N2, V0) & member(N1, Q2) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N2))))))
@   634s  is global clause? No
@   634s  Learning in F[6]: (forall V0 . (forall Q2, N0, N1, N2 . (exists Q0 . ((((Q2 = Q0) | member(N2, Q0)) & decided(N2, V0) & member(N1, Q2) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N2))))))
@   634s  F[6] /\ T /\ C+ ?
@   635s  	Ans. UNSAT
@   636s  F[7] unsat core #5 	(ucsz: 9 -> 8 -> 6 -> 5 -> 5)
(minimal unsat core)
	~votes(n0, n2)
	member(n2, q0)
	member(n2, q1)
	leader(n0)
	decided(n2, v1)
(clause)
	(~decided(n2, v1) | ~leader(n0) | ~member(n2, q0) | ~member(n2, q1) | votes(n0, n2))
(relations)
	decided
	leader
	member
	votes
(cube: std)
	leader(NODE0)
	member(NODE1, QUORUM0)
	~votes(NODE0, NODE1)
	decided(NODE1, VALUE0)
	member(NODE1, QUORUM1)
(antecedent reduction)
@   637s  antecedent: 4 -> 4

(boosted clause)
	(forall QUORUM1, NODE1, NODE0, VALUE0, QUORUM0 . (votes(NODE0, NODE1) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | ~member(NODE1, QUORUM1) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0) | (QUORUM0 = QUORUM1)))
---------------------------
(original clause)
	(~decided(n2, v1) | ~leader(n0) | ~member(n2, q0) | ~member(n2, q1) | votes(n0, n2))
(learnt sym-boosted clause)
	(forall QUORUM1, NODE1, NODE0, VALUE0, QUORUM0 . (votes(NODE0, NODE1) | ~leader(NODE0) | ~member(NODE1, QUORUM0) | ~member(NODE1, QUORUM1) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0) | (QUORUM0 = QUORUM1)))
---------------------------
(clause-type: univ)	(forall Q1, N1, N0, V0, Q0 . ((leader(N0) & member(N1, Q0) & member(N1, Q1) & decided(N1, V0)) -> (votes(N0, N1) | (N0 = N1) | (Q0 = Q1))))
@   637s  is global clause? No
@   637s  Learning in F[7]: (forall Q1, N1, N0, V0, Q0 . ((leader(N0) & member(N1, Q0) & member(N1, Q1) & decided(N1, V0)) -> (votes(N0, N1) | (N0 = N1) | (Q0 = Q1))))
@   637s  F[7] /\ T /\ !P+ -> SAT
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
(cube in !P)
	decided(n0, v0) = true
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

(cube in F[7])
	decided(n0, v0) = false			--> modified
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   637s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:become_leader
	en: en_ext:become_leader:e3 with value True
	inputs:
actionName ext:become_leader
		V__fml:n:e1 -> n0
		V__fml:q:e1 -> q0
@   637s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = true
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false			--> modified
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   637s  F[5] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   638s  	Ans. SAT
(cube in F[5])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = false
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   638s  F[4] /\ T /\ C+ ?
@   638s  	Ans. UNSAT
@   639s  F[5] unsat core #5 	(ucsz: 7 -> 6 -> 5 -> 5)
(minimal unsat core)
	member(n2, q0)
	member(n2, q1)
	votes(n0, n2)
	member(n2, q2)
	leader(n1)
(clause)
	(~leader(n1) | ~member(n2, q0) | ~member(n2, q1) | ~member(n2, q2) | ~votes(n0, n2))
(relations)
	leader
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	leader(NODE1)
	votes(NODE0, NODE2)
	member(NODE2, QUORUM1)
	member(NODE2, QUORUM0)
	member(NODE2, QUORUM2)
(antecedent reduction)
@   639s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE2, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE2, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE2), ]
	NODE1 -> [ leader(NODE1), ]
	NODE2 -> [ votes(NODE0, NODE2), member(NODE2, QUORUM0), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), ]
	NODE1 -> [ leader(V:node:e2:), ]
	NODE2 -> [ member(V:node:e2:, QUORUM0), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	(member(V:node:e2:, QUORUM0) & votes(NODE0, V:node:e2:)) -> [ NODE2, ]
	votes(V:node:e2:, NODE2) -> [ NODE0, ]
	leader(V:node:e2:) -> [ NODE1, ]
(partition) #3 node:e2: -> { NODE2, | NODE0, | NODE1, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
(epr reduced)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1))))
(non-epr version)
	(forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~leader(NODE1) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1))))
(epr-reduction) -> UNSAT
(boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1))))
---------------------------
(original clause)
	(~leader(n1) | ~member(n2, q0) | ~member(n2, q1) | ~member(n2, q2) | ~votes(n0, n2))
(learnt sym-boosted clause)
	(exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~leader(NODE1) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1))))
---------------------------
(clause-type: epr)	(exists Q0 . (forall N0, N1, N2 . ((leader(N1) & member(N2, Q0) & votes(N0, N2)) -> (N0 = N1))))
@   650s  is global clause? No
@   650s  Learning in F[5]: (exists Q0 . (forall N0, N1, N2 . ((leader(N1) & member(N2, Q0) & votes(N0, N2)) -> (N0 = N1))))
@   650s  F[5] /\ T /\ C+ ?
@   650s  	Ans. UNSAT
@   651s  F[6] unsat core #5 	(ucsz: 8 -> 7 -> 6 -> 5 -> 5)
(minimal unsat core)
	member(n2, q0)
	member(n2, q1)
	decided(n1, v1)
	member(n2, q2)
	votes(n0, n2)
(clause)
	(~decided(n1, v1) | ~member(n2, q0) | ~member(n2, q1) | ~member(n2, q2) | ~votes(n0, n2))
(relations)
	decided
	member
	votes
(fullsorts)
	quorum:e2: -> [ QUORUM0, QUORUM1, QUORUM2, ]
	node:e2: -> [ NODE0, NODE1, NODE2, ]
(cube: std)
	votes(NODE0, NODE2)
	member(NODE2, QUORUM1)
	member(NODE2, QUORUM0)
	member(NODE2, QUORUM2)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   651s  antecedent: 6 -> 5 (reduced)
	removed: NODE2

qv2cubes #3
	QUORUM1 -> [ member(NODE2, QUORUM1), ]
	QUORUM2 -> [ member(NODE2, QUORUM2), ]
	QUORUM0 -> [ member(NODE2, QUORUM0), ]
qv2ucubes #3
	QUORUM1 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM2 -> [ member(NODE2, V:quorum:e2:), ]
	QUORUM0 -> [ member(NODE2, V:quorum:e2:), ]
ucubes2qv #1
	member(NODE2, V:quorum:e2:) -> [ QUORUM1, QUORUM2, QUORUM0, ]
(partition) #1 quorum:e2: -> { QUORUM1, QUORUM2, QUORUM0, | }
	#0 singles, #1 multiples (out of #1 cells)
qv2cubes #3
	NODE0 -> [ votes(NODE0, NODE2), ]
	NODE1 -> [ decided(NODE1, VALUE0), ]
	NODE2 -> [ votes(NODE0, NODE2), member(NODE2, QUORUM0), ]
qv2ucubes #3
	NODE0 -> [ votes(V:node:e2:, NODE2), ]
	NODE1 -> [ decided(V:node:e2:, VALUE0), ]
	NODE2 -> [ member(V:node:e2:, QUORUM0), votes(NODE0, V:node:e2:), ]
ucubes2qv #3
	decided(V:node:e2:, VALUE0) -> [ NODE1, ]
	(member(V:node:e2:, QUORUM0) & votes(NODE0, V:node:e2:)) -> [ NODE2, ]
	votes(V:node:e2:, NODE2) -> [ NODE0, ]
(partition) #3 node:e2: -> { NODE1, | NODE2, | NODE0, | }
	#3 singles, #0 multiples (out of #3 cells)
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: node -> quorum)? False
	(epr check: reverse)	allowed(arc: quorum -> node)? True
	(epr check: forward)	allowed(arc: value -> quorum)? True
(epr reduced)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1)))))
(non-epr version)
	(forall VALUE0 . (forall NODE0, NODE1, NODE2 . (exists QUORUM0 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1)))))
(epr-reduction) -> UNSAT
(boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1)))))
---------------------------
(original clause)
	(~decided(n1, v1) | ~member(n2, q0) | ~member(n2, q1) | ~member(n2, q2) | ~votes(n0, n2))
(learnt sym-boosted clause)
	(forall VALUE0 . (exists QUORUM0 . (forall NODE0, NODE1, NODE2 . (~decided(NODE1, VALUE0) | ~member(NODE2, QUORUM0) | ~votes(NODE0, NODE2) | (NODE0 = NODE1)))))
---------------------------
(clause-type: epr)	(forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N2, Q0) & votes(N0, N2)) -> (N0 = N1)))))
@   652s  is global clause? No
@   652s  Learning in F[6]: (forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N2, Q0) & votes(N0, N2)) -> (N0 = N1)))))
@   652s  F[6] /\ T /\ C+ ?
####################MODEL PRINT: ####################
####################END PRINT MODEL:####################
(action info)
	action: ext:decide
	en: en_ext:decide:e3 with value True
	inputs:
actionName ext:decide
		V__fml:v:e1 -> v0
		V__fml:n:e1 -> n0
@   652s  	Ans. SAT
(cube in F[6])
	decided(n0, v0) = false
	decided(n0, v1) = false
	decided(n1, v0) = false
	decided(n1, v1) = false			--> modified
	decided(n2, v0) = false
	decided(n2, v1) = false
	leader(n0) = true
	leader(n1) = true
	leader(n2) = false
	vote_msg(n0, n0) = false
	vote_msg(n0, n1) = false
	vote_msg(n0, n2) = false
	vote_msg(n1, n0) = false
	vote_msg(n1, n1) = false
	vote_msg(n1, n2) = false
	vote_msg(n2, n0) = true
	vote_msg(n2, n1) = true
	vote_msg(n2, n2) = false
	vote_request_msg(n0, n0) = false
	vote_request_msg(n0, n1) = false
	vote_request_msg(n0, n2) = true
	vote_request_msg(n1, n0) = false
	vote_request_msg(n1, n1) = false
	vote_request_msg(n1, n2) = true
	vote_request_msg(n2, n0) = false
	vote_request_msg(n2, n1) = false
	vote_request_msg(n2, n2) = false
	voted(n0) = false
	voted(n1) = false
	voted(n2) = true
	votes(n0, n0) = false
	votes(n0, n1) = false
	votes(n0, n2) = true
	votes(n1, n0) = false
	votes(n1, n1) = false
	votes(n1, n2) = true
	votes(n2, n0) = false
	votes(n2, n1) = false
	votes(n2, n2) = false
	member(n0, q0) = false
	member(n0, q1) = false
	member(n0, q2) = false
	member(n1, q0) = false
	member(n1, q1) = false
	member(n1, q2) = false
	member(n2, q0) = true
	member(n2, q1) = true
	member(n2, q2) = true

@   652s  F[5] /\ T /\ C+ ?
@   652s  	Ans. UNSAT
@   653s  F[6] unsat core #2 	(ucsz: 7 -> 6 -> 5 -> 2 -> 2)
(minimal unsat core)
	leader(n0)
	leader(n1)
(clause)
	(~leader(n0) | ~leader(n1))
(relations)
	leader
(cube: std)
	leader(NODE0)
	leader(NODE1)
(antecedent reduction)
@   653s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1)))
---------------------------
(original clause)
	(~leader(n0) | ~leader(n1))
(learnt sym-boosted clause)
	(forall NODE0, NODE1 . (~leader(NODE0) | ~leader(NODE1) | (NODE0 = NODE1)))
---------------------------
(clause-type: univ)	(forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
@   653s  is global clause? No
@   654s  Learning in F[6]: (forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
@   654s  F[6] /\ T /\ C+ ?
@   654s  	Ans. UNSAT
@   655s  F[7] unsat core #2 	(ucsz: 7 -> 6 -> 5 -> 3 -> 2 -> 2)
(minimal unsat core)
	decided(n1, v1)
	leader(n0)
(clause)
	(~decided(n1, v1) | ~leader(n0))
(relations)
	decided
	leader
(cube: std)
	leader(NODE0)
	decided(NODE1, VALUE0)
(antecedent reduction)
@   656s  antecedent: 2 -> 2

(boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(original clause)
	(~decided(n1, v1) | ~leader(n0))
(learnt sym-boosted clause)
	(forall NODE0, NODE1, VALUE0 . (~leader(NODE0) | (NODE0 = NODE1) | ~decided(NODE1, VALUE0)))
---------------------------
(clause-type: univ)	(forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
@   656s  is global clause? No
@   656s  Learning in F[7]: (forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
@   656s  F[7] /\ T /\ !P+ -> UNSAT
Frames: #8
	F[0]: #1
		((forall N3_2, N3_1 . ~vote_request_msg(N3_2, N3_1)) & (forall N3_2 . ~voted(N3_2)) & (forall N3_2, N3 . ~vote_msg(N3_2, N3)) & (forall N3_2, N3_3 . ~votes(N3_2, N3_3)) & (forall N3_2 . ~leader(N3_2)) & (forall N3_2, V3 . ~decided(N3_2, V3)))
	F[1]: #1
		(forall N0, N1 . ~vote_msg(N1, N0))
	F[2]: #3
		(forall N0, N1, N2 . ((vote_msg(N1, N0) & vote_msg(N1, N2)) -> (N0 = N2)))
		(forall N0, N1 . ~votes(N0, N1))
		(forall N0, N1 . (vote_msg(N0, N1) -> (vote_request_msg(N1, N0) | (N0 = N1))))
	F[3]: #5
		(forall N0, N1, N2 . ((vote_msg(N0, N1) & votes(N2, N0)) -> ((N0 = N2) | vote_request_msg(N1, N0))))
		(forall N0, N1, N2 . ((votes(N1, N2) & votes(N0, N1)) -> (N0 = N2)))
		(forall N0, N1, N2 . ((vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0 . ~leader(N0))
		(forall N0, N1, N2 . ((votes(N0, N0) & votes(N2, N1)) -> (N0 = N2)))
	F[4]: #7
		(forall N0, N1, N2 . ((leader(N2) & vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, V0 . ~decided(N0, V0))
		(forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, N1 . ((leader(N0) & votes(N1, N0)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
		(forall N0, N1 . ((leader(N1) & votes(N0, N0)) -> (N0 = N1)))
		(forall N0, N1 . ((leader(N0) & votes(N0, N0) & votes(N0, N1)) -> (N0 = N1)))
		(forall N0, N1 . ((leader(N1) & votes(N1, N0)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
	F[5]: #15
		(exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N2, Q0)) & leader(N2) & member(N1, Q1) & votes(N0, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1) | votes(N2, N2)))))
		(forall N0, N1, N2 . ((leader(N0) & votes(N0, N1) & votes(N0, N2) & votes(N2, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N2, N0))))
		(forall N0, N1, N2 . ((leader(N2) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, N1, V0, N2 . ((decided(N2, V0) & vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, N1, V0 . ((votes(N0, N0) & decided(N1, V0)) -> (N0 = N1)))
		(forall N0, N1, V0 . ((decided(N0, V0) & votes(N0, N0) & votes(N0, N1)) -> (N0 = N1)))
		(forall N0, N1, V0 . ((votes(N0, N1) & decided(N1, V0)) -> (vote_request_msg(N0, N1) | (N0 = N1))))
		(exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & leader(N0) & member(N0, Q1) & votes(N2, N1)) -> ((N0 = N2) | votes(N0, N0)))))
		(exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N2, Q0)) & leader(N0) & member(N1, Q2) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2))))
		(exists Q0 . (forall N0, N1 . ((leader(N1) & member(N0, Q0)) -> votes(N1, N0))))
		(exists Q0 . (forall N0, N1, N2 . ((leader(N1) & member(N2, Q0) & votes(N0, N2)) -> (N0 = N1))))
		(forall N0, N1, V0 . ((votes(N1, N0) & decided(N1, V0)) -> (vote_request_msg(N1, N0) | (N0 = N1))))
		(exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & leader(N2) & member(N0, Q1) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N0)))))
		(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N2) & votes(N1, N2)) -> (N0 = N1)))
		(forall N0, N1, N2 . ((leader(N1) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0) & votes(N1, N2)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
	F[6]: #9
		(forall N0, N1 . ((leader(N0) & leader(N1)) -> (N0 = N1)))
		(forall V0 . (exists Q0 . (forall N0, N1, N2 . ((decided(N1, V0) & member(N2, Q0) & votes(N0, N2)) -> (N0 = N1)))))
		(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N0) & votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
		(forall N0, N1, V0, N2 . ((decided(N2, V0) & votes(N0, N1) & votes(N0, N2) & votes(N2, N0) & votes(N2, N1)) -> ((N0 = N2) | vote_request_msg(N0, N2))))
		(forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N1, V0) & member(N2, Q2) & votes(N0, N2)) -> ((N0 = N1) | vote_request_msg(N1, N2) | votes(N1, N1))))))
		(forall V0 . (forall Q2, N0, N1, N2 . (exists Q0 . ((((Q2 = Q0) | member(N2, Q0)) & decided(N2, V0) & member(N1, Q2) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N2))))))
		(forall V0 . (exists Q0 . (forall Q2, N0, N1, N2 . ((((Q2 = Q0) | member(N1, Q0)) & decided(N2, V0) & member(N2, Q2) & votes(N0, N1)) -> ((N0 = N2) | vote_request_msg(N0, N1) | votes(N2, N2))))))
		(forall V0 . (exists Q0 . (forall N0, N1, N2, Q1 . ((((Q1 = Q0) | member(N1, Q0)) & decided(N2, V0) & member(N0, Q1) & votes(N0, N1)) -> ((N0 = N2) | votes(N2, N0))))))
		(forall N0, N1, V0, N2 . ((decided(N1, V0) & votes(N0, N1) & votes(N0, N2) & votes(N1, N0) & votes(N1, N2)) -> ((N0 = N1) | vote_request_msg(N1, N0))))
	F[7]: #9
		(forall N0, N1, N2 . ((leader(N0) & leader(N2)) -> ((N0 = N1) | (N0 = N2) | (N1 = N2) | votes(N2, N1))))
		(forall N0, N1 . (vote_msg(N1, N0) -> voted(N1)))
		(forall N0, N1, N2, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N2) & member(N1, Q0)) -> (votes(N2, N0) | votes(N2, N1)))))
		(forall N0, N1 . (votes(N0, N1) -> vote_msg(N1, N0)))
		(forall N0, N1 . ((vote_msg(N1, N1) & vote_msg(N1, N0)) -> (N0 = N1)))
		(forall N0, N1 . (exists Q0 . ((leader(N0) & member(N1, Q0)) -> votes(N0, N1))))
		(forall N0, N1, Q0 . (exists Q1 . ((((Q0 = Q1) | member(N0, Q1)) & leader(N0) & member(N1, Q0)) -> (votes(N0, N0) | votes(N0, N1)))))
		(forall N0, N1, V0 . ((leader(N0) & decided(N1, V0)) -> (N0 = N1)))
		(forall N0, V0 . (decided(N0, V0) -> leader(N0)))
@   656s  
Adding frame 8...
Trying forwarding F[1]
Trying forwarding F[2]
Forwarded #1 to F[3]
@   656s  Learning in F[3]: (forall N0, N1, N2 . ((vote_msg(N1, N0) & vote_msg(N1, N2)) -> (N0 = N2)))
Trying forwarding F[3]
Forwarded #2 to F[4]
@   657s  Learning in F[4]: (forall N0, N1, N2 . ((vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
@   657s  Learning in F[4]: (forall N0, N1, N2 . ((vote_msg(N1, N0) & vote_msg(N1, N2)) -> (N0 = N2)))
Trying forwarding F[4]
Forwarded #3 to F[5]
@   658s  Learning in F[5]: (forall N0, N1, N2 . ((vote_msg(N1, N0) & votes(N2, N1)) -> (N0 = N2)))
@   658s  Learning in F[5]: (forall N0, N1, N2 . ((vote_msg(N1, N0) & vote_msg(N1, N2)) -> (N0 = N2)))
@   658s  Learning in F[5]: (forall N0, N1, N2 . ((votes(N0, N1) & votes(N2, N1)) -> (N0 = N2)))
Trying forwarding F[5]
